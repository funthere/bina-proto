// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.25.2
// source: los_credit_arrangement.proto

package golang

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	CreditArrangement_CreateCreditArrangement_FullMethodName = "/protobuf.los.CreditArrangement/CreateCreditArrangement"
)

// CreditArrangementClient is the client API for CreditArrangement service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CreditArrangementClient interface {
	CreateCreditArrangement(ctx context.Context, in *ReqCreditArrangement, opts ...grpc.CallOption) (*ResCreateCreditArrangement, error)
}

type creditArrangementClient struct {
	cc grpc.ClientConnInterface
}

func NewCreditArrangementClient(cc grpc.ClientConnInterface) CreditArrangementClient {
	return &creditArrangementClient{cc}
}

func (c *creditArrangementClient) CreateCreditArrangement(ctx context.Context, in *ReqCreditArrangement, opts ...grpc.CallOption) (*ResCreateCreditArrangement, error) {
	out := new(ResCreateCreditArrangement)
	err := c.cc.Invoke(ctx, CreditArrangement_CreateCreditArrangement_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CreditArrangementServer is the server API for CreditArrangement service.
// All implementations should embed UnimplementedCreditArrangementServer
// for forward compatibility
type CreditArrangementServer interface {
	CreateCreditArrangement(context.Context, *ReqCreditArrangement) (*ResCreateCreditArrangement, error)
}

// UnimplementedCreditArrangementServer should be embedded to have forward compatible implementations.
type UnimplementedCreditArrangementServer struct {
}

func (UnimplementedCreditArrangementServer) CreateCreditArrangement(context.Context, *ReqCreditArrangement) (*ResCreateCreditArrangement, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCreditArrangement not implemented")
}

// UnsafeCreditArrangementServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CreditArrangementServer will
// result in compilation errors.
type UnsafeCreditArrangementServer interface {
	mustEmbedUnimplementedCreditArrangementServer()
}

func RegisterCreditArrangementServer(s grpc.ServiceRegistrar, srv CreditArrangementServer) {
	s.RegisterService(&CreditArrangement_ServiceDesc, srv)
}

func _CreditArrangement_CreateCreditArrangement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreditArrangement)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CreditArrangementServer).CreateCreditArrangement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CreditArrangement_CreateCreditArrangement_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CreditArrangementServer).CreateCreditArrangement(ctx, req.(*ReqCreditArrangement))
	}
	return interceptor(ctx, in, info, handler)
}

// CreditArrangement_ServiceDesc is the grpc.ServiceDesc for CreditArrangement service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CreditArrangement_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.los.CreditArrangement",
	HandlerType: (*CreditArrangementServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCreditArrangement",
			Handler:    _CreditArrangement_CreateCreditArrangement_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "los_credit_arrangement.proto",
}
