// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.2
// source: account.proto

package golang

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReqAccountCIF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cif string `protobuf:"bytes,1,opt,name=cif,proto3" json:"cif,omitempty"`
}

func (x *ReqAccountCIF) Reset() {
	*x = ReqAccountCIF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAccountCIF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAccountCIF) ProtoMessage() {}

func (x *ReqAccountCIF) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAccountCIF.ProtoReflect.Descriptor instead.
func (*ReqAccountCIF) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{0}
}

func (x *ReqAccountCIF) GetCif() string {
	if x != nil {
		return x.Cif
	}
	return ""
}

type ResAccountCIF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode    string          `protobuf:"bytes,1,opt,name=response_code,json=responseCode,proto3" json:"response_code,omitempty"`
	ResponseMessage string          `protobuf:"bytes,2,opt,name=response_message,json=responseMessage,proto3" json:"response_message,omitempty"`
	Meta            *Meta           `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	Data            *DataAccountCIF `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ResAccountCIF) Reset() {
	*x = ResAccountCIF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAccountCIF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAccountCIF) ProtoMessage() {}

func (x *ResAccountCIF) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAccountCIF.ProtoReflect.Descriptor instead.
func (*ResAccountCIF) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{1}
}

func (x *ResAccountCIF) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *ResAccountCIF) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *ResAccountCIF) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *ResAccountCIF) GetData() *DataAccountCIF {
	if x != nil {
		return x.Data
	}
	return nil
}

type DataAccountCIF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncodedKey    string `protobuf:"bytes,1,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	Id            string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	CustomerName  string `protobuf:"bytes,3,opt,name=customerName,proto3" json:"customerName,omitempty"`
	MobilePhone   string `protobuf:"bytes,4,opt,name=mobilePhone,proto3" json:"mobilePhone,omitempty"`
	EmailAddress  string `protobuf:"bytes,5,opt,name=emailAddress,proto3" json:"emailAddress,omitempty"`
	BirthDate     string `protobuf:"bytes,6,opt,name=birthDate,proto3" json:"birthDate,omitempty"`
	BirthPlace    string `protobuf:"bytes,7,opt,name=birthPlace,proto3" json:"birthPlace,omitempty"`
	Gender        string `protobuf:"bytes,8,opt,name=gender,proto3" json:"gender,omitempty"`
	Notes         string `protobuf:"bytes,9,opt,name=notes,proto3" json:"notes,omitempty"`
	AccountNumber string `protobuf:"bytes,10,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	Address       string `protobuf:"bytes,11,opt,name=address,proto3" json:"address,omitempty"`
	MotherName    string `protobuf:"bytes,12,opt,name=motherName,proto3" json:"motherName,omitempty"`
	CellularNo    string `protobuf:"bytes,13,opt,name=cellularNo,proto3" json:"cellularNo,omitempty"`
}

func (x *DataAccountCIF) Reset() {
	*x = DataAccountCIF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataAccountCIF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataAccountCIF) ProtoMessage() {}

func (x *DataAccountCIF) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataAccountCIF.ProtoReflect.Descriptor instead.
func (*DataAccountCIF) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{2}
}

func (x *DataAccountCIF) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *DataAccountCIF) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DataAccountCIF) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *DataAccountCIF) GetMobilePhone() string {
	if x != nil {
		return x.MobilePhone
	}
	return ""
}

func (x *DataAccountCIF) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *DataAccountCIF) GetBirthDate() string {
	if x != nil {
		return x.BirthDate
	}
	return ""
}

func (x *DataAccountCIF) GetBirthPlace() string {
	if x != nil {
		return x.BirthPlace
	}
	return ""
}

func (x *DataAccountCIF) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *DataAccountCIF) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *DataAccountCIF) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *DataAccountCIF) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *DataAccountCIF) GetMotherName() string {
	if x != nil {
		return x.MotherName
	}
	return ""
}

func (x *DataAccountCIF) GetCellularNo() string {
	if x != nil {
		return x.CellularNo
	}
	return ""
}

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City        string `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	Country     string `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	IndexInList string `protobuf:"bytes,3,opt,name=indexInList,proto3" json:"indexInList,omitempty"`
	Latitude    string `protobuf:"bytes,4,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Line1       string `protobuf:"bytes,5,opt,name=line1,proto3" json:"line1,omitempty"`
	Longitude   string `protobuf:"bytes,6,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Postcode    string `protobuf:"bytes,7,opt,name=postcode,proto3" json:"postcode,omitempty"`
	Region      string `protobuf:"bytes,8,opt,name=region,proto3" json:"region,omitempty"`
	EncodedKey  string `protobuf:"bytes,9,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	ParentKey   string `protobuf:"bytes,10,opt,name=parentKey,proto3" json:"parentKey,omitempty"`
	Line2       string `protobuf:"bytes,11,opt,name=line2,proto3" json:"line2,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{3}
}

func (x *Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Address) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Address) GetIndexInList() string {
	if x != nil {
		return x.IndexInList
	}
	return ""
}

func (x *Address) GetLatitude() string {
	if x != nil {
		return x.Latitude
	}
	return ""
}

func (x *Address) GetLine1() string {
	if x != nil {
		return x.Line1
	}
	return ""
}

func (x *Address) GetLongitude() string {
	if x != nil {
		return x.Longitude
	}
	return ""
}

func (x *Address) GetPostcode() string {
	if x != nil {
		return x.Postcode
	}
	return ""
}

func (x *Address) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Address) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *Address) GetParentKey() string {
	if x != nil {
		return x.ParentKey
	}
	return ""
}

func (x *Address) GetLine2() string {
	if x != nil {
		return x.Line2
	}
	return ""
}

type ReqAccountBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DateTime        string `protobuf:"bytes,1,opt,name=dateTime,proto3" json:"dateTime,omitempty"`
	ReferenceNumber string `protobuf:"bytes,2,opt,name=referenceNumber,proto3" json:"referenceNumber,omitempty"`
	AccountNumber   string `protobuf:"bytes,3,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	TransactionType string `protobuf:"bytes,4,opt,name=transactionType,proto3" json:"transactionType,omitempty"`
}

func (x *ReqAccountBalance) Reset() {
	*x = ReqAccountBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAccountBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAccountBalance) ProtoMessage() {}

func (x *ReqAccountBalance) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAccountBalance.ProtoReflect.Descriptor instead.
func (*ReqAccountBalance) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{4}
}

func (x *ReqAccountBalance) GetDateTime() string {
	if x != nil {
		return x.DateTime
	}
	return ""
}

func (x *ReqAccountBalance) GetReferenceNumber() string {
	if x != nil {
		return x.ReferenceNumber
	}
	return ""
}

func (x *ReqAccountBalance) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *ReqAccountBalance) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

type ResAccountBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode    string          `protobuf:"bytes,1,opt,name=response_code,json=responseCode,proto3" json:"response_code,omitempty"`
	ResponseMessage string          `protobuf:"bytes,2,opt,name=response_message,json=responseMessage,proto3" json:"response_message,omitempty"`
	Meta            *Meta           `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	Data            *AccountBalance `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ResAccountBalance) Reset() {
	*x = ResAccountBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAccountBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAccountBalance) ProtoMessage() {}

func (x *ResAccountBalance) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAccountBalance.ProtoReflect.Descriptor instead.
func (*ResAccountBalance) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{5}
}

func (x *ResAccountBalance) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *ResAccountBalance) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *ResAccountBalance) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *ResAccountBalance) GetData() *AccountBalance {
	if x != nil {
		return x.Data
	}
	return nil
}

type AccountBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNumber   string  `protobuf:"bytes,1,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	AccountName     string  `protobuf:"bytes,2,opt,name=accountName,proto3" json:"accountName,omitempty"`
	AccountType     string  `protobuf:"bytes,3,opt,name=accountType,proto3" json:"accountType,omitempty"`
	ProductCode     string  `protobuf:"bytes,4,opt,name=productCode,proto3" json:"productCode,omitempty"`
	ProductName     string  `protobuf:"bytes,5,opt,name=productName,proto3" json:"productName,omitempty"`
	Currency        string  `protobuf:"bytes,6,opt,name=currency,proto3" json:"currency,omitempty"`
	WorkingBalance  float64 `protobuf:"fixed64,7,opt,name=workingBalance,proto3" json:"workingBalance,omitempty"`
	ReferenceNumber string  `protobuf:"bytes,8,opt,name=referenceNumber,proto3" json:"referenceNumber,omitempty"`
	DateTime        string  `protobuf:"bytes,9,opt,name=dateTime,proto3" json:"dateTime,omitempty"`
	Source          string  `protobuf:"bytes,10,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *AccountBalance) Reset() {
	*x = AccountBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountBalance) ProtoMessage() {}

func (x *AccountBalance) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountBalance.ProtoReflect.Descriptor instead.
func (*AccountBalance) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{6}
}

func (x *AccountBalance) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *AccountBalance) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *AccountBalance) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *AccountBalance) GetProductCode() string {
	if x != nil {
		return x.ProductCode
	}
	return ""
}

func (x *AccountBalance) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *AccountBalance) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *AccountBalance) GetWorkingBalance() float64 {
	if x != nil {
		return x.WorkingBalance
	}
	return 0
}

func (x *AccountBalance) GetReferenceNumber() string {
	if x != nil {
		return x.ReferenceNumber
	}
	return ""
}

func (x *AccountBalance) GetDateTime() string {
	if x != nil {
		return x.DateTime
	}
	return ""
}

func (x *AccountBalance) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type ReqCustomerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionType string `protobuf:"bytes,1,opt,name=transactionType,proto3" json:"transactionType,omitempty"`
	ReferenceNumber string `protobuf:"bytes,2,opt,name=referenceNumber,proto3" json:"referenceNumber,omitempty"`
	DateTime        string `protobuf:"bytes,3,opt,name=dateTime,proto3" json:"dateTime,omitempty"`
	Npwp            string `protobuf:"bytes,4,opt,name=npwp,proto3" json:"npwp,omitempty"`
	CustomerNo      string `protobuf:"bytes,5,opt,name=customerNo,proto3" json:"customerNo,omitempty"`
	AccountNumber   string `protobuf:"bytes,6,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
}

func (x *ReqCustomerInfo) Reset() {
	*x = ReqCustomerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCustomerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCustomerInfo) ProtoMessage() {}

func (x *ReqCustomerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCustomerInfo.ProtoReflect.Descriptor instead.
func (*ReqCustomerInfo) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{7}
}

func (x *ReqCustomerInfo) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *ReqCustomerInfo) GetReferenceNumber() string {
	if x != nil {
		return x.ReferenceNumber
	}
	return ""
}

func (x *ReqCustomerInfo) GetDateTime() string {
	if x != nil {
		return x.DateTime
	}
	return ""
}

func (x *ReqCustomerInfo) GetNpwp() string {
	if x != nil {
		return x.Npwp
	}
	return ""
}

func (x *ReqCustomerInfo) GetCustomerNo() string {
	if x != nil {
		return x.CustomerNo
	}
	return ""
}

func (x *ReqCustomerInfo) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

type ResCustomerIndividualInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode    string                         `protobuf:"bytes,1,opt,name=response_code,json=responseCode,proto3" json:"response_code,omitempty"`
	ResponseMessage string                         `protobuf:"bytes,2,opt,name=response_message,json=responseMessage,proto3" json:"response_message,omitempty"`
	Meta            *Meta                          `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	Data            *ResCustomerIndividualInfoData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ResCustomerIndividualInfo) Reset() {
	*x = ResCustomerIndividualInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCustomerIndividualInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCustomerIndividualInfo) ProtoMessage() {}

func (x *ResCustomerIndividualInfo) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCustomerIndividualInfo.ProtoReflect.Descriptor instead.
func (*ResCustomerIndividualInfo) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{8}
}

func (x *ResCustomerIndividualInfo) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *ResCustomerIndividualInfo) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *ResCustomerIndividualInfo) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *ResCustomerIndividualInfo) GetData() *ResCustomerIndividualInfoData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ResCustomerIndividualInfoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerNo      string `protobuf:"bytes,1,opt,name=customerNo,proto3" json:"customerNo,omitempty"`
	CustomerName    string `protobuf:"bytes,2,opt,name=customerName,proto3" json:"customerName,omitempty"`
	Gender          string `protobuf:"bytes,3,opt,name=gender,proto3" json:"gender,omitempty"`
	Address         string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	PhoneNo         string `protobuf:"bytes,5,opt,name=phoneNo,proto3" json:"phoneNo,omitempty"`
	CellularNo      string `protobuf:"bytes,6,opt,name=cellularNo,proto3" json:"cellularNo,omitempty"`
	BirthDate       string `protobuf:"bytes,7,opt,name=birthDate,proto3" json:"birthDate,omitempty"`
	BirthPlace      string `protobuf:"bytes,8,opt,name=birthPlace,proto3" json:"birthPlace,omitempty"`
	MotherName      string `protobuf:"bytes,9,opt,name=motherName,proto3" json:"motherName,omitempty"`
	LegalDocName    string `protobuf:"bytes,10,opt,name=legalDocName,proto3" json:"legalDocName,omitempty"`
	LegalID         string `protobuf:"bytes,11,opt,name=legalID,proto3" json:"legalID,omitempty"`
	LegalDocExp     string `protobuf:"bytes,12,opt,name=legalDocExp,proto3" json:"legalDocExp,omitempty"`
	Email           string `protobuf:"bytes,13,opt,name=email,proto3" json:"email,omitempty"`
	BranchCode      string `protobuf:"bytes,14,opt,name=branchCode,proto3" json:"branchCode,omitempty"`
	Sector          string `protobuf:"bytes,15,opt,name=sector,proto3" json:"sector,omitempty"`
	Industry        string `protobuf:"bytes,16,opt,name=industry,proto3" json:"industry,omitempty"`
	Country         string `protobuf:"bytes,17,opt,name=country,proto3" json:"country,omitempty"`
	Nationality     string `protobuf:"bytes,18,opt,name=nationality,proto3" json:"nationality,omitempty"`
	SpouseId        string `protobuf:"bytes,19,opt,name=spouseId,proto3" json:"spouseId,omitempty"`
	SpouseName      string `protobuf:"bytes,20,opt,name=spouseName,proto3" json:"spouseName,omitempty"`
	LastEducation   string `protobuf:"bytes,21,opt,name=lastEducation,proto3" json:"lastEducation,omitempty"`
	Religion        string `protobuf:"bytes,22,opt,name=religion,proto3" json:"religion,omitempty"`
	Occupation      string `protobuf:"bytes,23,opt,name=occupation,proto3" json:"occupation,omitempty"`
	IncomeRange     string `protobuf:"bytes,24,opt,name=incomeRange,proto3" json:"incomeRange,omitempty"`
	SourceOfFund    string `protobuf:"bytes,25,opt,name=sourceOfFund,proto3" json:"sourceOfFund,omitempty"`
	SourceOfIncome  string `protobuf:"bytes,26,opt,name=sourceOfIncome,proto3" json:"sourceOfIncome,omitempty"`
	Province        string `protobuf:"bytes,27,opt,name=province,proto3" json:"province,omitempty"`
	City            string `protobuf:"bytes,28,opt,name=city,proto3" json:"city,omitempty"`
	ReferenceNumber string `protobuf:"bytes,29,opt,name=referenceNumber,proto3" json:"referenceNumber,omitempty"`
	DateTime        string `protobuf:"bytes,30,opt,name=dateTime,proto3" json:"dateTime,omitempty"`
}

func (x *ResCustomerIndividualInfoData) Reset() {
	*x = ResCustomerIndividualInfoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCustomerIndividualInfoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCustomerIndividualInfoData) ProtoMessage() {}

func (x *ResCustomerIndividualInfoData) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCustomerIndividualInfoData.ProtoReflect.Descriptor instead.
func (*ResCustomerIndividualInfoData) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{9}
}

func (x *ResCustomerIndividualInfoData) GetCustomerNo() string {
	if x != nil {
		return x.CustomerNo
	}
	return ""
}

func (x *ResCustomerIndividualInfoData) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *ResCustomerIndividualInfoData) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *ResCustomerIndividualInfoData) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ResCustomerIndividualInfoData) GetPhoneNo() string {
	if x != nil {
		return x.PhoneNo
	}
	return ""
}

func (x *ResCustomerIndividualInfoData) GetCellularNo() string {
	if x != nil {
		return x.CellularNo
	}
	return ""
}

func (x *ResCustomerIndividualInfoData) GetBirthDate() string {
	if x != nil {
		return x.BirthDate
	}
	return ""
}

func (x *ResCustomerIndividualInfoData) GetBirthPlace() string {
	if x != nil {
		return x.BirthPlace
	}
	return ""
}

func (x *ResCustomerIndividualInfoData) GetMotherName() string {
	if x != nil {
		return x.MotherName
	}
	return ""
}

func (x *ResCustomerIndividualInfoData) GetLegalDocName() string {
	if x != nil {
		return x.LegalDocName
	}
	return ""
}

func (x *ResCustomerIndividualInfoData) GetLegalID() string {
	if x != nil {
		return x.LegalID
	}
	return ""
}

func (x *ResCustomerIndividualInfoData) GetLegalDocExp() string {
	if x != nil {
		return x.LegalDocExp
	}
	return ""
}

func (x *ResCustomerIndividualInfoData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ResCustomerIndividualInfoData) GetBranchCode() string {
	if x != nil {
		return x.BranchCode
	}
	return ""
}

func (x *ResCustomerIndividualInfoData) GetSector() string {
	if x != nil {
		return x.Sector
	}
	return ""
}

func (x *ResCustomerIndividualInfoData) GetIndustry() string {
	if x != nil {
		return x.Industry
	}
	return ""
}

func (x *ResCustomerIndividualInfoData) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *ResCustomerIndividualInfoData) GetNationality() string {
	if x != nil {
		return x.Nationality
	}
	return ""
}

func (x *ResCustomerIndividualInfoData) GetSpouseId() string {
	if x != nil {
		return x.SpouseId
	}
	return ""
}

func (x *ResCustomerIndividualInfoData) GetSpouseName() string {
	if x != nil {
		return x.SpouseName
	}
	return ""
}

func (x *ResCustomerIndividualInfoData) GetLastEducation() string {
	if x != nil {
		return x.LastEducation
	}
	return ""
}

func (x *ResCustomerIndividualInfoData) GetReligion() string {
	if x != nil {
		return x.Religion
	}
	return ""
}

func (x *ResCustomerIndividualInfoData) GetOccupation() string {
	if x != nil {
		return x.Occupation
	}
	return ""
}

func (x *ResCustomerIndividualInfoData) GetIncomeRange() string {
	if x != nil {
		return x.IncomeRange
	}
	return ""
}

func (x *ResCustomerIndividualInfoData) GetSourceOfFund() string {
	if x != nil {
		return x.SourceOfFund
	}
	return ""
}

func (x *ResCustomerIndividualInfoData) GetSourceOfIncome() string {
	if x != nil {
		return x.SourceOfIncome
	}
	return ""
}

func (x *ResCustomerIndividualInfoData) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *ResCustomerIndividualInfoData) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *ResCustomerIndividualInfoData) GetReferenceNumber() string {
	if x != nil {
		return x.ReferenceNumber
	}
	return ""
}

func (x *ResCustomerIndividualInfoData) GetDateTime() string {
	if x != nil {
		return x.DateTime
	}
	return ""
}

type RequestAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNumber string `protobuf:"bytes,1,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
}

func (x *RequestAccount) Reset() {
	*x = RequestAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestAccount) ProtoMessage() {}

func (x *RequestAccount) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestAccount.ProtoReflect.Descriptor instead.
func (*RequestAccount) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{10}
}

func (x *RequestAccount) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

type ReqCreateCustomer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNumber string `protobuf:"bytes,1,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	CustomerType  string `protobuf:"bytes,2,opt,name=customerType,proto3" json:"customerType,omitempty"`
	PartnerId     string `protobuf:"bytes,3,opt,name=partnerId,proto3" json:"partnerId,omitempty"`
	Cif           string `protobuf:"bytes,4,opt,name=cif,proto3" json:"cif,omitempty"`
	CifEncodeKey  string `protobuf:"bytes,5,opt,name=cifEncodeKey,proto3" json:"cifEncodeKey,omitempty"`
	CustomerName  string `protobuf:"bytes,6,opt,name=customerName,proto3" json:"customerName,omitempty"`
	Address       string `protobuf:"bytes,7,opt,name=address,proto3" json:"address,omitempty"`
	HomePhone     string `protobuf:"bytes,8,opt,name=homePhone,proto3" json:"homePhone,omitempty"`
	OfficePhone   string `protobuf:"bytes,9,opt,name=officePhone,proto3" json:"officePhone,omitempty"`
	BirthDate     string `protobuf:"bytes,10,opt,name=birthDate,proto3" json:"birthDate,omitempty"`
	BirthPlace    string `protobuf:"bytes,11,opt,name=birthPlace,proto3" json:"birthPlace,omitempty"`
	LegalDocName  string `protobuf:"bytes,12,opt,name=legalDocName,proto3" json:"legalDocName,omitempty"`
	LegalID       string `protobuf:"bytes,13,opt,name=legalID,proto3" json:"legalID,omitempty"`
	LegalDocExp   string `protobuf:"bytes,14,opt,name=legalDocExp,proto3" json:"legalDocExp,omitempty"`
	Email         string `protobuf:"bytes,15,opt,name=email,proto3" json:"email,omitempty"`
	Npwp          string `protobuf:"bytes,16,opt,name=npwp,proto3" json:"npwp,omitempty"`
	Occupation    string `protobuf:"bytes,17,opt,name=occupation,proto3" json:"occupation,omitempty"`
	City          string `protobuf:"bytes,18,opt,name=city,proto3" json:"city,omitempty"`
	Country       string `protobuf:"bytes,19,opt,name=country,proto3" json:"country,omitempty"`
	Source        string `protobuf:"bytes,20,opt,name=source,proto3" json:"source,omitempty"`
	CoreId        string `protobuf:"bytes,21,opt,name=coreId,proto3" json:"coreId,omitempty"`
}

func (x *ReqCreateCustomer) Reset() {
	*x = ReqCreateCustomer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateCustomer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateCustomer) ProtoMessage() {}

func (x *ReqCreateCustomer) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateCustomer.ProtoReflect.Descriptor instead.
func (*ReqCreateCustomer) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{11}
}

func (x *ReqCreateCustomer) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *ReqCreateCustomer) GetCustomerType() string {
	if x != nil {
		return x.CustomerType
	}
	return ""
}

func (x *ReqCreateCustomer) GetPartnerId() string {
	if x != nil {
		return x.PartnerId
	}
	return ""
}

func (x *ReqCreateCustomer) GetCif() string {
	if x != nil {
		return x.Cif
	}
	return ""
}

func (x *ReqCreateCustomer) GetCifEncodeKey() string {
	if x != nil {
		return x.CifEncodeKey
	}
	return ""
}

func (x *ReqCreateCustomer) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *ReqCreateCustomer) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ReqCreateCustomer) GetHomePhone() string {
	if x != nil {
		return x.HomePhone
	}
	return ""
}

func (x *ReqCreateCustomer) GetOfficePhone() string {
	if x != nil {
		return x.OfficePhone
	}
	return ""
}

func (x *ReqCreateCustomer) GetBirthDate() string {
	if x != nil {
		return x.BirthDate
	}
	return ""
}

func (x *ReqCreateCustomer) GetBirthPlace() string {
	if x != nil {
		return x.BirthPlace
	}
	return ""
}

func (x *ReqCreateCustomer) GetLegalDocName() string {
	if x != nil {
		return x.LegalDocName
	}
	return ""
}

func (x *ReqCreateCustomer) GetLegalID() string {
	if x != nil {
		return x.LegalID
	}
	return ""
}

func (x *ReqCreateCustomer) GetLegalDocExp() string {
	if x != nil {
		return x.LegalDocExp
	}
	return ""
}

func (x *ReqCreateCustomer) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ReqCreateCustomer) GetNpwp() string {
	if x != nil {
		return x.Npwp
	}
	return ""
}

func (x *ReqCreateCustomer) GetOccupation() string {
	if x != nil {
		return x.Occupation
	}
	return ""
}

func (x *ReqCreateCustomer) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *ReqCreateCustomer) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *ReqCreateCustomer) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *ReqCreateCustomer) GetCoreId() string {
	if x != nil {
		return x.CoreId
	}
	return ""
}

type DataAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PartnerId     string `protobuf:"bytes,2,opt,name=partnerId,proto3" json:"partnerId,omitempty"`
	AccountNumber string `protobuf:"bytes,3,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	Cif           string `protobuf:"bytes,4,opt,name=cif,proto3" json:"cif,omitempty"`
	CifEncodeKey  string `protobuf:"bytes,5,opt,name=cifEncodeKey,proto3" json:"cifEncodeKey,omitempty"`
	CustomerType  string `protobuf:"bytes,6,opt,name=customerType,proto3" json:"customerType,omitempty"`
	CreatedAt     string `protobuf:"bytes,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *DataAccount) Reset() {
	*x = DataAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataAccount) ProtoMessage() {}

func (x *DataAccount) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataAccount.ProtoReflect.Descriptor instead.
func (*DataAccount) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{12}
}

func (x *DataAccount) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DataAccount) GetPartnerId() string {
	if x != nil {
		return x.PartnerId
	}
	return ""
}

func (x *DataAccount) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *DataAccount) GetCif() string {
	if x != nil {
		return x.Cif
	}
	return ""
}

func (x *DataAccount) GetCifEncodeKey() string {
	if x != nil {
		return x.CifEncodeKey
	}
	return ""
}

func (x *DataAccount) GetCustomerType() string {
	if x != nil {
		return x.CustomerType
	}
	return ""
}

func (x *DataAccount) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type ResponseAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode    string       `protobuf:"bytes,1,opt,name=response_code,json=responseCode,proto3" json:"response_code,omitempty"`
	ResponseMessage string       `protobuf:"bytes,2,opt,name=response_message,json=responseMessage,proto3" json:"response_message,omitempty"`
	Meta            *Meta        `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	Data            *DataAccount `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ResponseAccount) Reset() {
	*x = ResponseAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseAccount) ProtoMessage() {}

func (x *ResponseAccount) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseAccount.ProtoReflect.Descriptor instead.
func (*ResponseAccount) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{13}
}

func (x *ResponseAccount) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *ResponseAccount) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *ResponseAccount) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *ResponseAccount) GetData() *DataAccount {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_account_proto protoreflect.FileDescriptor

var file_account_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x6f, 0x73, 0x1a, 0x11, 0x6c,
	0x6f, 0x73, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x21, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x49,
	0x46, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x63, 0x69, 0x66, 0x22, 0xb9, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x43, 0x49, 0x46, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c,
	0x6f, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x30, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x6f, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x49, 0x46, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x96, 0x03, 0x0a, 0x0e, 0x44, 0x61, 0x74, 0x61, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43,
	0x49, 0x46, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b,
	0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x6c, 0x6c,
	0x75, 0x6c, 0x61, 0x72, 0x4e, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65,
	0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x4e, 0x6f, 0x22, 0xb1, 0x02, 0x0a, 0x07, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x69, 0x6e, 0x65, 0x31, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x32, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x32, 0x22, 0xa9, 0x01, 0x0a,
	0x11, 0x52, 0x65, 0x71, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28,
	0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x73,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26,
	0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x6f, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x6c, 0x6f, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe0, 0x02, 0x0a, 0x0e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x77,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xdb, 0x01, 0x0a, 0x0f,
	0x52, 0x65, 0x71, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x28, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x70, 0x77, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x70, 0x77, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e,
	0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x4e, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xd4, 0x01, 0x0a, 0x19, 0x52, 0x65,
	0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64,
	0x75, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x10,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x6c, 0x6f, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12,
	0x3f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75,
	0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xb5, 0x07, 0x0a, 0x1d, 0x52, 0x65, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x49, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x4e, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x4e, 0x6f,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72,
	0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x69, 0x72, 0x74, 0x68, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x69, 0x72, 0x74, 0x68, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x44, 0x6f, 0x63, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x44, 0x6f, 0x63,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x49, 0x44, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x20,
	0x0a, 0x0b, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x44, 0x6f, 0x63, 0x45, 0x78, 0x70, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x44, 0x6f, 0x63, 0x45, 0x78, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x70, 0x6f, 0x75, 0x73, 0x65,
	0x49, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x70, 0x6f, 0x75, 0x73, 0x65,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x70, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x70, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x45,
	0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x69,
	0x67, 0x69, 0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x69,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x63, 0x6f, 0x6d,
	0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4f, 0x66, 0x46, 0x75, 0x6e, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4f, 0x66, 0x46, 0x75, 0x6e, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4f, 0x66, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x66, 0x49, 0x6e, 0x63, 0x6f,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x1b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0xf5, 0x04, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x69, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x66,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x69, 0x66, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x4b, 0x65, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x69, 0x66, 0x45, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x6f, 0x6d, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x6f, 0x6d, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x69, 0x72, 0x74, 0x68, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x69, 0x72, 0x74, 0x68, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x44, 0x6f, 0x63, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x44, 0x6f, 0x63,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x49, 0x44, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x20,
	0x0a, 0x0b, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x44, 0x6f, 0x63, 0x45, 0x78, 0x70, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x44, 0x6f, 0x63, 0x45, 0x78, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x70, 0x77, 0x70, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x70, 0x77, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x63,
	0x63, 0x75, 0x70, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x22, 0xd9, 0x01, 0x0a, 0x0b, 0x44, 0x61, 0x74,
	0x61, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x69, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x66, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x69, 0x66, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x69, 0x66, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x4b,
	0x65, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0xb8, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x6c, 0x6f, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x6f, 0x73, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32,
	0xbb, 0x03, 0x0a, 0x0e, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x4b, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x6f, 0x73, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x1d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x6f, 0x73, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x00, 0x12,
	0x57, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x6c, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x6c, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61,
	0x6c, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x6f, 0x73,
	0x2e, 0x52, 0x65, 0x71, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x6f, 0x73, 0x2e,
	0x52, 0x65, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x69, 0x76,
	0x69, 0x64, 0x75, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x49, 0x46, 0x12, 0x1b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x71,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x49, 0x46, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x43, 0x49, 0x46, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x1a, 0x1d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x00, 0x42, 0x0a, 0x5a,
	0x08, 0x2e, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_account_proto_rawDescOnce sync.Once
	file_account_proto_rawDescData = file_account_proto_rawDesc
)

func file_account_proto_rawDescGZIP() []byte {
	file_account_proto_rawDescOnce.Do(func() {
		file_account_proto_rawDescData = protoimpl.X.CompressGZIP(file_account_proto_rawDescData)
	})
	return file_account_proto_rawDescData
}

var file_account_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_account_proto_goTypes = []interface{}{
	(*ReqAccountCIF)(nil),                 // 0: protobuf.los.ReqAccountCIF
	(*ResAccountCIF)(nil),                 // 1: protobuf.los.ResAccountCIF
	(*DataAccountCIF)(nil),                // 2: protobuf.los.DataAccountCIF
	(*Address)(nil),                       // 3: protobuf.los.Address
	(*ReqAccountBalance)(nil),             // 4: protobuf.los.ReqAccountBalance
	(*ResAccountBalance)(nil),             // 5: protobuf.los.ResAccountBalance
	(*AccountBalance)(nil),                // 6: protobuf.los.AccountBalance
	(*ReqCustomerInfo)(nil),               // 7: protobuf.los.ReqCustomerInfo
	(*ResCustomerIndividualInfo)(nil),     // 8: protobuf.los.ResCustomerIndividualInfo
	(*ResCustomerIndividualInfoData)(nil), // 9: protobuf.los.ResCustomerIndividualInfoData
	(*RequestAccount)(nil),                // 10: protobuf.los.RequestAccount
	(*ReqCreateCustomer)(nil),             // 11: protobuf.los.ReqCreateCustomer
	(*DataAccount)(nil),                   // 12: protobuf.los.DataAccount
	(*ResponseAccount)(nil),               // 13: protobuf.los.ResponseAccount
	(*Meta)(nil),                          // 14: protobuf.los.Meta
}
var file_account_proto_depIdxs = []int32{
	14, // 0: protobuf.los.ResAccountCIF.meta:type_name -> protobuf.los.Meta
	2,  // 1: protobuf.los.ResAccountCIF.data:type_name -> protobuf.los.DataAccountCIF
	14, // 2: protobuf.los.ResAccountBalance.meta:type_name -> protobuf.los.Meta
	6,  // 3: protobuf.los.ResAccountBalance.data:type_name -> protobuf.los.AccountBalance
	14, // 4: protobuf.los.ResCustomerIndividualInfo.meta:type_name -> protobuf.los.Meta
	9,  // 5: protobuf.los.ResCustomerIndividualInfo.data:type_name -> protobuf.los.ResCustomerIndividualInfoData
	14, // 6: protobuf.los.ResponseAccount.meta:type_name -> protobuf.los.Meta
	12, // 7: protobuf.los.ResponseAccount.data:type_name -> protobuf.los.DataAccount
	10, // 8: protobuf.los.InquiryAccount.GetAccount:input_type -> protobuf.los.RequestAccount
	4,  // 9: protobuf.los.InquiryAccount.GetAccountBalance:input_type -> protobuf.los.ReqAccountBalance
	7,  // 10: protobuf.los.InquiryAccount.GetCustomerIndividual:input_type -> protobuf.los.ReqCustomerInfo
	0,  // 11: protobuf.los.InquiryAccount.GetCustomerCIF:input_type -> protobuf.los.ReqAccountCIF
	11, // 12: protobuf.los.InquiryAccount.CreateCustomer:input_type -> protobuf.los.ReqCreateCustomer
	13, // 13: protobuf.los.InquiryAccount.GetAccount:output_type -> protobuf.los.ResponseAccount
	5,  // 14: protobuf.los.InquiryAccount.GetAccountBalance:output_type -> protobuf.los.ResAccountBalance
	8,  // 15: protobuf.los.InquiryAccount.GetCustomerIndividual:output_type -> protobuf.los.ResCustomerIndividualInfo
	1,  // 16: protobuf.los.InquiryAccount.GetCustomerCIF:output_type -> protobuf.los.ResAccountCIF
	13, // 17: protobuf.los.InquiryAccount.CreateCustomer:output_type -> protobuf.los.ResponseAccount
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_account_proto_init() }
func file_account_proto_init() {
	if File_account_proto != nil {
		return
	}
	file_los_general_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_account_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAccountCIF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResAccountCIF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataAccountCIF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAccountBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResAccountBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCustomerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCustomerIndividualInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCustomerIndividualInfoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateCustomer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_account_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_account_proto_goTypes,
		DependencyIndexes: file_account_proto_depIdxs,
		MessageInfos:      file_account_proto_msgTypes,
	}.Build()
	File_account_proto = out.File
	file_account_proto_rawDesc = nil
	file_account_proto_goTypes = nil
	file_account_proto_depIdxs = nil
}
