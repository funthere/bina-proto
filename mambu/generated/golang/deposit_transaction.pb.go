// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.2
// source: deposit_transaction.proto

package golang

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DepositTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode    string              `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage string              `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	Data            *DepositTransaction `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Meta            *Meta               `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *DepositTransactionResponse) Reset() {
	*x = DepositTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositTransactionResponse) ProtoMessage() {}

func (x *DepositTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositTransactionResponse.ProtoReflect.Descriptor instead.
func (*DepositTransactionResponse) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{0}
}

func (x *DepositTransactionResponse) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *DepositTransactionResponse) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *DepositTransactionResponse) GetData() *DepositTransaction {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DepositTransactionResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type DepositTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncodedKey         string              `protobuf:"bytes,1,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	Id                 string              `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	ExternalId         string              `protobuf:"bytes,3,opt,name=externalId,proto3" json:"externalId,omitempty"`
	PaymentOrderId     string              `protobuf:"bytes,4,opt,name=paymentOrderId,proto3" json:"paymentOrderId,omitempty"`
	CreationDate       string              `protobuf:"bytes,5,opt,name=creationDate,proto3" json:"creationDate,omitempty"`
	ValueDate          string              `protobuf:"bytes,6,opt,name=valueDate,proto3" json:"valueDate,omitempty"`
	BookingDate        string              `protobuf:"bytes,7,opt,name=bookingDate,proto3" json:"bookingDate,omitempty"`
	Notes              string              `protobuf:"bytes,8,opt,name=notes,proto3" json:"notes,omitempty"`
	ParentAccountKey   string              `protobuf:"bytes,9,opt,name=parentAccountKey,proto3" json:"parentAccountKey,omitempty"`
	Type               string              `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	Amount             float64             `protobuf:"fixed64,11,opt,name=amount,proto3" json:"amount,omitempty"`
	CurrencyCode       string              `protobuf:"bytes,12,opt,name=currencyCode,proto3" json:"currencyCode,omitempty"`
	AffectedAmounts    *AffectedAmounts    `protobuf:"bytes,13,opt,name=affectedAmounts,proto3" json:"affectedAmounts,omitempty"`
	Taxes              *Taxes              `protobuf:"bytes,14,opt,name=taxes,proto3" json:"taxes,omitempty"`
	AccountBalances    *AccountBalances    `protobuf:"bytes,15,opt,name=accountBalances,proto3" json:"accountBalances,omitempty"`
	UserKey            string              `protobuf:"bytes,16,opt,name=userKey,proto3" json:"userKey,omitempty"`
	Terms              *Terms              `protobuf:"bytes,17,opt,name=terms,proto3" json:"terms,omitempty"`
	TransactionDetails *TransactionDetails `protobuf:"bytes,18,opt,name=transactionDetails,proto3" json:"transactionDetails,omitempty"`
	TransferDetails    *TransferDetails    `protobuf:"bytes,19,opt,name=transferDetails,proto3" json:"transferDetails,omitempty"`
	Fees               []*Fees             `protobuf:"bytes,20,rep,name=fees,proto3" json:"fees,omitempty"`
	BranchKey          string              `protobuf:"bytes,21,opt,name=branchKey,proto3" json:"branchKey,omitempty"`
}

func (x *DepositTransaction) Reset() {
	*x = DepositTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositTransaction) ProtoMessage() {}

func (x *DepositTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositTransaction.ProtoReflect.Descriptor instead.
func (*DepositTransaction) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{1}
}

func (x *DepositTransaction) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *DepositTransaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DepositTransaction) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *DepositTransaction) GetPaymentOrderId() string {
	if x != nil {
		return x.PaymentOrderId
	}
	return ""
}

func (x *DepositTransaction) GetCreationDate() string {
	if x != nil {
		return x.CreationDate
	}
	return ""
}

func (x *DepositTransaction) GetValueDate() string {
	if x != nil {
		return x.ValueDate
	}
	return ""
}

func (x *DepositTransaction) GetBookingDate() string {
	if x != nil {
		return x.BookingDate
	}
	return ""
}

func (x *DepositTransaction) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *DepositTransaction) GetParentAccountKey() string {
	if x != nil {
		return x.ParentAccountKey
	}
	return ""
}

func (x *DepositTransaction) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DepositTransaction) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *DepositTransaction) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *DepositTransaction) GetAffectedAmounts() *AffectedAmounts {
	if x != nil {
		return x.AffectedAmounts
	}
	return nil
}

func (x *DepositTransaction) GetTaxes() *Taxes {
	if x != nil {
		return x.Taxes
	}
	return nil
}

func (x *DepositTransaction) GetAccountBalances() *AccountBalances {
	if x != nil {
		return x.AccountBalances
	}
	return nil
}

func (x *DepositTransaction) GetUserKey() string {
	if x != nil {
		return x.UserKey
	}
	return ""
}

func (x *DepositTransaction) GetTerms() *Terms {
	if x != nil {
		return x.Terms
	}
	return nil
}

func (x *DepositTransaction) GetTransactionDetails() *TransactionDetails {
	if x != nil {
		return x.TransactionDetails
	}
	return nil
}

func (x *DepositTransaction) GetTransferDetails() *TransferDetails {
	if x != nil {
		return x.TransferDetails
	}
	return nil
}

func (x *DepositTransaction) GetFees() []*Fees {
	if x != nil {
		return x.Fees
	}
	return nil
}

func (x *DepositTransaction) GetBranchKey() string {
	if x != nil {
		return x.BranchKey
	}
	return ""
}

type DepositTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount                  float64             `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
	BookingDate             string              `protobuf:"bytes,2,opt,name=bookingDate,proto3" json:"bookingDate,omitempty"`
	ExternalId              string              `protobuf:"bytes,3,opt,name=externalId,proto3" json:"externalId,omitempty"`
	HoldExternalReferenceId string              `protobuf:"bytes,4,opt,name=holdExternalReferenceId,proto3" json:"holdExternalReferenceId,omitempty"`
	Notes                   string              `protobuf:"bytes,5,opt,name=notes,proto3" json:"notes,omitempty"`
	PaymentOrderId          string              `protobuf:"bytes,6,opt,name=paymentOrderId,proto3" json:"paymentOrderId,omitempty"`
	TransactionDetails      *TransactionDetails `protobuf:"bytes,7,opt,name=transactionDetails,proto3" json:"transactionDetails,omitempty"`
	ValueDate               string              `protobuf:"bytes,8,opt,name=valueDate,proto3" json:"valueDate,omitempty"`
	DepositAccountId        string              `protobuf:"bytes,9,opt,name=depositAccountId,proto3" json:"depositAccountId,omitempty"`
}

func (x *DepositTransactionRequest) Reset() {
	*x = DepositTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositTransactionRequest) ProtoMessage() {}

func (x *DepositTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositTransactionRequest.ProtoReflect.Descriptor instead.
func (*DepositTransactionRequest) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{2}
}

func (x *DepositTransactionRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *DepositTransactionRequest) GetBookingDate() string {
	if x != nil {
		return x.BookingDate
	}
	return ""
}

func (x *DepositTransactionRequest) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *DepositTransactionRequest) GetHoldExternalReferenceId() string {
	if x != nil {
		return x.HoldExternalReferenceId
	}
	return ""
}

func (x *DepositTransactionRequest) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *DepositTransactionRequest) GetPaymentOrderId() string {
	if x != nil {
		return x.PaymentOrderId
	}
	return ""
}

func (x *DepositTransactionRequest) GetTransactionDetails() *TransactionDetails {
	if x != nil {
		return x.TransactionDetails
	}
	return nil
}

func (x *DepositTransactionRequest) GetValueDate() string {
	if x != nil {
		return x.ValueDate
	}
	return ""
}

func (x *DepositTransactionRequest) GetDepositAccountId() string {
	if x != nil {
		return x.DepositAccountId
	}
	return ""
}

type TransactionDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionChannelId  string `protobuf:"bytes,1,opt,name=transactionChannelId,proto3" json:"transactionChannelId,omitempty"`
	TransactionChannelKey string `protobuf:"bytes,2,opt,name=transactionChannelKey,proto3" json:"transactionChannelKey,omitempty"`
}

func (x *TransactionDetails) Reset() {
	*x = TransactionDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionDetails) ProtoMessage() {}

func (x *TransactionDetails) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionDetails.ProtoReflect.Descriptor instead.
func (*TransactionDetails) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{3}
}

func (x *TransactionDetails) GetTransactionChannelId() string {
	if x != nil {
		return x.TransactionChannelId
	}
	return ""
}

func (x *TransactionDetails) GetTransactionChannelKey() string {
	if x != nil {
		return x.TransactionChannelKey
	}
	return ""
}

type TransferDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkedDepositTransactionKey string `protobuf:"bytes,1,opt,name=linkedDepositTransactionKey,proto3" json:"linkedDepositTransactionKey,omitempty"`
	LinkedLoanTransactionKey    string `protobuf:"bytes,2,opt,name=linkedLoanTransactionKey,proto3" json:"linkedLoanTransactionKey,omitempty"`
}

func (x *TransferDetails) Reset() {
	*x = TransferDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferDetails) ProtoMessage() {}

func (x *TransferDetails) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferDetails.ProtoReflect.Descriptor instead.
func (*TransferDetails) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{4}
}

func (x *TransferDetails) GetLinkedDepositTransactionKey() string {
	if x != nil {
		return x.LinkedDepositTransactionKey
	}
	return ""
}

func (x *TransferDetails) GetLinkedLoanTransactionKey() string {
	if x != nil {
		return x.LinkedLoanTransactionKey
	}
	return ""
}

type Taxes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaxRate float64 `protobuf:"fixed64,1,opt,name=taxRate,proto3" json:"taxRate,omitempty"`
}

func (x *Taxes) Reset() {
	*x = Taxes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Taxes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Taxes) ProtoMessage() {}

func (x *Taxes) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Taxes.ProtoReflect.Descriptor instead.
func (*Taxes) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{5}
}

func (x *Taxes) GetTaxRate() float64 {
	if x != nil {
		return x.TaxRate
	}
	return 0
}

type AccountBalances struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalBalance float64 `protobuf:"fixed64,1,opt,name=totalBalance,proto3" json:"totalBalance,omitempty"`
}

func (x *AccountBalances) Reset() {
	*x = AccountBalances{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountBalances) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountBalances) ProtoMessage() {}

func (x *AccountBalances) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountBalances.ProtoReflect.Descriptor instead.
func (*AccountBalances) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{6}
}

func (x *AccountBalances) GetTotalBalance() float64 {
	if x != nil {
		return x.TotalBalance
	}
	return 0
}

type AffectedAmounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeesAmount                       float64 `protobuf:"fixed64,1,opt,name=feesAmount,proto3" json:"feesAmount,omitempty"`
	FractionAmount                   float64 `protobuf:"fixed64,2,opt,name=fractionAmount,proto3" json:"fractionAmount,omitempty"`
	FundsAmount                      float64 `protobuf:"fixed64,3,opt,name=fundsAmount,proto3" json:"fundsAmount,omitempty"`
	InterestAmount                   float64 `protobuf:"fixed64,4,opt,name=interestAmount,proto3" json:"interestAmount,omitempty"`
	OverdraftAmount                  float64 `protobuf:"fixed64,5,opt,name=overdraftAmount,proto3" json:"overdraftAmount,omitempty"`
	OverdraftFeesAmount              float64 `protobuf:"fixed64,6,opt,name=overdraftFeesAmount,proto3" json:"overdraftFeesAmount,omitempty"`
	OverdraftInterestAmount          float64 `protobuf:"fixed64,7,opt,name=overdraftInterestAmount,proto3" json:"overdraftInterestAmount,omitempty"`
	TechnicalOverdraftAmount         float64 `protobuf:"fixed64,8,opt,name=technicalOverdraftAmount,proto3" json:"technicalOverdraftAmount,omitempty"`
	TechnicalOverdraftInterestAmount float64 `protobuf:"fixed64,9,opt,name=technicalOverdraftInterestAmount,proto3" json:"technicalOverdraftInterestAmount,omitempty"`
}

func (x *AffectedAmounts) Reset() {
	*x = AffectedAmounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AffectedAmounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AffectedAmounts) ProtoMessage() {}

func (x *AffectedAmounts) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AffectedAmounts.ProtoReflect.Descriptor instead.
func (*AffectedAmounts) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{7}
}

func (x *AffectedAmounts) GetFeesAmount() float64 {
	if x != nil {
		return x.FeesAmount
	}
	return 0
}

func (x *AffectedAmounts) GetFractionAmount() float64 {
	if x != nil {
		return x.FractionAmount
	}
	return 0
}

func (x *AffectedAmounts) GetFundsAmount() float64 {
	if x != nil {
		return x.FundsAmount
	}
	return 0
}

func (x *AffectedAmounts) GetInterestAmount() float64 {
	if x != nil {
		return x.InterestAmount
	}
	return 0
}

func (x *AffectedAmounts) GetOverdraftAmount() float64 {
	if x != nil {
		return x.OverdraftAmount
	}
	return 0
}

func (x *AffectedAmounts) GetOverdraftFeesAmount() float64 {
	if x != nil {
		return x.OverdraftFeesAmount
	}
	return 0
}

func (x *AffectedAmounts) GetOverdraftInterestAmount() float64 {
	if x != nil {
		return x.OverdraftInterestAmount
	}
	return 0
}

func (x *AffectedAmounts) GetTechnicalOverdraftAmount() float64 {
	if x != nil {
		return x.TechnicalOverdraftAmount
	}
	return 0
}

func (x *AffectedAmounts) GetTechnicalOverdraftInterestAmount() float64 {
	if x != nil {
		return x.TechnicalOverdraftInterestAmount
	}
	return 0
}

type Fees struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount           float64 `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Name             string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PredefinedFeeKey string  `protobuf:"bytes,3,opt,name=predefinedFeeKey,proto3" json:"predefinedFeeKey,omitempty"`
	TaxAmount        float64 `protobuf:"fixed64,4,opt,name=taxAmount,proto3" json:"taxAmount,omitempty"`
	Trigger          string  `protobuf:"bytes,5,opt,name=trigger,proto3" json:"trigger,omitempty"`
}

func (x *Fees) Reset() {
	*x = Fees{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fees) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fees) ProtoMessage() {}

func (x *Fees) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fees.ProtoReflect.Descriptor instead.
func (*Fees) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{8}
}

func (x *Fees) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Fees) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Fees) GetPredefinedFeeKey() string {
	if x != nil {
		return x.PredefinedFeeKey
	}
	return ""
}

func (x *Fees) GetTaxAmount() float64 {
	if x != nil {
		return x.TaxAmount
	}
	return 0
}

func (x *Fees) GetTrigger() string {
	if x != nil {
		return x.Trigger
	}
	return ""
}

type InterestAccruedAmounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterestAccrued                   float64 `protobuf:"fixed64,1,opt,name=interestAccrued,proto3" json:"interestAccrued,omitempty"`
	NegativeInterestAccrued           float64 `protobuf:"fixed64,2,opt,name=negativeInterestAccrued,proto3" json:"negativeInterestAccrued,omitempty"`
	OverdraftInterestAccrued          float64 `protobuf:"fixed64,3,opt,name=overdraftInterestAccrued,proto3" json:"overdraftInterestAccrued,omitempty"`
	TechnicalOverdraftInterestAccrued float64 `protobuf:"fixed64,4,opt,name=technicalOverdraftInterestAccrued,proto3" json:"technicalOverdraftInterestAccrued,omitempty"`
}

func (x *InterestAccruedAmounts) Reset() {
	*x = InterestAccruedAmounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterestAccruedAmounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterestAccruedAmounts) ProtoMessage() {}

func (x *InterestAccruedAmounts) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterestAccruedAmounts.ProtoReflect.Descriptor instead.
func (*InterestAccruedAmounts) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{9}
}

func (x *InterestAccruedAmounts) GetInterestAccrued() float64 {
	if x != nil {
		return x.InterestAccrued
	}
	return 0
}

func (x *InterestAccruedAmounts) GetNegativeInterestAccrued() float64 {
	if x != nil {
		return x.NegativeInterestAccrued
	}
	return 0
}

func (x *InterestAccruedAmounts) GetOverdraftInterestAccrued() float64 {
	if x != nil {
		return x.OverdraftInterestAccrued
	}
	return 0
}

func (x *InterestAccruedAmounts) GetTechnicalOverdraftInterestAccrued() float64 {
	if x != nil {
		return x.TechnicalOverdraftInterestAccrued
	}
	return 0
}

type Terms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterestSettings          *Terms_InterestSettings          `protobuf:"bytes,1,opt,name=interestSettings,proto3" json:"interestSettings,omitempty"`
	OverdraftInterestSettings *Terms_OverdraftInterestSettings `protobuf:"bytes,2,opt,name=overdraftInterestSettings,proto3" json:"overdraftInterestSettings,omitempty"`
	OverdraftSettings         *Terms_OverdraftSettings         `protobuf:"bytes,3,opt,name=overdraftSettings,proto3" json:"overdraftSettings,omitempty"`
}

func (x *Terms) Reset() {
	*x = Terms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Terms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terms) ProtoMessage() {}

func (x *Terms) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terms.ProtoReflect.Descriptor instead.
func (*Terms) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{10}
}

func (x *Terms) GetInterestSettings() *Terms_InterestSettings {
	if x != nil {
		return x.InterestSettings
	}
	return nil
}

func (x *Terms) GetOverdraftInterestSettings() *Terms_OverdraftInterestSettings {
	if x != nil {
		return x.OverdraftInterestSettings
	}
	return nil
}

func (x *Terms) GetOverdraftSettings() *Terms_OverdraftSettings {
	if x != nil {
		return x.OverdraftSettings
	}
	return nil
}

type TransferTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount           float64         `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
	ExternalId       string          `protobuf:"bytes,2,opt,name=externalId,proto3" json:"externalId,omitempty"`
	Notes            string          `protobuf:"bytes,3,opt,name=notes,proto3" json:"notes,omitempty"`
	PaymentOrderId   string          `protobuf:"bytes,4,opt,name=paymentOrderId,proto3" json:"paymentOrderId,omitempty"`
	TransferDetails  *TransferDetail `protobuf:"bytes,5,opt,name=transferDetails,proto3" json:"transferDetails,omitempty"`
	ValueDate        string          `protobuf:"bytes,6,opt,name=valueDate,proto3" json:"valueDate,omitempty"`
	DepositAccountId string          `protobuf:"bytes,7,opt,name=depositAccountId,proto3" json:"depositAccountId,omitempty"`
}

func (x *TransferTransactionRequest) Reset() {
	*x = TransferTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferTransactionRequest) ProtoMessage() {}

func (x *TransferTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferTransactionRequest.ProtoReflect.Descriptor instead.
func (*TransferTransactionRequest) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{11}
}

func (x *TransferTransactionRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransferTransactionRequest) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *TransferTransactionRequest) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *TransferTransactionRequest) GetPaymentOrderId() string {
	if x != nil {
		return x.PaymentOrderId
	}
	return ""
}

func (x *TransferTransactionRequest) GetTransferDetails() *TransferDetail {
	if x != nil {
		return x.TransferDetails
	}
	return nil
}

func (x *TransferTransactionRequest) GetValueDate() string {
	if x != nil {
		return x.ValueDate
	}
	return ""
}

func (x *TransferTransactionRequest) GetDepositAccountId() string {
	if x != nil {
		return x.DepositAccountId
	}
	return ""
}

type TransferDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkedAccountId   string `protobuf:"bytes,1,opt,name=linkedAccountId,proto3" json:"linkedAccountId,omitempty"`
	LinkedAccountKey  string `protobuf:"bytes,2,opt,name=linkedAccountKey,proto3" json:"linkedAccountKey,omitempty"`
	LinkedAccountType string `protobuf:"bytes,3,opt,name=linkedAccountType,proto3" json:"linkedAccountType,omitempty"`
}

func (x *TransferDetail) Reset() {
	*x = TransferDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferDetail) ProtoMessage() {}

func (x *TransferDetail) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferDetail.ProtoReflect.Descriptor instead.
func (*TransferDetail) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{12}
}

func (x *TransferDetail) GetLinkedAccountId() string {
	if x != nil {
		return x.LinkedAccountId
	}
	return ""
}

func (x *TransferDetail) GetLinkedAccountKey() string {
	if x != nil {
		return x.LinkedAccountKey
	}
	return ""
}

func (x *TransferDetail) GetLinkedAccountType() string {
	if x != nil {
		return x.LinkedAccountType
	}
	return ""
}

type AdjustTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notes                string `protobuf:"bytes,1,opt,name=notes,proto3" json:"notes,omitempty"`
	DepositTransactionId string `protobuf:"bytes,2,opt,name=depositTransactionId,proto3" json:"depositTransactionId,omitempty"`
}

func (x *AdjustTransactionRequest) Reset() {
	*x = AdjustTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdjustTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdjustTransactionRequest) ProtoMessage() {}

func (x *AdjustTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdjustTransactionRequest.ProtoReflect.Descriptor instead.
func (*AdjustTransactionRequest) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{13}
}

func (x *AdjustTransactionRequest) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *AdjustTransactionRequest) GetDepositTransactionId() string {
	if x != nil {
		return x.DepositTransactionId
	}
	return ""
}

type TransactionDepositRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepositAccountId     string      `protobuf:"bytes,1,opt,name=depositAccountId,proto3" json:"depositAccountId,omitempty"`
	Amount               float64     `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	ValueDate            string      `protobuf:"bytes,3,opt,name=valueDate,proto3" json:"valueDate,omitempty"`
	Notes                string      `protobuf:"bytes,4,opt,name=notes,proto3" json:"notes,omitempty"`
	TransactionChannelId string      `protobuf:"bytes,5,opt,name=transactionChannelId,proto3" json:"transactionChannelId,omitempty"`
	Fee                  *FeeRequest `protobuf:"bytes,6,opt,name=fee,proto3" json:"fee,omitempty"`
	ExternalId           string      `protobuf:"bytes,7,opt,name=externalId,proto3" json:"externalId,omitempty"`
}

func (x *TransactionDepositRequest) Reset() {
	*x = TransactionDepositRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionDepositRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionDepositRequest) ProtoMessage() {}

func (x *TransactionDepositRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionDepositRequest.ProtoReflect.Descriptor instead.
func (*TransactionDepositRequest) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{14}
}

func (x *TransactionDepositRequest) GetDepositAccountId() string {
	if x != nil {
		return x.DepositAccountId
	}
	return ""
}

func (x *TransactionDepositRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransactionDepositRequest) GetValueDate() string {
	if x != nil {
		return x.ValueDate
	}
	return ""
}

func (x *TransactionDepositRequest) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *TransactionDepositRequest) GetTransactionChannelId() string {
	if x != nil {
		return x.TransactionChannelId
	}
	return ""
}

func (x *TransactionDepositRequest) GetFee() *FeeRequest {
	if x != nil {
		return x.Fee
	}
	return nil
}

func (x *TransactionDepositRequest) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

type FeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeeAmount float64 `protobuf:"fixed64,1,opt,name=feeAmount,proto3" json:"feeAmount,omitempty"`
	FeeId     string  `protobuf:"bytes,2,opt,name=feeId,proto3" json:"feeId,omitempty"`
}

func (x *FeeRequest) Reset() {
	*x = FeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeeRequest) ProtoMessage() {}

func (x *FeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeeRequest.ProtoReflect.Descriptor instead.
func (*FeeRequest) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{15}
}

func (x *FeeRequest) GetFeeAmount() float64 {
	if x != nil {
		return x.FeeAmount
	}
	return 0
}

func (x *FeeRequest) GetFeeId() string {
	if x != nil {
		return x.FeeId
	}
	return ""
}

type TransactionDepositResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode    string                    `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage string                    `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	Data            *ResultDepositTransaction `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Meta            *Meta                     `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *TransactionDepositResponse) Reset() {
	*x = TransactionDepositResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionDepositResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionDepositResponse) ProtoMessage() {}

func (x *TransactionDepositResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionDepositResponse.ProtoReflect.Descriptor instead.
func (*TransactionDepositResponse) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{16}
}

func (x *TransactionDepositResponse) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *TransactionDepositResponse) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *TransactionDepositResponse) GetData() *ResultDepositTransaction {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TransactionDepositResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type ResultDepositTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionID string   `protobuf:"bytes,1,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	Balance       float64  `protobuf:"fixed64,2,opt,name=balance,proto3" json:"balance,omitempty"`
	ReversalID    string   `protobuf:"bytes,3,opt,name=reversalID,proto3" json:"reversalID,omitempty"`
	CreationDate  string   `protobuf:"bytes,4,opt,name=creationDate,proto3" json:"creationDate,omitempty"`
	Fee           *DataFee `protobuf:"bytes,5,opt,name=fee,proto3" json:"fee,omitempty"`
}

func (x *ResultDepositTransaction) Reset() {
	*x = ResultDepositTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultDepositTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultDepositTransaction) ProtoMessage() {}

func (x *ResultDepositTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultDepositTransaction.ProtoReflect.Descriptor instead.
func (*ResultDepositTransaction) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{17}
}

func (x *ResultDepositTransaction) GetTransactionID() string {
	if x != nil {
		return x.TransactionID
	}
	return ""
}

func (x *ResultDepositTransaction) GetBalance() float64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *ResultDepositTransaction) GetReversalID() string {
	if x != nil {
		return x.ReversalID
	}
	return ""
}

func (x *ResultDepositTransaction) GetCreationDate() string {
	if x != nil {
		return x.CreationDate
	}
	return ""
}

func (x *ResultDepositTransaction) GetFee() *DataFee {
	if x != nil {
		return x.Fee
	}
	return nil
}

type DataFee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeeAmount float64 `protobuf:"fixed64,1,opt,name=feeAmount,proto3" json:"feeAmount,omitempty"`
	FeeId     string  `protobuf:"bytes,2,opt,name=feeId,proto3" json:"feeId,omitempty"`
}

func (x *DataFee) Reset() {
	*x = DataFee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataFee) ProtoMessage() {}

func (x *DataFee) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataFee.ProtoReflect.Descriptor instead.
func (*DataFee) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{18}
}

func (x *DataFee) GetFeeAmount() float64 {
	if x != nil {
		return x.FeeAmount
	}
	return 0
}

func (x *DataFee) GetFeeId() string {
	if x != nil {
		return x.FeeId
	}
	return ""
}

type FeeTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepositAccountId string `protobuf:"bytes,1,opt,name=depositAccountId,proto3" json:"depositAccountId,omitempty"`
	ExternalId       string `protobuf:"bytes,2,opt,name=externalId,proto3" json:"externalId,omitempty"`
	Notes            string `protobuf:"bytes,3,opt,name=notes,proto3" json:"notes,omitempty"`
	PredefinedFeeKey string `protobuf:"bytes,4,opt,name=predefinedFeeKey,proto3" json:"predefinedFeeKey,omitempty"`
}

func (x *FeeTransactionRequest) Reset() {
	*x = FeeTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeeTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeeTransactionRequest) ProtoMessage() {}

func (x *FeeTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeeTransactionRequest.ProtoReflect.Descriptor instead.
func (*FeeTransactionRequest) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{19}
}

func (x *FeeTransactionRequest) GetDepositAccountId() string {
	if x != nil {
		return x.DepositAccountId
	}
	return ""
}

func (x *FeeTransactionRequest) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *FeeTransactionRequest) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *FeeTransactionRequest) GetPredefinedFeeKey() string {
	if x != nil {
		return x.PredefinedFeeKey
	}
	return ""
}

type FeeTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode    string          `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage string          `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	Data            *FeeTransaction `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Meta            *Meta           `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *FeeTransactionResponse) Reset() {
	*x = FeeTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeeTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeeTransactionResponse) ProtoMessage() {}

func (x *FeeTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeeTransactionResponse.ProtoReflect.Descriptor instead.
func (*FeeTransactionResponse) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{20}
}

func (x *FeeTransactionResponse) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *FeeTransactionResponse) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *FeeTransactionResponse) GetData() *FeeTransaction {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FeeTransactionResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type FeeTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncodedKey         string                 `protobuf:"bytes,1,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	Id                 string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	ExternalId         string                 `protobuf:"bytes,3,opt,name=externalId,proto3" json:"externalId,omitempty"`
	CreationDate       string                 `protobuf:"bytes,4,opt,name=creationDate,proto3" json:"creationDate,omitempty"`
	ValueDate          string                 `protobuf:"bytes,5,opt,name=valueDate,proto3" json:"valueDate,omitempty"`
	BookingDate        string                 `protobuf:"bytes,6,opt,name=bookingDate,proto3" json:"bookingDate,omitempty"`
	Notes              string                 `protobuf:"bytes,7,opt,name=notes,proto3" json:"notes,omitempty"`
	ParentAccountKey   string                 `protobuf:"bytes,8,opt,name=parentAccountKey,proto3" json:"parentAccountKey,omitempty"`
	Type               string                 `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`
	Amount             float64                `protobuf:"fixed64,10,opt,name=amount,proto3" json:"amount,omitempty"`
	CurrencyCode       string                 `protobuf:"bytes,11,opt,name=currencyCode,proto3" json:"currencyCode,omitempty"`
	AffectedAmounts    *AffectedAmounts       `protobuf:"bytes,12,opt,name=affectedAmounts,proto3" json:"affectedAmounts,omitempty"`
	AccountBalances    *AccountBalances       `protobuf:"bytes,13,opt,name=accountBalances,proto3" json:"accountBalances,omitempty"`
	UserKey            string                 `protobuf:"bytes,14,opt,name=userKey,proto3" json:"userKey,omitempty"`
	BranchKey          string                 `protobuf:"bytes,15,opt,name=branchKey,proto3" json:"branchKey,omitempty"`
	Terms              *Terms                 `protobuf:"bytes,16,opt,name=terms,proto3" json:"terms,omitempty"`
	TransactionDetails *TransactionDetails    `protobuf:"bytes,17,opt,name=transactionDetails,proto3" json:"transactionDetails,omitempty"`
	TransferDetails    *TransferDetails       `protobuf:"bytes,18,opt,name=transferDetails,proto3" json:"transferDetails,omitempty"`
	Fees               []*FeeTransaction_Fees `protobuf:"bytes,19,rep,name=fees,proto3" json:"fees,omitempty"`
}

func (x *FeeTransaction) Reset() {
	*x = FeeTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeeTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeeTransaction) ProtoMessage() {}

func (x *FeeTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeeTransaction.ProtoReflect.Descriptor instead.
func (*FeeTransaction) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{21}
}

func (x *FeeTransaction) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *FeeTransaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FeeTransaction) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *FeeTransaction) GetCreationDate() string {
	if x != nil {
		return x.CreationDate
	}
	return ""
}

func (x *FeeTransaction) GetValueDate() string {
	if x != nil {
		return x.ValueDate
	}
	return ""
}

func (x *FeeTransaction) GetBookingDate() string {
	if x != nil {
		return x.BookingDate
	}
	return ""
}

func (x *FeeTransaction) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *FeeTransaction) GetParentAccountKey() string {
	if x != nil {
		return x.ParentAccountKey
	}
	return ""
}

func (x *FeeTransaction) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FeeTransaction) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *FeeTransaction) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *FeeTransaction) GetAffectedAmounts() *AffectedAmounts {
	if x != nil {
		return x.AffectedAmounts
	}
	return nil
}

func (x *FeeTransaction) GetAccountBalances() *AccountBalances {
	if x != nil {
		return x.AccountBalances
	}
	return nil
}

func (x *FeeTransaction) GetUserKey() string {
	if x != nil {
		return x.UserKey
	}
	return ""
}

func (x *FeeTransaction) GetBranchKey() string {
	if x != nil {
		return x.BranchKey
	}
	return ""
}

func (x *FeeTransaction) GetTerms() *Terms {
	if x != nil {
		return x.Terms
	}
	return nil
}

func (x *FeeTransaction) GetTransactionDetails() *TransactionDetails {
	if x != nil {
		return x.TransactionDetails
	}
	return nil
}

func (x *FeeTransaction) GetTransferDetails() *TransferDetails {
	if x != nil {
		return x.TransferDetails
	}
	return nil
}

func (x *FeeTransaction) GetFees() []*FeeTransaction_Fees {
	if x != nil {
		return x.Fees
	}
	return nil
}

type TransationDepositResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode    string             `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage string             `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	Data            *TransationDeposit `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Meta            *Meta              `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *TransationDepositResponse) Reset() {
	*x = TransationDepositResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransationDepositResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransationDepositResponse) ProtoMessage() {}

func (x *TransationDepositResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransationDepositResponse.ProtoReflect.Descriptor instead.
func (*TransationDepositResponse) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{22}
}

func (x *TransationDepositResponse) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *TransationDepositResponse) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *TransationDepositResponse) GetData() *TransationDeposit {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TransationDepositResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type TransationDeposit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionID string  `protobuf:"bytes,1,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	Balance       float64 `protobuf:"fixed64,2,opt,name=balance,proto3" json:"balance,omitempty"`
	ReversalID    string  `protobuf:"bytes,3,opt,name=reversalID,proto3" json:"reversalID,omitempty"`
	CreationDate  string  `protobuf:"bytes,4,opt,name=creationDate,proto3" json:"creationDate,omitempty"`
}

func (x *TransationDeposit) Reset() {
	*x = TransationDeposit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransationDeposit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransationDeposit) ProtoMessage() {}

func (x *TransationDeposit) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransationDeposit.ProtoReflect.Descriptor instead.
func (*TransationDeposit) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{23}
}

func (x *TransationDeposit) GetTransactionID() string {
	if x != nil {
		return x.TransactionID
	}
	return ""
}

func (x *TransationDeposit) GetBalance() float64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *TransationDeposit) GetReversalID() string {
	if x != nil {
		return x.ReversalID
	}
	return ""
}

func (x *TransationDeposit) GetCreationDate() string {
	if x != nil {
		return x.CreationDate
	}
	return ""
}

type TransactionTransferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderAccountId   string  `protobuf:"bytes,1,opt,name=senderAccountId,proto3" json:"senderAccountId,omitempty"`
	Amount            float64 `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	ReceiverAccountId string  `protobuf:"bytes,3,opt,name=receiverAccountId,proto3" json:"receiverAccountId,omitempty"`
	ValueDate         string  `protobuf:"bytes,4,opt,name=valueDate,proto3" json:"valueDate,omitempty"`
	Notes             string  `protobuf:"bytes,5,opt,name=notes,proto3" json:"notes,omitempty"`
	CurrencyCode      string  `protobuf:"bytes,6,opt,name=currencyCode,proto3" json:"currencyCode,omitempty"`
	ExternalId        string  `protobuf:"bytes,7,opt,name=externalId,proto3" json:"externalId,omitempty"`
}

func (x *TransactionTransferRequest) Reset() {
	*x = TransactionTransferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionTransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionTransferRequest) ProtoMessage() {}

func (x *TransactionTransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionTransferRequest.ProtoReflect.Descriptor instead.
func (*TransactionTransferRequest) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{24}
}

func (x *TransactionTransferRequest) GetSenderAccountId() string {
	if x != nil {
		return x.SenderAccountId
	}
	return ""
}

func (x *TransactionTransferRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransactionTransferRequest) GetReceiverAccountId() string {
	if x != nil {
		return x.ReceiverAccountId
	}
	return ""
}

func (x *TransactionTransferRequest) GetValueDate() string {
	if x != nil {
		return x.ValueDate
	}
	return ""
}

func (x *TransactionTransferRequest) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *TransactionTransferRequest) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *TransactionTransferRequest) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

type DepositTransactionListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepositAccountId  string `protobuf:"bytes,1,opt,name=depositAccountId,proto3" json:"depositAccountId,omitempty"`
	Page              uint32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit             uint32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	PaginationDetails string `protobuf:"bytes,4,opt,name=paginationDetails,proto3" json:"paginationDetails,omitempty"`
	DetailsLevel      string `protobuf:"bytes,5,opt,name=detailsLevel,proto3" json:"detailsLevel,omitempty"`
}

func (x *DepositTransactionListRequest) Reset() {
	*x = DepositTransactionListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositTransactionListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositTransactionListRequest) ProtoMessage() {}

func (x *DepositTransactionListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositTransactionListRequest.ProtoReflect.Descriptor instead.
func (*DepositTransactionListRequest) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{25}
}

func (x *DepositTransactionListRequest) GetDepositAccountId() string {
	if x != nil {
		return x.DepositAccountId
	}
	return ""
}

func (x *DepositTransactionListRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DepositTransactionListRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *DepositTransactionListRequest) GetPaginationDetails() string {
	if x != nil {
		return x.PaginationDetails
	}
	return ""
}

func (x *DepositTransactionListRequest) GetDetailsLevel() string {
	if x != nil {
		return x.DetailsLevel
	}
	return ""
}

type DepositTransactionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode    string                    `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage string                    `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	Data            []*DepositTransactionList `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Meta            *Meta                     `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *DepositTransactionListResponse) Reset() {
	*x = DepositTransactionListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositTransactionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositTransactionListResponse) ProtoMessage() {}

func (x *DepositTransactionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositTransactionListResponse.ProtoReflect.Descriptor instead.
func (*DepositTransactionListResponse) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{26}
}

func (x *DepositTransactionListResponse) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *DepositTransactionListResponse) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *DepositTransactionListResponse) GetData() []*DepositTransactionList {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DepositTransactionListResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type DepositTransactionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncodedKey         string              `protobuf:"bytes,1,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	Id                 string              `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	ExternalId         string              `protobuf:"bytes,3,opt,name=externalId,proto3" json:"externalId,omitempty"`
	PaymentOrderId     string              `protobuf:"bytes,4,opt,name=paymentOrderId,proto3" json:"paymentOrderId,omitempty"`
	CreationDate       string              `protobuf:"bytes,5,opt,name=creationDate,proto3" json:"creationDate,omitempty"`
	ValueDate          string              `protobuf:"bytes,6,opt,name=valueDate,proto3" json:"valueDate,omitempty"`
	BookingDate        string              `protobuf:"bytes,7,opt,name=bookingDate,proto3" json:"bookingDate,omitempty"`
	Notes              string              `protobuf:"bytes,8,opt,name=notes,proto3" json:"notes,omitempty"`
	ParentAccountKey   string              `protobuf:"bytes,9,opt,name=parentAccountKey,proto3" json:"parentAccountKey,omitempty"`
	Type               string              `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	Amount             float64             `protobuf:"fixed64,11,opt,name=amount,proto3" json:"amount,omitempty"`
	CurrencyCode       string              `protobuf:"bytes,12,opt,name=currencyCode,proto3" json:"currencyCode,omitempty"`
	AffectedAmounts    *AffectedAmounts    `protobuf:"bytes,13,opt,name=affectedAmounts,proto3" json:"affectedAmounts,omitempty"`
	Taxes              *Taxes              `protobuf:"bytes,14,opt,name=taxes,proto3" json:"taxes,omitempty"`
	AccountBalances    *AccountBalances    `protobuf:"bytes,15,opt,name=accountBalances,proto3" json:"accountBalances,omitempty"`
	UserKey            string              `protobuf:"bytes,16,opt,name=userKey,proto3" json:"userKey,omitempty"`
	Terms              *Terms              `protobuf:"bytes,17,opt,name=terms,proto3" json:"terms,omitempty"`
	TransactionDetails *TransactionDetails `protobuf:"bytes,18,opt,name=transactionDetails,proto3" json:"transactionDetails,omitempty"`
	TransferDetails    *TransferDetails    `protobuf:"bytes,19,opt,name=transferDetails,proto3" json:"transferDetails,omitempty"`
	Fees               []*Fees             `protobuf:"bytes,20,rep,name=fees,proto3" json:"fees,omitempty"`
	BranchKey          string              `protobuf:"bytes,21,opt,name=branchKey,proto3" json:"branchKey,omitempty"`
}

func (x *DepositTransactionList) Reset() {
	*x = DepositTransactionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositTransactionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositTransactionList) ProtoMessage() {}

func (x *DepositTransactionList) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositTransactionList.ProtoReflect.Descriptor instead.
func (*DepositTransactionList) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{27}
}

func (x *DepositTransactionList) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *DepositTransactionList) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DepositTransactionList) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *DepositTransactionList) GetPaymentOrderId() string {
	if x != nil {
		return x.PaymentOrderId
	}
	return ""
}

func (x *DepositTransactionList) GetCreationDate() string {
	if x != nil {
		return x.CreationDate
	}
	return ""
}

func (x *DepositTransactionList) GetValueDate() string {
	if x != nil {
		return x.ValueDate
	}
	return ""
}

func (x *DepositTransactionList) GetBookingDate() string {
	if x != nil {
		return x.BookingDate
	}
	return ""
}

func (x *DepositTransactionList) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *DepositTransactionList) GetParentAccountKey() string {
	if x != nil {
		return x.ParentAccountKey
	}
	return ""
}

func (x *DepositTransactionList) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DepositTransactionList) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *DepositTransactionList) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *DepositTransactionList) GetAffectedAmounts() *AffectedAmounts {
	if x != nil {
		return x.AffectedAmounts
	}
	return nil
}

func (x *DepositTransactionList) GetTaxes() *Taxes {
	if x != nil {
		return x.Taxes
	}
	return nil
}

func (x *DepositTransactionList) GetAccountBalances() *AccountBalances {
	if x != nil {
		return x.AccountBalances
	}
	return nil
}

func (x *DepositTransactionList) GetUserKey() string {
	if x != nil {
		return x.UserKey
	}
	return ""
}

func (x *DepositTransactionList) GetTerms() *Terms {
	if x != nil {
		return x.Terms
	}
	return nil
}

func (x *DepositTransactionList) GetTransactionDetails() *TransactionDetails {
	if x != nil {
		return x.TransactionDetails
	}
	return nil
}

func (x *DepositTransactionList) GetTransferDetails() *TransferDetails {
	if x != nil {
		return x.TransferDetails
	}
	return nil
}

func (x *DepositTransactionList) GetFees() []*Fees {
	if x != nil {
		return x.Fees
	}
	return nil
}

func (x *DepositTransactionList) GetBranchKey() string {
	if x != nil {
		return x.BranchKey
	}
	return ""
}

type ReverseDepositTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReversalId string `protobuf:"bytes,1,opt,name=reversalId,proto3" json:"reversalId,omitempty"`
	Notes      string `protobuf:"bytes,2,opt,name=notes,proto3" json:"notes,omitempty"`
}

func (x *ReverseDepositTransactionRequest) Reset() {
	*x = ReverseDepositTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReverseDepositTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReverseDepositTransactionRequest) ProtoMessage() {}

func (x *ReverseDepositTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReverseDepositTransactionRequest.ProtoReflect.Descriptor instead.
func (*ReverseDepositTransactionRequest) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{28}
}

func (x *ReverseDepositTransactionRequest) GetReversalId() string {
	if x != nil {
		return x.ReversalId
	}
	return ""
}

func (x *ReverseDepositTransactionRequest) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

type DepositTransactionSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parameter       *Parameter        `protobuf:"bytes,1,opt,name=parameter,proto3" json:"parameter,omitempty"`
	FilterCriteria  []*FilterCriteria `protobuf:"bytes,2,rep,name=filterCriteria,proto3" json:"filterCriteria,omitempty"`
	SortingCriteria *SortingCriteria  `protobuf:"bytes,3,opt,name=sortingCriteria,proto3" json:"sortingCriteria,omitempty"`
}

func (x *DepositTransactionSearchRequest) Reset() {
	*x = DepositTransactionSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositTransactionSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositTransactionSearchRequest) ProtoMessage() {}

func (x *DepositTransactionSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositTransactionSearchRequest.ProtoReflect.Descriptor instead.
func (*DepositTransactionSearchRequest) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{29}
}

func (x *DepositTransactionSearchRequest) GetParameter() *Parameter {
	if x != nil {
		return x.Parameter
	}
	return nil
}

func (x *DepositTransactionSearchRequest) GetFilterCriteria() []*FilterCriteria {
	if x != nil {
		return x.FilterCriteria
	}
	return nil
}

func (x *DepositTransactionSearchRequest) GetSortingCriteria() *SortingCriteria {
	if x != nil {
		return x.SortingCriteria
	}
	return nil
}

type Terms_InterestSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndexInterestRate float64 `protobuf:"fixed64,1,opt,name=indexInterestRate,proto3" json:"indexInterestRate,omitempty"`
	InterestRate      float64 `protobuf:"fixed64,2,opt,name=interestRate,proto3" json:"interestRate,omitempty"`
}

func (x *Terms_InterestSettings) Reset() {
	*x = Terms_InterestSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Terms_InterestSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terms_InterestSettings) ProtoMessage() {}

func (x *Terms_InterestSettings) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terms_InterestSettings.ProtoReflect.Descriptor instead.
func (*Terms_InterestSettings) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{10, 0}
}

func (x *Terms_InterestSettings) GetIndexInterestRate() float64 {
	if x != nil {
		return x.IndexInterestRate
	}
	return 0
}

func (x *Terms_InterestSettings) GetInterestRate() float64 {
	if x != nil {
		return x.InterestRate
	}
	return 0
}

type Terms_OverdraftInterestSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndexInterestRate float64 `protobuf:"fixed64,1,opt,name=indexInterestRate,proto3" json:"indexInterestRate,omitempty"`
	InterestRate      float64 `protobuf:"fixed64,2,opt,name=interestRate,proto3" json:"interestRate,omitempty"`
}

func (x *Terms_OverdraftInterestSettings) Reset() {
	*x = Terms_OverdraftInterestSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Terms_OverdraftInterestSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terms_OverdraftInterestSettings) ProtoMessage() {}

func (x *Terms_OverdraftInterestSettings) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terms_OverdraftInterestSettings.ProtoReflect.Descriptor instead.
func (*Terms_OverdraftInterestSettings) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{10, 1}
}

func (x *Terms_OverdraftInterestSettings) GetIndexInterestRate() float64 {
	if x != nil {
		return x.IndexInterestRate
	}
	return 0
}

func (x *Terms_OverdraftInterestSettings) GetInterestRate() float64 {
	if x != nil {
		return x.InterestRate
	}
	return 0
}

type Terms_OverdraftSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OverdraftLimit uint32 `protobuf:"varint,1,opt,name=overdraftLimit,proto3" json:"overdraftLimit,omitempty"`
}

func (x *Terms_OverdraftSettings) Reset() {
	*x = Terms_OverdraftSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Terms_OverdraftSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terms_OverdraftSettings) ProtoMessage() {}

func (x *Terms_OverdraftSettings) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terms_OverdraftSettings.ProtoReflect.Descriptor instead.
func (*Terms_OverdraftSettings) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{10, 2}
}

func (x *Terms_OverdraftSettings) GetOverdraftLimit() uint32 {
	if x != nil {
		return x.OverdraftLimit
	}
	return 0
}

type FeeTransaction_Fees struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PredefinedFeeKey string  `protobuf:"bytes,1,opt,name=predefinedFeeKey,proto3" json:"predefinedFeeKey,omitempty"`
	Name             string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Amount           float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	TaxAmount        float64 `protobuf:"fixed64,4,opt,name=taxAmount,proto3" json:"taxAmount,omitempty"`
	Trigger          string  `protobuf:"bytes,5,opt,name=trigger,proto3" json:"trigger,omitempty"`
}

func (x *FeeTransaction_Fees) Reset() {
	*x = FeeTransaction_Fees{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_transaction_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeeTransaction_Fees) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeeTransaction_Fees) ProtoMessage() {}

func (x *FeeTransaction_Fees) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_transaction_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeeTransaction_Fees.ProtoReflect.Descriptor instead.
func (*FeeTransaction_Fees) Descriptor() ([]byte, []int) {
	return file_deposit_transaction_proto_rawDescGZIP(), []int{21, 0}
}

func (x *FeeTransaction_Fees) GetPredefinedFeeKey() string {
	if x != nil {
		return x.PredefinedFeeKey
	}
	return ""
}

func (x *FeeTransaction_Fees) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FeeTransaction_Fees) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *FeeTransaction_Fees) GetTaxAmount() float64 {
	if x != nil {
		return x.TaxAmount
	}
	return 0
}

func (x *FeeTransaction_Fees) GetTrigger() string {
	if x != nil {
		return x.Trigger
	}
	return ""
}

var File_deposit_transaction_proto protoreflect.FileDescriptor

var file_deposit_transaction_proto_rawDesc = []byte{
	0x0a, 0x19, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xba, 0x01, 0x0a, 0x1a, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2d,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0xb4,
	0x06, 0x0a, 0x12, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64,
	0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x40, 0x0a, 0x0f, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x52, 0x0f, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x05, 0x74, 0x61, 0x78, 0x65, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x78,
	0x65, 0x73, 0x52, 0x05, 0x74, 0x61, 0x78, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x0f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x05, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65, 0x72,
	0x6d, 0x73, 0x52, 0x05, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x49, 0x0a, 0x12, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x40, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1f, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x73, 0x18, 0x14,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x65, 0x65,
	0x73, 0x52, 0x04, 0x66, 0x65, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x4b, 0x65, 0x79, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x4b, 0x65, 0x79, 0x22, 0x82, 0x03, 0x0a, 0x19, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x62,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x38, 0x0a,
	0x17, 0x68, 0x6f, 0x6c, 0x64, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17,
	0x68, 0x6f, 0x6c, 0x64, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a,
	0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x12, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2a,
	0x0a, 0x10, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x7e, 0x0a, 0x12, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x32, 0x0a, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4b, 0x65, 0x79, 0x22, 0x8f, 0x01, 0x0a, 0x0f, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x40,
	0x0a, 0x1b, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x1b, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79,
	0x12, 0x3a, 0x0a, 0x18, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x4c, 0x6f, 0x61, 0x6e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x18, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x4c, 0x6f, 0x61, 0x6e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x22, 0x21, 0x0a, 0x05,
	0x54, 0x61, 0x78, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x78, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x74, 0x61, 0x78, 0x52, 0x61, 0x74, 0x65, 0x22,
	0x35, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xc1, 0x03, 0x0a, 0x0f, 0x41, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x65,
	0x65, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a,
	0x66, 0x65, 0x65, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0e, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f,
	0x6f, 0x76, 0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x72,
	0x61, 0x66, 0x74, 0x46, 0x65, 0x65, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x13, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x46, 0x65,
	0x65, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x17, 0x6f, 0x76, 0x65, 0x72,
	0x64, 0x72, 0x61, 0x66, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x17, 0x6f, 0x76, 0x65, 0x72, 0x64,
	0x72, 0x61, 0x66, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x18, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x4f,
	0x76, 0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x18, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x4f,
	0x76, 0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4a,
	0x0a, 0x20, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x4f, 0x76, 0x65, 0x72, 0x64,
	0x72, 0x61, 0x66, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x20, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69,
	0x63, 0x61, 0x6c, 0x4f, 0x76, 0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x96, 0x01, 0x0a, 0x04, 0x46,
	0x65, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x2a, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x65, 0x65,
	0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x65, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x65, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09,
	0x74, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x22, 0x86, 0x02, 0x0a, 0x16, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x41, 0x63, 0x63, 0x72, 0x75, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x28,
	0x0a, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x72, 0x75, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x41, 0x63, 0x63, 0x72, 0x75, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x17, 0x6e, 0x65, 0x67, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x72,
	0x75, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x17, 0x6e, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x72, 0x75,
	0x65, 0x64, 0x12, 0x3a, 0x0a, 0x18, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x72, 0x75, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x18, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x72, 0x75, 0x65, 0x64, 0x12, 0x4c,
	0x0a, 0x21, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x4f, 0x76, 0x65, 0x72, 0x64,
	0x72, 0x61, 0x66, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x72,
	0x75, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x21, 0x74, 0x65, 0x63, 0x68, 0x6e,
	0x69, 0x63, 0x61, 0x6c, 0x4f, 0x76, 0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x72, 0x75, 0x65, 0x64, 0x22, 0x98, 0x04, 0x0a,
	0x05, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x49, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x64, 0x0a, 0x19, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65, 0x72,
	0x6d, 0x73, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x19, 0x6f, 0x76,
	0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x4c, 0x0a, 0x11, 0x6f, 0x76, 0x65, 0x72, 0x64,
	0x72, 0x61, 0x66, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x73,
	0x2e, 0x4f, 0x76, 0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x11, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x64, 0x0a, 0x10, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x1a, 0x6d, 0x0a, 0x19, 0x4f,
	0x76, 0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x11, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x1a, 0x3b, 0x0a, 0x11, 0x4f, 0x76,
	0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x26, 0x0a, 0x0e, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x72, 0x61,
	0x66, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x9d, 0x02, 0x0a, 0x1a, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e,
	0x6f, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x64,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x69,
	0x6e, 0x6b, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79,
	0x12, 0x2c, 0x0a, 0x11, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6c, 0x69, 0x6e,
	0x6b, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x64,
	0x0a, 0x18, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f,
	0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73,
	0x12, 0x32, 0x0a, 0x14, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x8c, 0x02, 0x0a, 0x19, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x03,
	0x66, 0x65, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x0a, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x66, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x65, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x66, 0x65, 0x65, 0x49, 0x64, 0x22, 0xc0, 0x01, 0x0a, 0x1a, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0xc0, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x6c, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x03, 0x66, 0x65, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x46, 0x65, 0x65, 0x52, 0x03, 0x66, 0x65, 0x65, 0x22, 0x3d, 0x0a, 0x07, 0x44,
	0x61, 0x74, 0x61, 0x46, 0x65, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x65, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x66, 0x65, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x65, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x65, 0x65, 0x49, 0x64, 0x22, 0xa5, 0x01, 0x0a, 0x15, 0x46,
	0x65, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x46, 0x65, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x70, 0x72, 0x65, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x65, 0x65, 0x4b,
	0x65, 0x79, 0x22, 0xb2, 0x01, 0x0a, 0x16, 0x46, 0x65, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x46, 0x65, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x8c, 0x07, 0x0a, 0x0e, 0x46, 0x65, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e,
	0x6f, 0x74, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x40, 0x0a, 0x0f, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x52, 0x0f, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x12, 0x40, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x05,
	0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x52, 0x05, 0x74, 0x65, 0x72, 0x6d, 0x73,
	0x12, 0x49, 0x0a, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x40, 0x0a, 0x0f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2e, 0x0a,
	0x04, 0x66, 0x65, 0x65, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x65, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x46, 0x65, 0x65, 0x73, 0x52, 0x04, 0x66, 0x65, 0x65, 0x73, 0x1a, 0x96, 0x01,
	0x0a, 0x04, 0x46, 0x65, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x46, 0x65, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x70, 0x72, 0x65, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x65, 0x65, 0x4b,
	0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x09, 0x74, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x22, 0xb8, 0x01, 0x0a, 0x19, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x1f, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x22, 0x97, 0x01, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x22, 0x84, 0x02, 0x0a, 0x1a,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x11,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x49, 0x64, 0x22, 0xc7, 0x01, 0x0a, 0x1d, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xc2, 0x01, 0x0a,
	0x1e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x1f, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x22, 0xb8, 0x06, 0x0a, 0x16, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x2a,
	0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b,
	0x65, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x40, 0x0a, 0x0f, 0x61, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x0f, 0x61, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x05,
	0x74, 0x61, 0x78, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x78, 0x65, 0x73, 0x52, 0x05, 0x74, 0x61, 0x78, 0x65, 0x73,
	0x12, 0x40, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x05,
	0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x52, 0x05, 0x74, 0x65, 0x72, 0x6d, 0x73,
	0x12, 0x49, 0x0a, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x40, 0x0a, 0x0f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1f, 0x0a,
	0x04, 0x66, 0x65, 0x65, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x65, 0x65, 0x73, 0x52, 0x04, 0x66, 0x65, 0x65, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x22, 0x58, 0x0a, 0x20,
	0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x22, 0xd2, 0x01, 0x0a, 0x1f, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x09, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52,
	0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x0e, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x40, 0x0a, 0x0f, 0x73, 0x6f, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x0f, 0x73, 0x6f, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x42, 0x0a, 0x5a, 0x08, 0x2e,
	0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_deposit_transaction_proto_rawDescOnce sync.Once
	file_deposit_transaction_proto_rawDescData = file_deposit_transaction_proto_rawDesc
)

func file_deposit_transaction_proto_rawDescGZIP() []byte {
	file_deposit_transaction_proto_rawDescOnce.Do(func() {
		file_deposit_transaction_proto_rawDescData = protoimpl.X.CompressGZIP(file_deposit_transaction_proto_rawDescData)
	})
	return file_deposit_transaction_proto_rawDescData
}

var file_deposit_transaction_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_deposit_transaction_proto_goTypes = []interface{}{
	(*DepositTransactionResponse)(nil),       // 0: proto.DepositTransactionResponse
	(*DepositTransaction)(nil),               // 1: proto.DepositTransaction
	(*DepositTransactionRequest)(nil),        // 2: proto.DepositTransactionRequest
	(*TransactionDetails)(nil),               // 3: proto.TransactionDetails
	(*TransferDetails)(nil),                  // 4: proto.TransferDetails
	(*Taxes)(nil),                            // 5: proto.Taxes
	(*AccountBalances)(nil),                  // 6: proto.AccountBalances
	(*AffectedAmounts)(nil),                  // 7: proto.AffectedAmounts
	(*Fees)(nil),                             // 8: proto.Fees
	(*InterestAccruedAmounts)(nil),           // 9: proto.InterestAccruedAmounts
	(*Terms)(nil),                            // 10: proto.Terms
	(*TransferTransactionRequest)(nil),       // 11: proto.TransferTransactionRequest
	(*TransferDetail)(nil),                   // 12: proto.TransferDetail
	(*AdjustTransactionRequest)(nil),         // 13: proto.AdjustTransactionRequest
	(*TransactionDepositRequest)(nil),        // 14: proto.TransactionDepositRequest
	(*FeeRequest)(nil),                       // 15: proto.FeeRequest
	(*TransactionDepositResponse)(nil),       // 16: proto.TransactionDepositResponse
	(*ResultDepositTransaction)(nil),         // 17: proto.ResultDepositTransaction
	(*DataFee)(nil),                          // 18: proto.DataFee
	(*FeeTransactionRequest)(nil),            // 19: proto.FeeTransactionRequest
	(*FeeTransactionResponse)(nil),           // 20: proto.FeeTransactionResponse
	(*FeeTransaction)(nil),                   // 21: proto.FeeTransaction
	(*TransationDepositResponse)(nil),        // 22: proto.TransationDepositResponse
	(*TransationDeposit)(nil),                // 23: proto.TransationDeposit
	(*TransactionTransferRequest)(nil),       // 24: proto.TransactionTransferRequest
	(*DepositTransactionListRequest)(nil),    // 25: proto.DepositTransactionListRequest
	(*DepositTransactionListResponse)(nil),   // 26: proto.DepositTransactionListResponse
	(*DepositTransactionList)(nil),           // 27: proto.DepositTransactionList
	(*ReverseDepositTransactionRequest)(nil), // 28: proto.ReverseDepositTransactionRequest
	(*DepositTransactionSearchRequest)(nil),  // 29: proto.DepositTransactionSearchRequest
	(*Terms_InterestSettings)(nil),           // 30: proto.Terms.InterestSettings
	(*Terms_OverdraftInterestSettings)(nil),  // 31: proto.Terms.OverdraftInterestSettings
	(*Terms_OverdraftSettings)(nil),          // 32: proto.Terms.OverdraftSettings
	(*FeeTransaction_Fees)(nil),              // 33: proto.FeeTransaction.Fees
	(*Meta)(nil),                             // 34: proto.Meta
	(*Parameter)(nil),                        // 35: proto.Parameter
	(*FilterCriteria)(nil),                   // 36: proto.FilterCriteria
	(*SortingCriteria)(nil),                  // 37: proto.SortingCriteria
}
var file_deposit_transaction_proto_depIdxs = []int32{
	1,  // 0: proto.DepositTransactionResponse.data:type_name -> proto.DepositTransaction
	34, // 1: proto.DepositTransactionResponse.meta:type_name -> proto.Meta
	7,  // 2: proto.DepositTransaction.affectedAmounts:type_name -> proto.AffectedAmounts
	5,  // 3: proto.DepositTransaction.taxes:type_name -> proto.Taxes
	6,  // 4: proto.DepositTransaction.accountBalances:type_name -> proto.AccountBalances
	10, // 5: proto.DepositTransaction.terms:type_name -> proto.Terms
	3,  // 6: proto.DepositTransaction.transactionDetails:type_name -> proto.TransactionDetails
	4,  // 7: proto.DepositTransaction.transferDetails:type_name -> proto.TransferDetails
	8,  // 8: proto.DepositTransaction.fees:type_name -> proto.Fees
	3,  // 9: proto.DepositTransactionRequest.transactionDetails:type_name -> proto.TransactionDetails
	30, // 10: proto.Terms.interestSettings:type_name -> proto.Terms.InterestSettings
	31, // 11: proto.Terms.overdraftInterestSettings:type_name -> proto.Terms.OverdraftInterestSettings
	32, // 12: proto.Terms.overdraftSettings:type_name -> proto.Terms.OverdraftSettings
	12, // 13: proto.TransferTransactionRequest.transferDetails:type_name -> proto.TransferDetail
	15, // 14: proto.TransactionDepositRequest.fee:type_name -> proto.FeeRequest
	17, // 15: proto.TransactionDepositResponse.data:type_name -> proto.ResultDepositTransaction
	34, // 16: proto.TransactionDepositResponse.meta:type_name -> proto.Meta
	18, // 17: proto.ResultDepositTransaction.fee:type_name -> proto.DataFee
	21, // 18: proto.FeeTransactionResponse.data:type_name -> proto.FeeTransaction
	34, // 19: proto.FeeTransactionResponse.meta:type_name -> proto.Meta
	7,  // 20: proto.FeeTransaction.affectedAmounts:type_name -> proto.AffectedAmounts
	6,  // 21: proto.FeeTransaction.accountBalances:type_name -> proto.AccountBalances
	10, // 22: proto.FeeTransaction.terms:type_name -> proto.Terms
	3,  // 23: proto.FeeTransaction.transactionDetails:type_name -> proto.TransactionDetails
	4,  // 24: proto.FeeTransaction.transferDetails:type_name -> proto.TransferDetails
	33, // 25: proto.FeeTransaction.fees:type_name -> proto.FeeTransaction.Fees
	23, // 26: proto.TransationDepositResponse.data:type_name -> proto.TransationDeposit
	34, // 27: proto.TransationDepositResponse.meta:type_name -> proto.Meta
	27, // 28: proto.DepositTransactionListResponse.data:type_name -> proto.DepositTransactionList
	34, // 29: proto.DepositTransactionListResponse.meta:type_name -> proto.Meta
	7,  // 30: proto.DepositTransactionList.affectedAmounts:type_name -> proto.AffectedAmounts
	5,  // 31: proto.DepositTransactionList.taxes:type_name -> proto.Taxes
	6,  // 32: proto.DepositTransactionList.accountBalances:type_name -> proto.AccountBalances
	10, // 33: proto.DepositTransactionList.terms:type_name -> proto.Terms
	3,  // 34: proto.DepositTransactionList.transactionDetails:type_name -> proto.TransactionDetails
	4,  // 35: proto.DepositTransactionList.transferDetails:type_name -> proto.TransferDetails
	8,  // 36: proto.DepositTransactionList.fees:type_name -> proto.Fees
	35, // 37: proto.DepositTransactionSearchRequest.parameter:type_name -> proto.Parameter
	36, // 38: proto.DepositTransactionSearchRequest.filterCriteria:type_name -> proto.FilterCriteria
	37, // 39: proto.DepositTransactionSearchRequest.sortingCriteria:type_name -> proto.SortingCriteria
	40, // [40:40] is the sub-list for method output_type
	40, // [40:40] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_deposit_transaction_proto_init() }
func file_deposit_transaction_proto_init() {
	if File_deposit_transaction_proto != nil {
		return
	}
	file_general_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_deposit_transaction_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Taxes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountBalances); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AffectedAmounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fees); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterestAccruedAmounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Terms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdjustTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionDepositRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionDepositResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultDepositTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataFee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeeTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeeTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeeTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransationDepositResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransationDeposit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionTransferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositTransactionListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositTransactionListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositTransactionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReverseDepositTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositTransactionSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Terms_InterestSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Terms_OverdraftInterestSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Terms_OverdraftSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_transaction_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeeTransaction_Fees); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_deposit_transaction_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_deposit_transaction_proto_goTypes,
		DependencyIndexes: file_deposit_transaction_proto_depIdxs,
		MessageInfos:      file_deposit_transaction_proto_msgTypes,
	}.Build()
	File_deposit_transaction_proto = out.File
	file_deposit_transaction_proto_rawDesc = nil
	file_deposit_transaction_proto_goTypes = nil
	file_deposit_transaction_proto_depIdxs = nil
}
