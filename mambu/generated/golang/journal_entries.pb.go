// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.2
// source: journal_entries.proto

package golang

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JournalEntriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode    string            `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage string            `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	Data            []*JournalEntries `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Meta            *Meta             `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *JournalEntriesResponse) Reset() {
	*x = JournalEntriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_journal_entries_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JournalEntriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JournalEntriesResponse) ProtoMessage() {}

func (x *JournalEntriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_journal_entries_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JournalEntriesResponse.ProtoReflect.Descriptor instead.
func (*JournalEntriesResponse) Descriptor() ([]byte, []int) {
	return file_journal_entries_proto_rawDescGZIP(), []int{0}
}

func (x *JournalEntriesResponse) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *JournalEntriesResponse) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *JournalEntriesResponse) GetData() []*JournalEntries {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *JournalEntriesResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type JournalEntriesListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page              uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit             uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	PaginationDetails string `protobuf:"bytes,3,opt,name=paginationDetails,proto3" json:"paginationDetails,omitempty"`
	From              string `protobuf:"bytes,4,opt,name=from,proto3" json:"from,omitempty"`
	To                string `protobuf:"bytes,5,opt,name=to,proto3" json:"to,omitempty"`
	BranchId          string `protobuf:"bytes,6,opt,name=branchId,proto3" json:"branchId,omitempty"`
	GlAccountId       string `protobuf:"bytes,7,opt,name=glAccountId,proto3" json:"glAccountId,omitempty"`
}

func (x *JournalEntriesListRequest) Reset() {
	*x = JournalEntriesListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_journal_entries_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JournalEntriesListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JournalEntriesListRequest) ProtoMessage() {}

func (x *JournalEntriesListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_journal_entries_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JournalEntriesListRequest.ProtoReflect.Descriptor instead.
func (*JournalEntriesListRequest) Descriptor() ([]byte, []int) {
	return file_journal_entries_proto_rawDescGZIP(), []int{1}
}

func (x *JournalEntriesListRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *JournalEntriesListRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *JournalEntriesListRequest) GetPaginationDetails() string {
	if x != nil {
		return x.PaginationDetails
	}
	return ""
}

func (x *JournalEntriesListRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *JournalEntriesListRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *JournalEntriesListRequest) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *JournalEntriesListRequest) GetGlAccountId() string {
	if x != nil {
		return x.GlAccountId
	}
	return ""
}

type JournalEntriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId      string     `protobuf:"bytes,1,opt,name=branchId,proto3" json:"branchId,omitempty"`
	Credits       []*Credits `protobuf:"bytes,2,rep,name=credits,proto3" json:"credits,omitempty"`
	Date          string     `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	Debits        []*Debits  `protobuf:"bytes,4,rep,name=debits,proto3" json:"debits,omitempty"`
	Notes         string     `protobuf:"bytes,5,opt,name=notes,proto3" json:"notes,omitempty"`
	TransactionId string     `protobuf:"bytes,6,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
}

func (x *JournalEntriesRequest) Reset() {
	*x = JournalEntriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_journal_entries_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JournalEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JournalEntriesRequest) ProtoMessage() {}

func (x *JournalEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_journal_entries_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JournalEntriesRequest.ProtoReflect.Descriptor instead.
func (*JournalEntriesRequest) Descriptor() ([]byte, []int) {
	return file_journal_entries_proto_rawDescGZIP(), []int{2}
}

func (x *JournalEntriesRequest) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *JournalEntriesRequest) GetCredits() []*Credits {
	if x != nil {
		return x.Credits
	}
	return nil
}

func (x *JournalEntriesRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *JournalEntriesRequest) GetDebits() []*Debits {
	if x != nil {
		return x.Debits
	}
	return nil
}

func (x *JournalEntriesRequest) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *JournalEntriesRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type Credits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount    float64 `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
	GlAccount string  `protobuf:"bytes,2,opt,name=glAccount,proto3" json:"glAccount,omitempty"`
}

func (x *Credits) Reset() {
	*x = Credits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_journal_entries_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Credits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credits) ProtoMessage() {}

func (x *Credits) ProtoReflect() protoreflect.Message {
	mi := &file_journal_entries_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credits.ProtoReflect.Descriptor instead.
func (*Credits) Descriptor() ([]byte, []int) {
	return file_journal_entries_proto_rawDescGZIP(), []int{3}
}

func (x *Credits) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Credits) GetGlAccount() string {
	if x != nil {
		return x.GlAccount
	}
	return ""
}

type Debits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount    float64 `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
	GlAccount string  `protobuf:"bytes,2,opt,name=glAccount,proto3" json:"glAccount,omitempty"`
}

func (x *Debits) Reset() {
	*x = Debits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_journal_entries_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Debits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Debits) ProtoMessage() {}

func (x *Debits) ProtoReflect() protoreflect.Message {
	mi := &file_journal_entries_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Debits.ProtoReflect.Descriptor instead.
func (*Debits) Descriptor() ([]byte, []int) {
	return file_journal_entries_proto_rawDescGZIP(), []int{4}
}

func (x *Debits) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Debits) GetGlAccount() string {
	if x != nil {
		return x.GlAccount
	}
	return ""
}

type JournalEntries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountKey        string         `protobuf:"bytes,1,opt,name=accountKey,proto3" json:"accountKey,omitempty"`
	Amount            float64        `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	AssignedBranchKey string         `protobuf:"bytes,3,opt,name=assignedBranchKey,proto3" json:"assignedBranchKey,omitempty"`
	BookingDate       string         `protobuf:"bytes,4,opt,name=bookingDate,proto3" json:"bookingDate,omitempty"`
	CreationDate      string         `protobuf:"bytes,5,opt,name=creationDate,proto3" json:"creationDate,omitempty"`
	EncodedKey        string         `protobuf:"bytes,6,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	EntryID           uint32         `protobuf:"varint,7,opt,name=entryID,proto3" json:"entryID,omitempty"`
	ForeignAmount     *ForeignAmount `protobuf:"bytes,8,opt,name=foreignAmount,proto3" json:"foreignAmount,omitempty"`
	GlAccount         *GlAccount     `protobuf:"bytes,9,opt,name=glAccount,proto3" json:"glAccount,omitempty"`
	Notes             string         `protobuf:"bytes,10,opt,name=notes,proto3" json:"notes,omitempty"`
	ProductKey        string         `protobuf:"bytes,11,opt,name=productKey,proto3" json:"productKey,omitempty"`
	ProductType       string         `protobuf:"bytes,12,opt,name=productType,proto3" json:"productType,omitempty"`
	ReversalEntryKey  string         `protobuf:"bytes,13,opt,name=reversalEntryKey,proto3" json:"reversalEntryKey,omitempty"`
	TransactionId     string         `protobuf:"bytes,14,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	Type              string         `protobuf:"bytes,15,opt,name=type,proto3" json:"type,omitempty"`
	UserKey           string         `protobuf:"bytes,16,opt,name=userKey,proto3" json:"userKey,omitempty"`
}

func (x *JournalEntries) Reset() {
	*x = JournalEntries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_journal_entries_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JournalEntries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JournalEntries) ProtoMessage() {}

func (x *JournalEntries) ProtoReflect() protoreflect.Message {
	mi := &file_journal_entries_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JournalEntries.ProtoReflect.Descriptor instead.
func (*JournalEntries) Descriptor() ([]byte, []int) {
	return file_journal_entries_proto_rawDescGZIP(), []int{5}
}

func (x *JournalEntries) GetAccountKey() string {
	if x != nil {
		return x.AccountKey
	}
	return ""
}

func (x *JournalEntries) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *JournalEntries) GetAssignedBranchKey() string {
	if x != nil {
		return x.AssignedBranchKey
	}
	return ""
}

func (x *JournalEntries) GetBookingDate() string {
	if x != nil {
		return x.BookingDate
	}
	return ""
}

func (x *JournalEntries) GetCreationDate() string {
	if x != nil {
		return x.CreationDate
	}
	return ""
}

func (x *JournalEntries) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *JournalEntries) GetEntryID() uint32 {
	if x != nil {
		return x.EntryID
	}
	return 0
}

func (x *JournalEntries) GetForeignAmount() *ForeignAmount {
	if x != nil {
		return x.ForeignAmount
	}
	return nil
}

func (x *JournalEntries) GetGlAccount() *GlAccount {
	if x != nil {
		return x.GlAccount
	}
	return nil
}

func (x *JournalEntries) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *JournalEntries) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *JournalEntries) GetProductType() string {
	if x != nil {
		return x.ProductType
	}
	return ""
}

func (x *JournalEntries) GetReversalEntryKey() string {
	if x != nil {
		return x.ReversalEntryKey
	}
	return ""
}

func (x *JournalEntries) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *JournalEntries) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *JournalEntries) GetUserKey() string {
	if x != nil {
		return x.UserKey
	}
	return ""
}

type ForeignAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountingRate *ForeignAmount_AccountingRate `protobuf:"bytes,1,opt,name=accountingRate,proto3" json:"accountingRate,omitempty"`
	Amount         float64                       `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency       *ForeignAmount_Currency       `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *ForeignAmount) Reset() {
	*x = ForeignAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_journal_entries_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForeignAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForeignAmount) ProtoMessage() {}

func (x *ForeignAmount) ProtoReflect() protoreflect.Message {
	mi := &file_journal_entries_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForeignAmount.ProtoReflect.Descriptor instead.
func (*ForeignAmount) Descriptor() ([]byte, []int) {
	return file_journal_entries_proto_rawDescGZIP(), []int{6}
}

func (x *ForeignAmount) GetAccountingRate() *ForeignAmount_AccountingRate {
	if x != nil {
		return x.AccountingRate
	}
	return nil
}

func (x *ForeignAmount) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ForeignAmount) GetCurrency() *ForeignAmount_Currency {
	if x != nil {
		return x.Currency
	}
	return nil
}

type GlAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Activated                 bool                `protobuf:"varint,1,opt,name=activated,proto3" json:"activated,omitempty"`
	AllowManualJournalEntries bool                `protobuf:"varint,2,opt,name=allowManualJournalEntries,proto3" json:"allowManualJournalEntries,omitempty"`
	Balance                   float64             `protobuf:"fixed64,3,opt,name=balance,proto3" json:"balance,omitempty"`
	CreationDate              string              `protobuf:"bytes,4,opt,name=creationDate,proto3" json:"creationDate,omitempty"`
	Currency                  *GlAccount_Currency `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	Description               string              `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	EncodedKey                string              `protobuf:"bytes,7,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	GlCode                    string              `protobuf:"bytes,8,opt,name=glCode,proto3" json:"glCode,omitempty"`
	LastModifiedDate          string              `protobuf:"bytes,9,opt,name=lastModifiedDate,proto3" json:"lastModifiedDate,omitempty"`
	MigrationEventKey         string              `protobuf:"bytes,10,opt,name=migrationEventKey,proto3" json:"migrationEventKey,omitempty"`
	Name                      string              `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	StripTrailingZeros        bool                `protobuf:"varint,12,opt,name=stripTrailingZeros,proto3" json:"stripTrailingZeros,omitempty"`
	Type                      string              `protobuf:"bytes,13,opt,name=type,proto3" json:"type,omitempty"`
	Usage                     string              `protobuf:"bytes,14,opt,name=usage,proto3" json:"usage,omitempty"`
}

func (x *GlAccount) Reset() {
	*x = GlAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_journal_entries_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlAccount) ProtoMessage() {}

func (x *GlAccount) ProtoReflect() protoreflect.Message {
	mi := &file_journal_entries_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlAccount.ProtoReflect.Descriptor instead.
func (*GlAccount) Descriptor() ([]byte, []int) {
	return file_journal_entries_proto_rawDescGZIP(), []int{7}
}

func (x *GlAccount) GetActivated() bool {
	if x != nil {
		return x.Activated
	}
	return false
}

func (x *GlAccount) GetAllowManualJournalEntries() bool {
	if x != nil {
		return x.AllowManualJournalEntries
	}
	return false
}

func (x *GlAccount) GetBalance() float64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *GlAccount) GetCreationDate() string {
	if x != nil {
		return x.CreationDate
	}
	return ""
}

func (x *GlAccount) GetCurrency() *GlAccount_Currency {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *GlAccount) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GlAccount) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *GlAccount) GetGlCode() string {
	if x != nil {
		return x.GlCode
	}
	return ""
}

func (x *GlAccount) GetLastModifiedDate() string {
	if x != nil {
		return x.LastModifiedDate
	}
	return ""
}

func (x *GlAccount) GetMigrationEventKey() string {
	if x != nil {
		return x.MigrationEventKey
	}
	return ""
}

func (x *GlAccount) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GlAccount) GetStripTrailingZeros() bool {
	if x != nil {
		return x.StripTrailingZeros
	}
	return false
}

func (x *GlAccount) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GlAccount) GetUsage() string {
	if x != nil {
		return x.Usage
	}
	return ""
}

type ForeignAmount_AccountingRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncodedKey       string  `protobuf:"bytes,1,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	EndDate          string  `protobuf:"bytes,2,opt,name=endDate,proto3" json:"endDate,omitempty"`
	FromCurrencyCode string  `protobuf:"bytes,3,opt,name=fromCurrencyCode,proto3" json:"fromCurrencyCode,omitempty"`
	Rate             float64 `protobuf:"fixed64,4,opt,name=rate,proto3" json:"rate,omitempty"`
	StartDate        string  `protobuf:"bytes,5,opt,name=startDate,proto3" json:"startDate,omitempty"`
	ToCurrencyCode   string  `protobuf:"bytes,6,opt,name=toCurrencyCode,proto3" json:"toCurrencyCode,omitempty"`
}

func (x *ForeignAmount_AccountingRate) Reset() {
	*x = ForeignAmount_AccountingRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_journal_entries_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForeignAmount_AccountingRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForeignAmount_AccountingRate) ProtoMessage() {}

func (x *ForeignAmount_AccountingRate) ProtoReflect() protoreflect.Message {
	mi := &file_journal_entries_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForeignAmount_AccountingRate.ProtoReflect.Descriptor instead.
func (*ForeignAmount_AccountingRate) Descriptor() ([]byte, []int) {
	return file_journal_entries_proto_rawDescGZIP(), []int{6, 0}
}

func (x *ForeignAmount_AccountingRate) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *ForeignAmount_AccountingRate) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *ForeignAmount_AccountingRate) GetFromCurrencyCode() string {
	if x != nil {
		return x.FromCurrencyCode
	}
	return ""
}

func (x *ForeignAmount_AccountingRate) GetRate() float64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *ForeignAmount_AccountingRate) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *ForeignAmount_AccountingRate) GetToCurrencyCode() string {
	if x != nil {
		return x.ToCurrencyCode
	}
	return ""
}

type ForeignAmount_Currency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	CurrencyCode string `protobuf:"bytes,2,opt,name=currencyCode,proto3" json:"currencyCode,omitempty"`
}

func (x *ForeignAmount_Currency) Reset() {
	*x = ForeignAmount_Currency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_journal_entries_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForeignAmount_Currency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForeignAmount_Currency) ProtoMessage() {}

func (x *ForeignAmount_Currency) ProtoReflect() protoreflect.Message {
	mi := &file_journal_entries_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForeignAmount_Currency.ProtoReflect.Descriptor instead.
func (*ForeignAmount_Currency) Descriptor() ([]byte, []int) {
	return file_journal_entries_proto_rawDescGZIP(), []int{6, 1}
}

func (x *ForeignAmount_Currency) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ForeignAmount_Currency) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

type GlAccount_Currency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	CurrencyCode string `protobuf:"bytes,2,opt,name=currencyCode,proto3" json:"currencyCode,omitempty"`
}

func (x *GlAccount_Currency) Reset() {
	*x = GlAccount_Currency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_journal_entries_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlAccount_Currency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlAccount_Currency) ProtoMessage() {}

func (x *GlAccount_Currency) ProtoReflect() protoreflect.Message {
	mi := &file_journal_entries_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlAccount_Currency.ProtoReflect.Descriptor instead.
func (*GlAccount_Currency) Descriptor() ([]byte, []int) {
	return file_journal_entries_proto_rawDescGZIP(), []int{7, 0}
}

func (x *GlAccount_Currency) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GlAccount_Currency) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

var File_journal_entries_proto protoreflect.FileDescriptor

var file_journal_entries_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb2, 0x01,
	0x0a, 0x16, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4a, 0x6f, 0x75,
	0x72, 0x6e, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x1f, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x22, 0xd5, 0x01, 0x0a, 0x19, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x6c, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67,
	0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xd4, 0x01, 0x0a, 0x15, 0x4a,
	0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x73, 0x52, 0x07, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x25,
	0x0a, 0x06, 0x64, 0x65, 0x62, 0x69, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x62, 0x69, 0x74, 0x73, 0x52, 0x06, 0x64,
	0x65, 0x62, 0x69, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x3f, 0x0a, 0x07, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x3e, 0x0a, 0x06, 0x44, 0x65, 0x62, 0x69, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0xba, 0x04, 0x0a, 0x0e, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a,
	0x11, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x62,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x44, 0x12, 0x3a, 0x0a, 0x0d, 0x66,
	0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x65, 0x69,
	0x67, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67,
	0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x09, 0x67, 0x6c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x09, 0x67, 0x6c,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x2a, 0x0a, 0x10, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x4b, 0x65, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x4b, 0x65, 0x79,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x22,
	0xc6, 0x03, 0x0a, 0x0d, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x4b, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x65, 0x52, 0x0e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x1a, 0xd0, 0x01, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65,
	0x64, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2a,
	0x0a, 0x10, 0x66, 0x72, 0x6f, 0x6d, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x66, 0x72, 0x6f, 0x6d, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x74, 0x6f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x6f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x1a, 0x42, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xc2, 0x04, 0x0a, 0x09, 0x47, 0x6c, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x19, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x6e,
	0x75, 0x61, 0x6c, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x61,
	0x6e, 0x75, 0x61, 0x6c, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x35, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x6c, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x6c, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x61, 0x73,
	0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a,
	0x11, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4b,
	0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x2e, 0x0a, 0x12, 0x73, 0x74, 0x72, 0x69, 0x70, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67,
	0x5a, 0x65, 0x72, 0x6f, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x73, 0x74, 0x72,
	0x69, 0x70, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x5a, 0x65, 0x72, 0x6f, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x42, 0x0a, 0x08, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x0a, 0x5a,
	0x08, 0x2e, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_journal_entries_proto_rawDescOnce sync.Once
	file_journal_entries_proto_rawDescData = file_journal_entries_proto_rawDesc
)

func file_journal_entries_proto_rawDescGZIP() []byte {
	file_journal_entries_proto_rawDescOnce.Do(func() {
		file_journal_entries_proto_rawDescData = protoimpl.X.CompressGZIP(file_journal_entries_proto_rawDescData)
	})
	return file_journal_entries_proto_rawDescData
}

var file_journal_entries_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_journal_entries_proto_goTypes = []interface{}{
	(*JournalEntriesResponse)(nil),       // 0: proto.JournalEntriesResponse
	(*JournalEntriesListRequest)(nil),    // 1: proto.JournalEntriesListRequest
	(*JournalEntriesRequest)(nil),        // 2: proto.JournalEntriesRequest
	(*Credits)(nil),                      // 3: proto.Credits
	(*Debits)(nil),                       // 4: proto.Debits
	(*JournalEntries)(nil),               // 5: proto.JournalEntries
	(*ForeignAmount)(nil),                // 6: proto.ForeignAmount
	(*GlAccount)(nil),                    // 7: proto.GlAccount
	(*ForeignAmount_AccountingRate)(nil), // 8: proto.ForeignAmount.AccountingRate
	(*ForeignAmount_Currency)(nil),       // 9: proto.ForeignAmount.Currency
	(*GlAccount_Currency)(nil),           // 10: proto.GlAccount.Currency
	(*Meta)(nil),                         // 11: proto.Meta
}
var file_journal_entries_proto_depIdxs = []int32{
	5,  // 0: proto.JournalEntriesResponse.data:type_name -> proto.JournalEntries
	11, // 1: proto.JournalEntriesResponse.meta:type_name -> proto.Meta
	3,  // 2: proto.JournalEntriesRequest.credits:type_name -> proto.Credits
	4,  // 3: proto.JournalEntriesRequest.debits:type_name -> proto.Debits
	6,  // 4: proto.JournalEntries.foreignAmount:type_name -> proto.ForeignAmount
	7,  // 5: proto.JournalEntries.glAccount:type_name -> proto.GlAccount
	8,  // 6: proto.ForeignAmount.accountingRate:type_name -> proto.ForeignAmount.AccountingRate
	9,  // 7: proto.ForeignAmount.currency:type_name -> proto.ForeignAmount.Currency
	10, // 8: proto.GlAccount.currency:type_name -> proto.GlAccount.Currency
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_journal_entries_proto_init() }
func file_journal_entries_proto_init() {
	if File_journal_entries_proto != nil {
		return
	}
	file_general_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_journal_entries_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JournalEntriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_journal_entries_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JournalEntriesListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_journal_entries_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JournalEntriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_journal_entries_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Credits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_journal_entries_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Debits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_journal_entries_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JournalEntries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_journal_entries_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForeignAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_journal_entries_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_journal_entries_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForeignAmount_AccountingRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_journal_entries_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForeignAmount_Currency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_journal_entries_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlAccount_Currency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_journal_entries_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_journal_entries_proto_goTypes,
		DependencyIndexes: file_journal_entries_proto_depIdxs,
		MessageInfos:      file_journal_entries_proto_msgTypes,
	}.Build()
	File_journal_entries_proto = out.File
	file_journal_entries_proto_rawDesc = nil
	file_journal_entries_proto_goTypes = nil
	file_journal_entries_proto_depIdxs = nil
}
