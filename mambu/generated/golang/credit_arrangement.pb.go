// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.2
// source: credit_arrangement.proto

package golang

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreditArrangementCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount            float64                                  `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
	ExpireDate        string                                   `protobuf:"bytes,2,opt,name=expireDate,proto3" json:"expireDate,omitempty"`
	ExposureLimitType string                                   `protobuf:"bytes,3,opt,name=exposureLimitType,proto3" json:"exposureLimitType,omitempty"`
	HolderKey         string                                   `protobuf:"bytes,4,opt,name=holderKey,proto3" json:"holderKey,omitempty"`
	HolderType        string                                   `protobuf:"bytes,5,opt,name=holderType,proto3" json:"holderType,omitempty"`
	LastModifiedDate  string                                   `protobuf:"bytes,6,opt,name=lastModifiedDate,proto3" json:"lastModifiedDate,omitempty"`
	Notes             string                                   `protobuf:"bytes,7,opt,name=notes,proto3" json:"notes,omitempty"`
	StartDate         string                                   `protobuf:"bytes,8,opt,name=startDate,proto3" json:"startDate,omitempty"`
	Currency          *CreditArrangementCreateRequest_Currency `protobuf:"bytes,9,opt,name=currency,proto3" json:"currency,omitempty"`
	XCfsAccount       *XCfsAccount                             `protobuf:"bytes,10,opt,name=_cfsAccount,json=CfsAccount,proto3" json:"_cfsAccount,omitempty"`
}

func (x *CreditArrangementCreateRequest) Reset() {
	*x = CreditArrangementCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credit_arrangement_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditArrangementCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditArrangementCreateRequest) ProtoMessage() {}

func (x *CreditArrangementCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_credit_arrangement_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditArrangementCreateRequest.ProtoReflect.Descriptor instead.
func (*CreditArrangementCreateRequest) Descriptor() ([]byte, []int) {
	return file_credit_arrangement_proto_rawDescGZIP(), []int{0}
}

func (x *CreditArrangementCreateRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreditArrangementCreateRequest) GetExpireDate() string {
	if x != nil {
		return x.ExpireDate
	}
	return ""
}

func (x *CreditArrangementCreateRequest) GetExposureLimitType() string {
	if x != nil {
		return x.ExposureLimitType
	}
	return ""
}

func (x *CreditArrangementCreateRequest) GetHolderKey() string {
	if x != nil {
		return x.HolderKey
	}
	return ""
}

func (x *CreditArrangementCreateRequest) GetHolderType() string {
	if x != nil {
		return x.HolderType
	}
	return ""
}

func (x *CreditArrangementCreateRequest) GetLastModifiedDate() string {
	if x != nil {
		return x.LastModifiedDate
	}
	return ""
}

func (x *CreditArrangementCreateRequest) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *CreditArrangementCreateRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *CreditArrangementCreateRequest) GetCurrency() *CreditArrangementCreateRequest_Currency {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *CreditArrangementCreateRequest) GetXCfsAccount() *XCfsAccount {
	if x != nil {
		return x.XCfsAccount
	}
	return nil
}

type XCfsAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CfsClientId string `protobuf:"bytes,1,opt,name=cfsClientId,proto3" json:"cfsClientId,omitempty"`
}

func (x *XCfsAccount) Reset() {
	*x = XCfsAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credit_arrangement_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XCfsAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XCfsAccount) ProtoMessage() {}

func (x *XCfsAccount) ProtoReflect() protoreflect.Message {
	mi := &file_credit_arrangement_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XCfsAccount.ProtoReflect.Descriptor instead.
func (*XCfsAccount) Descriptor() ([]byte, []int) {
	return file_credit_arrangement_proto_rawDescGZIP(), []int{1}
}

func (x *XCfsAccount) GetCfsClientId() string {
	if x != nil {
		return x.CfsClientId
	}
	return ""
}

type CreditArrangementResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode    string             `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage string             `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	Data            *CreditArrangement `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Meta            *Meta              `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *CreditArrangementResponse) Reset() {
	*x = CreditArrangementResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credit_arrangement_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditArrangementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditArrangementResponse) ProtoMessage() {}

func (x *CreditArrangementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_credit_arrangement_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditArrangementResponse.ProtoReflect.Descriptor instead.
func (*CreditArrangementResponse) Descriptor() ([]byte, []int) {
	return file_credit_arrangement_proto_rawDescGZIP(), []int{2}
}

func (x *CreditArrangementResponse) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *CreditArrangementResponse) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *CreditArrangementResponse) GetData() *CreditArrangement {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreditArrangementResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type CreditArrangement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount                float64                     `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
	ApprovedDate          string                      `protobuf:"bytes,2,opt,name=approvedDate,proto3" json:"approvedDate,omitempty"`
	AvailableCreditAmount float64                     `protobuf:"fixed64,3,opt,name=availableCreditAmount,proto3" json:"availableCreditAmount,omitempty"`
	ClosedDate            string                      `protobuf:"bytes,4,opt,name=closedDate,proto3" json:"closedDate,omitempty"`
	ConsumedCreditAmount  float64                     `protobuf:"fixed64,5,opt,name=consumedCreditAmount,proto3" json:"consumedCreditAmount,omitempty"`
	CreationDate          string                      `protobuf:"bytes,6,opt,name=creationDate,proto3" json:"creationDate,omitempty"`
	Currency              *CreditArrangement_Currency `protobuf:"bytes,7,opt,name=currency,proto3" json:"currency,omitempty"`
	EncodedKey            string                      `protobuf:"bytes,8,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	ExpireDate            string                      `protobuf:"bytes,9,opt,name=expireDate,proto3" json:"expireDate,omitempty"`
	ExposureLimitType     string                      `protobuf:"bytes,10,opt,name=exposureLimitType,proto3" json:"exposureLimitType,omitempty"`
	HolderKey             string                      `protobuf:"bytes,11,opt,name=holderKey,proto3" json:"holderKey,omitempty"`
	HolderType            string                      `protobuf:"bytes,12,opt,name=holderType,proto3" json:"holderType,omitempty"`
	Id                    string                      `protobuf:"bytes,13,opt,name=id,proto3" json:"id,omitempty"`
	LastModifiedDate      string                      `protobuf:"bytes,14,opt,name=lastModifiedDate,proto3" json:"lastModifiedDate,omitempty"`
	Notes                 string                      `protobuf:"bytes,15,opt,name=notes,proto3" json:"notes,omitempty"`
	StartDate             string                      `protobuf:"bytes,16,opt,name=startDate,proto3" json:"startDate,omitempty"`
	State                 string                      `protobuf:"bytes,17,opt,name=state,proto3" json:"state,omitempty"`
	SubState              string                      `protobuf:"bytes,18,opt,name=subState,proto3" json:"subState,omitempty"`
}

func (x *CreditArrangement) Reset() {
	*x = CreditArrangement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credit_arrangement_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditArrangement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditArrangement) ProtoMessage() {}

func (x *CreditArrangement) ProtoReflect() protoreflect.Message {
	mi := &file_credit_arrangement_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditArrangement.ProtoReflect.Descriptor instead.
func (*CreditArrangement) Descriptor() ([]byte, []int) {
	return file_credit_arrangement_proto_rawDescGZIP(), []int{3}
}

func (x *CreditArrangement) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreditArrangement) GetApprovedDate() string {
	if x != nil {
		return x.ApprovedDate
	}
	return ""
}

func (x *CreditArrangement) GetAvailableCreditAmount() float64 {
	if x != nil {
		return x.AvailableCreditAmount
	}
	return 0
}

func (x *CreditArrangement) GetClosedDate() string {
	if x != nil {
		return x.ClosedDate
	}
	return ""
}

func (x *CreditArrangement) GetConsumedCreditAmount() float64 {
	if x != nil {
		return x.ConsumedCreditAmount
	}
	return 0
}

func (x *CreditArrangement) GetCreationDate() string {
	if x != nil {
		return x.CreationDate
	}
	return ""
}

func (x *CreditArrangement) GetCurrency() *CreditArrangement_Currency {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *CreditArrangement) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *CreditArrangement) GetExpireDate() string {
	if x != nil {
		return x.ExpireDate
	}
	return ""
}

func (x *CreditArrangement) GetExposureLimitType() string {
	if x != nil {
		return x.ExposureLimitType
	}
	return ""
}

func (x *CreditArrangement) GetHolderKey() string {
	if x != nil {
		return x.HolderKey
	}
	return ""
}

func (x *CreditArrangement) GetHolderType() string {
	if x != nil {
		return x.HolderType
	}
	return ""
}

func (x *CreditArrangement) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreditArrangement) GetLastModifiedDate() string {
	if x != nil {
		return x.LastModifiedDate
	}
	return ""
}

func (x *CreditArrangement) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *CreditArrangement) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *CreditArrangement) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *CreditArrangement) GetSubState() string {
	if x != nil {
		return x.SubState
	}
	return ""
}

type CreditArrangementAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreditArrangementId string `protobuf:"bytes,1,opt,name=creditArrangementId,proto3" json:"creditArrangementId,omitempty"`
	AccountId           string `protobuf:"bytes,2,opt,name=accountId,proto3" json:"accountId,omitempty"`
	AccountType         string `protobuf:"bytes,3,opt,name=accountType,proto3" json:"accountType,omitempty"`
}

func (x *CreditArrangementAccountRequest) Reset() {
	*x = CreditArrangementAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credit_arrangement_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditArrangementAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditArrangementAccountRequest) ProtoMessage() {}

func (x *CreditArrangementAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_credit_arrangement_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditArrangementAccountRequest.ProtoReflect.Descriptor instead.
func (*CreditArrangementAccountRequest) Descriptor() ([]byte, []int) {
	return file_credit_arrangement_proto_rawDescGZIP(), []int{4}
}

func (x *CreditArrangementAccountRequest) GetCreditArrangementId() string {
	if x != nil {
		return x.CreditArrangementId
	}
	return ""
}

func (x *CreditArrangementAccountRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *CreditArrangementAccountRequest) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

type CreditArrangementAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode    string                    `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage string                    `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	Data            *CreditArrangementAccount `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Meta            *Meta                     `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *CreditArrangementAccountResponse) Reset() {
	*x = CreditArrangementAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credit_arrangement_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditArrangementAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditArrangementAccountResponse) ProtoMessage() {}

func (x *CreditArrangementAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_credit_arrangement_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditArrangementAccountResponse.ProtoReflect.Descriptor instead.
func (*CreditArrangementAccountResponse) Descriptor() ([]byte, []int) {
	return file_credit_arrangement_proto_rawDescGZIP(), []int{5}
}

func (x *CreditArrangementAccountResponse) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *CreditArrangementAccountResponse) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *CreditArrangementAccountResponse) GetData() *CreditArrangementAccount {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreditArrangementAccountResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type CreditArrangementAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoanAccounts    []*LoanAccount    `protobuf:"bytes,1,rep,name=loanAccounts,proto3" json:"loanAccounts,omitempty"`
	DepositAccounts []*DepositAccount `protobuf:"bytes,2,rep,name=depositAccounts,proto3" json:"depositAccounts,omitempty"`
}

func (x *CreditArrangementAccount) Reset() {
	*x = CreditArrangementAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credit_arrangement_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditArrangementAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditArrangementAccount) ProtoMessage() {}

func (x *CreditArrangementAccount) ProtoReflect() protoreflect.Message {
	mi := &file_credit_arrangement_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditArrangementAccount.ProtoReflect.Descriptor instead.
func (*CreditArrangementAccount) Descriptor() ([]byte, []int) {
	return file_credit_arrangement_proto_rawDescGZIP(), []int{6}
}

func (x *CreditArrangementAccount) GetLoanAccounts() []*LoanAccount {
	if x != nil {
		return x.LoanAccounts
	}
	return nil
}

func (x *CreditArrangementAccount) GetDepositAccounts() []*DepositAccount {
	if x != nil {
		return x.DepositAccounts
	}
	return nil
}

type CreditArrangementUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreditArrangementId string                                   `protobuf:"bytes,1,opt,name=creditArrangementId,proto3" json:"creditArrangementId,omitempty"`
	Amount              float64                                  `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	ExpireDate          string                                   `protobuf:"bytes,3,opt,name=expireDate,proto3" json:"expireDate,omitempty"`
	ExposureLimitType   string                                   `protobuf:"bytes,4,opt,name=exposureLimitType,proto3" json:"exposureLimitType,omitempty"`
	Notes               string                                   `protobuf:"bytes,5,opt,name=notes,proto3" json:"notes,omitempty"`
	StartDate           string                                   `protobuf:"bytes,6,opt,name=startDate,proto3" json:"startDate,omitempty"`
	Currency            *CreditArrangementUpdateRequest_Currency `protobuf:"bytes,7,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *CreditArrangementUpdateRequest) Reset() {
	*x = CreditArrangementUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credit_arrangement_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditArrangementUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditArrangementUpdateRequest) ProtoMessage() {}

func (x *CreditArrangementUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_credit_arrangement_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditArrangementUpdateRequest.ProtoReflect.Descriptor instead.
func (*CreditArrangementUpdateRequest) Descriptor() ([]byte, []int) {
	return file_credit_arrangement_proto_rawDescGZIP(), []int{7}
}

func (x *CreditArrangementUpdateRequest) GetCreditArrangementId() string {
	if x != nil {
		return x.CreditArrangementId
	}
	return ""
}

func (x *CreditArrangementUpdateRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreditArrangementUpdateRequest) GetExpireDate() string {
	if x != nil {
		return x.ExpireDate
	}
	return ""
}

func (x *CreditArrangementUpdateRequest) GetExposureLimitType() string {
	if x != nil {
		return x.ExposureLimitType
	}
	return ""
}

func (x *CreditArrangementUpdateRequest) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *CreditArrangementUpdateRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *CreditArrangementUpdateRequest) GetCurrency() *CreditArrangementUpdateRequest_Currency {
	if x != nil {
		return x.Currency
	}
	return nil
}

type CreditArrangementDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreditArrangementId string `protobuf:"bytes,1,opt,name=creditArrangementId,proto3" json:"creditArrangementId,omitempty"`
	DetailsLevel        string `protobuf:"bytes,2,opt,name=detailsLevel,proto3" json:"detailsLevel,omitempty"`
}

func (x *CreditArrangementDetailRequest) Reset() {
	*x = CreditArrangementDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credit_arrangement_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditArrangementDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditArrangementDetailRequest) ProtoMessage() {}

func (x *CreditArrangementDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_credit_arrangement_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditArrangementDetailRequest.ProtoReflect.Descriptor instead.
func (*CreditArrangementDetailRequest) Descriptor() ([]byte, []int) {
	return file_credit_arrangement_proto_rawDescGZIP(), []int{8}
}

func (x *CreditArrangementDetailRequest) GetCreditArrangementId() string {
	if x != nil {
		return x.CreditArrangementId
	}
	return ""
}

func (x *CreditArrangementDetailRequest) GetDetailsLevel() string {
	if x != nil {
		return x.DetailsLevel
	}
	return ""
}

type CreditArrangementSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilterCriteria  []*FilterCriteria `protobuf:"bytes,1,rep,name=filterCriteria,proto3" json:"filterCriteria,omitempty"`
	SortingCriteria *SortingCriteria  `protobuf:"bytes,2,opt,name=sortingCriteria,proto3" json:"sortingCriteria,omitempty"`
}

func (x *CreditArrangementSearchRequest) Reset() {
	*x = CreditArrangementSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credit_arrangement_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditArrangementSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditArrangementSearchRequest) ProtoMessage() {}

func (x *CreditArrangementSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_credit_arrangement_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditArrangementSearchRequest.ProtoReflect.Descriptor instead.
func (*CreditArrangementSearchRequest) Descriptor() ([]byte, []int) {
	return file_credit_arrangement_proto_rawDescGZIP(), []int{9}
}

func (x *CreditArrangementSearchRequest) GetFilterCriteria() []*FilterCriteria {
	if x != nil {
		return x.FilterCriteria
	}
	return nil
}

func (x *CreditArrangementSearchRequest) GetSortingCriteria() *SortingCriteria {
	if x != nil {
		return x.SortingCriteria
	}
	return nil
}

type CreditArrangementListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode    string               `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage string               `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	Data            []*CreditArrangement `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Meta            *Meta                `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *CreditArrangementListResponse) Reset() {
	*x = CreditArrangementListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credit_arrangement_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditArrangementListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditArrangementListResponse) ProtoMessage() {}

func (x *CreditArrangementListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_credit_arrangement_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditArrangementListResponse.ProtoReflect.Descriptor instead.
func (*CreditArrangementListResponse) Descriptor() ([]byte, []int) {
	return file_credit_arrangement_proto_rawDescGZIP(), []int{10}
}

func (x *CreditArrangementListResponse) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *CreditArrangementListResponse) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *CreditArrangementListResponse) GetData() []*CreditArrangement {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreditArrangementListResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type CreditArrangementCreateRequest_Currency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	CurrencyCode string `protobuf:"bytes,2,opt,name=currencyCode,proto3" json:"currencyCode,omitempty"`
}

func (x *CreditArrangementCreateRequest_Currency) Reset() {
	*x = CreditArrangementCreateRequest_Currency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credit_arrangement_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditArrangementCreateRequest_Currency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditArrangementCreateRequest_Currency) ProtoMessage() {}

func (x *CreditArrangementCreateRequest_Currency) ProtoReflect() protoreflect.Message {
	mi := &file_credit_arrangement_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditArrangementCreateRequest_Currency.ProtoReflect.Descriptor instead.
func (*CreditArrangementCreateRequest_Currency) Descriptor() ([]byte, []int) {
	return file_credit_arrangement_proto_rawDescGZIP(), []int{0, 0}
}

func (x *CreditArrangementCreateRequest_Currency) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CreditArrangementCreateRequest_Currency) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

type CreditArrangement_Currency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	CurrencyCode string `protobuf:"bytes,2,opt,name=currencyCode,proto3" json:"currencyCode,omitempty"`
}

func (x *CreditArrangement_Currency) Reset() {
	*x = CreditArrangement_Currency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credit_arrangement_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditArrangement_Currency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditArrangement_Currency) ProtoMessage() {}

func (x *CreditArrangement_Currency) ProtoReflect() protoreflect.Message {
	mi := &file_credit_arrangement_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditArrangement_Currency.ProtoReflect.Descriptor instead.
func (*CreditArrangement_Currency) Descriptor() ([]byte, []int) {
	return file_credit_arrangement_proto_rawDescGZIP(), []int{3, 0}
}

func (x *CreditArrangement_Currency) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CreditArrangement_Currency) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

type CreditArrangementUpdateRequest_Currency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrencyCode string `protobuf:"bytes,1,opt,name=currencyCode,proto3" json:"currencyCode,omitempty"`
	Code         string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *CreditArrangementUpdateRequest_Currency) Reset() {
	*x = CreditArrangementUpdateRequest_Currency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credit_arrangement_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditArrangementUpdateRequest_Currency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditArrangementUpdateRequest_Currency) ProtoMessage() {}

func (x *CreditArrangementUpdateRequest_Currency) ProtoReflect() protoreflect.Message {
	mi := &file_credit_arrangement_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditArrangementUpdateRequest_Currency.ProtoReflect.Descriptor instead.
func (*CreditArrangementUpdateRequest_Currency) Descriptor() ([]byte, []int) {
	return file_credit_arrangement_proto_rawDescGZIP(), []int{7, 0}
}

func (x *CreditArrangementUpdateRequest_Currency) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *CreditArrangementUpdateRequest_Currency) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

var File_credit_arrangement_proto protoreflect.FileDescriptor

var file_credit_arrangement_proto_rawDesc = []byte{
	0x0a, 0x18, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x15, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe9, 0x03, 0x0a, 0x1e,
	0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x75,
	0x72, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4b, 0x65,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4b,
	0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x61,
	0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e,
	0x6f, 0x74, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x4a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x33,
	0x0a, 0x0b, 0x5f, 0x63, 0x66, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x5f, 0x63, 0x66, 0x73,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0a, 0x43, 0x66, 0x73, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x1a, 0x42, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x2f, 0x0a, 0x0b, 0x5f, 0x63, 0x66, 0x73, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x66, 0x73, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x66, 0x73,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xb8, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1f, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x22, 0xce, 0x05, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x41, 0x72,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x15, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x43,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x63,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x64, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b,
	0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x65,
	0x78, 0x70, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x1e,
	0x0a, 0x0a, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a,
	0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f,
	0x74, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x1a, 0x42, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x41,
	0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x41, 0x72, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xc6, 0x01, 0x0a, 0x20, 0x43,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1f, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x22, 0x93, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x41, 0x72,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x36, 0x0a, 0x0c, 0x6c, 0x6f, 0x61, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c,
	0x6f, 0x61, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0c, 0x6c, 0x6f, 0x61, 0x6e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x3f, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0xfc, 0x02, 0x0a, 0x1e, 0x43, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x13,
	0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x75,
	0x72, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x4a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x1a, 0x42, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x76, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x41,
	0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x22, 0xa1, 0x01, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x41, 0x72, 0x72, 0x61, 0x6e,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x72, 0x69,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x12, 0x40, 0x0a, 0x0f, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x72, 0x69,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x52, 0x0f, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x72, 0x69, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x22, 0xbc, 0x01, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x41,
	0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1f, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_credit_arrangement_proto_rawDescOnce sync.Once
	file_credit_arrangement_proto_rawDescData = file_credit_arrangement_proto_rawDesc
)

func file_credit_arrangement_proto_rawDescGZIP() []byte {
	file_credit_arrangement_proto_rawDescOnce.Do(func() {
		file_credit_arrangement_proto_rawDescData = protoimpl.X.CompressGZIP(file_credit_arrangement_proto_rawDescData)
	})
	return file_credit_arrangement_proto_rawDescData
}

var file_credit_arrangement_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_credit_arrangement_proto_goTypes = []interface{}{
	(*CreditArrangementCreateRequest)(nil),          // 0: proto.CreditArrangementCreateRequest
	(*XCfsAccount)(nil),                             // 1: proto._cfsAccount
	(*CreditArrangementResponse)(nil),               // 2: proto.CreditArrangementResponse
	(*CreditArrangement)(nil),                       // 3: proto.CreditArrangement
	(*CreditArrangementAccountRequest)(nil),         // 4: proto.CreditArrangementAccountRequest
	(*CreditArrangementAccountResponse)(nil),        // 5: proto.CreditArrangementAccountResponse
	(*CreditArrangementAccount)(nil),                // 6: proto.CreditArrangementAccount
	(*CreditArrangementUpdateRequest)(nil),          // 7: proto.CreditArrangementUpdateRequest
	(*CreditArrangementDetailRequest)(nil),          // 8: proto.CreditArrangementDetailRequest
	(*CreditArrangementSearchRequest)(nil),          // 9: proto.CreditArrangementSearchRequest
	(*CreditArrangementListResponse)(nil),           // 10: proto.CreditArrangementListResponse
	(*CreditArrangementCreateRequest_Currency)(nil), // 11: proto.CreditArrangementCreateRequest.Currency
	(*CreditArrangement_Currency)(nil),              // 12: proto.CreditArrangement.Currency
	(*CreditArrangementUpdateRequest_Currency)(nil), // 13: proto.CreditArrangementUpdateRequest.Currency
	(*Meta)(nil),            // 14: proto.Meta
	(*LoanAccount)(nil),     // 15: proto.LoanAccount
	(*DepositAccount)(nil),  // 16: proto.DepositAccount
	(*FilterCriteria)(nil),  // 17: proto.FilterCriteria
	(*SortingCriteria)(nil), // 18: proto.SortingCriteria
}
var file_credit_arrangement_proto_depIdxs = []int32{
	11, // 0: proto.CreditArrangementCreateRequest.currency:type_name -> proto.CreditArrangementCreateRequest.Currency
	1,  // 1: proto.CreditArrangementCreateRequest._cfsAccount:type_name -> proto._cfsAccount
	3,  // 2: proto.CreditArrangementResponse.data:type_name -> proto.CreditArrangement
	14, // 3: proto.CreditArrangementResponse.meta:type_name -> proto.Meta
	12, // 4: proto.CreditArrangement.currency:type_name -> proto.CreditArrangement.Currency
	6,  // 5: proto.CreditArrangementAccountResponse.data:type_name -> proto.CreditArrangementAccount
	14, // 6: proto.CreditArrangementAccountResponse.meta:type_name -> proto.Meta
	15, // 7: proto.CreditArrangementAccount.loanAccounts:type_name -> proto.LoanAccount
	16, // 8: proto.CreditArrangementAccount.depositAccounts:type_name -> proto.DepositAccount
	13, // 9: proto.CreditArrangementUpdateRequest.currency:type_name -> proto.CreditArrangementUpdateRequest.Currency
	17, // 10: proto.CreditArrangementSearchRequest.filterCriteria:type_name -> proto.FilterCriteria
	18, // 11: proto.CreditArrangementSearchRequest.sortingCriteria:type_name -> proto.SortingCriteria
	3,  // 12: proto.CreditArrangementListResponse.data:type_name -> proto.CreditArrangement
	14, // 13: proto.CreditArrangementListResponse.meta:type_name -> proto.Meta
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_credit_arrangement_proto_init() }
func file_credit_arrangement_proto_init() {
	if File_credit_arrangement_proto != nil {
		return
	}
	file_general_proto_init()
	file_deposit_account_proto_init()
	file_loan_account_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_credit_arrangement_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditArrangementCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credit_arrangement_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XCfsAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credit_arrangement_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditArrangementResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credit_arrangement_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditArrangement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credit_arrangement_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditArrangementAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credit_arrangement_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditArrangementAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credit_arrangement_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditArrangementAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credit_arrangement_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditArrangementUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credit_arrangement_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditArrangementDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credit_arrangement_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditArrangementSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credit_arrangement_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditArrangementListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credit_arrangement_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditArrangementCreateRequest_Currency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credit_arrangement_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditArrangement_Currency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credit_arrangement_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditArrangementUpdateRequest_Currency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_credit_arrangement_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_credit_arrangement_proto_goTypes,
		DependencyIndexes: file_credit_arrangement_proto_depIdxs,
		MessageInfos:      file_credit_arrangement_proto_msgTypes,
	}.Build()
	File_credit_arrangement_proto = out.File
	file_credit_arrangement_proto_rawDesc = nil
	file_credit_arrangement_proto_goTypes = nil
	file_credit_arrangement_proto_depIdxs = nil
}
