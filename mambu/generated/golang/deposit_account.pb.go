// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.2
// source: deposit_account.proto

package golang

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DepositAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode    string          `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage string          `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	Data            *DepositAccount `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Meta            *Meta           `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *DepositAccountResponse) Reset() {
	*x = DepositAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_account_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositAccountResponse) ProtoMessage() {}

func (x *DepositAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_account_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositAccountResponse.ProtoReflect.Descriptor instead.
func (*DepositAccountResponse) Descriptor() ([]byte, []int) {
	return file_deposit_account_proto_rawDescGZIP(), []int{0}
}

func (x *DepositAccountResponse) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *DepositAccountResponse) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *DepositAccountResponse) GetData() *DepositAccount {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DepositAccountResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type DepositAccountDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepositAccountId string `protobuf:"bytes,1,opt,name=depositAccountId,proto3" json:"depositAccountId,omitempty"`
}

func (x *DepositAccountDetailRequest) Reset() {
	*x = DepositAccountDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_account_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositAccountDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositAccountDetailRequest) ProtoMessage() {}

func (x *DepositAccountDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_account_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositAccountDetailRequest.ProtoReflect.Descriptor instead.
func (*DepositAccountDetailRequest) Descriptor() ([]byte, []int) {
	return file_deposit_account_proto_rawDescGZIP(), []int{1}
}

func (x *DepositAccountDetailRequest) GetDepositAccountId() string {
	if x != nil {
		return x.DepositAccountId
	}
	return ""
}

type DepositAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountHolderKey                string                     `protobuf:"bytes,1,opt,name=accountHolderKey,proto3" json:"accountHolderKey,omitempty"`
	AccountHolderType               string                     `protobuf:"bytes,2,opt,name=accountHolderType,proto3" json:"accountHolderType,omitempty"`
	AccountState                    string                     `protobuf:"bytes,3,opt,name=accountState,proto3" json:"accountState,omitempty"`
	AccountType                     string                     `protobuf:"bytes,4,opt,name=accountType,proto3" json:"accountType,omitempty"`
	AccruedAmounts                  *AccruedAmounts            `protobuf:"bytes,5,opt,name=accruedAmounts,proto3" json:"accruedAmounts,omitempty"`
	ActivationDate                  string                     `protobuf:"bytes,6,opt,name=activationDate,proto3" json:"activationDate,omitempty"`
	ApprovedDate                    string                     `protobuf:"bytes,7,opt,name=approvedDate,proto3" json:"approvedDate,omitempty"`
	AssignedBranchKey               string                     `protobuf:"bytes,8,opt,name=assignedBranchKey,proto3" json:"assignedBranchKey,omitempty"`
	AssignedCentreKey               string                     `protobuf:"bytes,9,opt,name=assignedCentreKey,proto3" json:"assignedCentreKey,omitempty"`
	AssignedUserKey                 string                     `protobuf:"bytes,10,opt,name=assignedUserKey,proto3" json:"assignedUserKey,omitempty"`
	Balances                        *Balances                  `protobuf:"bytes,11,opt,name=balances,proto3" json:"balances,omitempty"`
	ClosedDate                      string                     `protobuf:"bytes,12,opt,name=closedDate,proto3" json:"closedDate,omitempty"`
	CreationDate                    string                     `protobuf:"bytes,13,opt,name=creationDate,proto3" json:"creationDate,omitempty"`
	CreditArrangementKey            string                     `protobuf:"bytes,14,opt,name=creditArrangementKey,proto3" json:"creditArrangementKey,omitempty"`
	CurrencyCode                    string                     `protobuf:"bytes,15,opt,name=currencyCode,proto3" json:"currencyCode,omitempty"`
	EncodedKey                      string                     `protobuf:"bytes,16,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	Id                              string                     `protobuf:"bytes,17,opt,name=id,proto3" json:"id,omitempty"`
	InterestSettings                *InterestSettings          `protobuf:"bytes,18,opt,name=interestSettings,proto3" json:"interestSettings,omitempty"`
	InternalControls                *InternalControls          `protobuf:"bytes,19,opt,name=internalControls,proto3" json:"internalControls,omitempty"`
	LastAccountAppraisalDate        string                     `protobuf:"bytes,20,opt,name=lastAccountAppraisalDate,proto3" json:"lastAccountAppraisalDate,omitempty"`
	LastInterestCalculationDate     string                     `protobuf:"bytes,21,opt,name=lastInterestCalculationDate,proto3" json:"lastInterestCalculationDate,omitempty"`
	LastInterestReviewDate          string                     `protobuf:"bytes,22,opt,name=lastInterestReviewDate,proto3" json:"lastInterestReviewDate,omitempty"`
	LastInterestStoredDate          string                     `protobuf:"bytes,23,opt,name=lastInterestStoredDate,proto3" json:"lastInterestStoredDate,omitempty"`
	LastModifiedDate                string                     `protobuf:"bytes,24,opt,name=lastModifiedDate,proto3" json:"lastModifiedDate,omitempty"`
	LastOverdraftInterestReviewDate string                     `protobuf:"bytes,25,opt,name=lastOverdraftInterestReviewDate,proto3" json:"lastOverdraftInterestReviewDate,omitempty"`
	LastSetToArrearsDate            string                     `protobuf:"bytes,26,opt,name=lastSetToArrearsDate,proto3" json:"lastSetToArrearsDate,omitempty"`
	LinkedSettlementAccountKeys     []string                   `protobuf:"bytes,27,rep,name=linkedSettlementAccountKeys,proto3" json:"linkedSettlementAccountKeys,omitempty"`
	LockedDate                      string                     `protobuf:"bytes,28,opt,name=lockedDate,proto3" json:"lockedDate,omitempty"`
	MaturityDate                    string                     `protobuf:"bytes,29,opt,name=maturityDate,proto3" json:"maturityDate,omitempty"`
	MigrationEventKey               string                     `protobuf:"bytes,30,opt,name=migrationEventKey,proto3" json:"migrationEventKey,omitempty"`
	Name                            string                     `protobuf:"bytes,31,opt,name=name,proto3" json:"name,omitempty"`
	Notes                           string                     `protobuf:"bytes,32,opt,name=notes,proto3" json:"notes,omitempty"`
	OverdraftInterestSettings       *OverdraftInterestSettings `protobuf:"bytes,33,opt,name=overdraftInterestSettings,proto3" json:"overdraftInterestSettings,omitempty"`
	OverdraftSettings               *OverdraftSettings         `protobuf:"bytes,34,opt,name=overdraftSettings,proto3" json:"overdraftSettings,omitempty"`
	ProductTypeKey                  string                     `protobuf:"bytes,35,opt,name=productTypeKey,proto3" json:"productTypeKey,omitempty"`
	WithholdingTaxSourceKey         string                     `protobuf:"bytes,36,opt,name=withholdingTaxSourceKey,proto3" json:"withholdingTaxSourceKey,omitempty"`
}

func (x *DepositAccount) Reset() {
	*x = DepositAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_account_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositAccount) ProtoMessage() {}

func (x *DepositAccount) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_account_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositAccount.ProtoReflect.Descriptor instead.
func (*DepositAccount) Descriptor() ([]byte, []int) {
	return file_deposit_account_proto_rawDescGZIP(), []int{2}
}

func (x *DepositAccount) GetAccountHolderKey() string {
	if x != nil {
		return x.AccountHolderKey
	}
	return ""
}

func (x *DepositAccount) GetAccountHolderType() string {
	if x != nil {
		return x.AccountHolderType
	}
	return ""
}

func (x *DepositAccount) GetAccountState() string {
	if x != nil {
		return x.AccountState
	}
	return ""
}

func (x *DepositAccount) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *DepositAccount) GetAccruedAmounts() *AccruedAmounts {
	if x != nil {
		return x.AccruedAmounts
	}
	return nil
}

func (x *DepositAccount) GetActivationDate() string {
	if x != nil {
		return x.ActivationDate
	}
	return ""
}

func (x *DepositAccount) GetApprovedDate() string {
	if x != nil {
		return x.ApprovedDate
	}
	return ""
}

func (x *DepositAccount) GetAssignedBranchKey() string {
	if x != nil {
		return x.AssignedBranchKey
	}
	return ""
}

func (x *DepositAccount) GetAssignedCentreKey() string {
	if x != nil {
		return x.AssignedCentreKey
	}
	return ""
}

func (x *DepositAccount) GetAssignedUserKey() string {
	if x != nil {
		return x.AssignedUserKey
	}
	return ""
}

func (x *DepositAccount) GetBalances() *Balances {
	if x != nil {
		return x.Balances
	}
	return nil
}

func (x *DepositAccount) GetClosedDate() string {
	if x != nil {
		return x.ClosedDate
	}
	return ""
}

func (x *DepositAccount) GetCreationDate() string {
	if x != nil {
		return x.CreationDate
	}
	return ""
}

func (x *DepositAccount) GetCreditArrangementKey() string {
	if x != nil {
		return x.CreditArrangementKey
	}
	return ""
}

func (x *DepositAccount) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *DepositAccount) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *DepositAccount) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DepositAccount) GetInterestSettings() *InterestSettings {
	if x != nil {
		return x.InterestSettings
	}
	return nil
}

func (x *DepositAccount) GetInternalControls() *InternalControls {
	if x != nil {
		return x.InternalControls
	}
	return nil
}

func (x *DepositAccount) GetLastAccountAppraisalDate() string {
	if x != nil {
		return x.LastAccountAppraisalDate
	}
	return ""
}

func (x *DepositAccount) GetLastInterestCalculationDate() string {
	if x != nil {
		return x.LastInterestCalculationDate
	}
	return ""
}

func (x *DepositAccount) GetLastInterestReviewDate() string {
	if x != nil {
		return x.LastInterestReviewDate
	}
	return ""
}

func (x *DepositAccount) GetLastInterestStoredDate() string {
	if x != nil {
		return x.LastInterestStoredDate
	}
	return ""
}

func (x *DepositAccount) GetLastModifiedDate() string {
	if x != nil {
		return x.LastModifiedDate
	}
	return ""
}

func (x *DepositAccount) GetLastOverdraftInterestReviewDate() string {
	if x != nil {
		return x.LastOverdraftInterestReviewDate
	}
	return ""
}

func (x *DepositAccount) GetLastSetToArrearsDate() string {
	if x != nil {
		return x.LastSetToArrearsDate
	}
	return ""
}

func (x *DepositAccount) GetLinkedSettlementAccountKeys() []string {
	if x != nil {
		return x.LinkedSettlementAccountKeys
	}
	return nil
}

func (x *DepositAccount) GetLockedDate() string {
	if x != nil {
		return x.LockedDate
	}
	return ""
}

func (x *DepositAccount) GetMaturityDate() string {
	if x != nil {
		return x.MaturityDate
	}
	return ""
}

func (x *DepositAccount) GetMigrationEventKey() string {
	if x != nil {
		return x.MigrationEventKey
	}
	return ""
}

func (x *DepositAccount) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DepositAccount) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *DepositAccount) GetOverdraftInterestSettings() *OverdraftInterestSettings {
	if x != nil {
		return x.OverdraftInterestSettings
	}
	return nil
}

func (x *DepositAccount) GetOverdraftSettings() *OverdraftSettings {
	if x != nil {
		return x.OverdraftSettings
	}
	return nil
}

func (x *DepositAccount) GetProductTypeKey() string {
	if x != nil {
		return x.ProductTypeKey
	}
	return ""
}

func (x *DepositAccount) GetWithholdingTaxSourceKey() string {
	if x != nil {
		return x.WithholdingTaxSourceKey
	}
	return ""
}

type AccruedAmounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterestAccrued                   float64 `protobuf:"fixed64,1,opt,name=interestAccrued,proto3" json:"interestAccrued,omitempty"`
	NegativeInterestAccrued           float64 `protobuf:"fixed64,2,opt,name=negativeInterestAccrued,proto3" json:"negativeInterestAccrued,omitempty"`
	OverdraftInterestAccrued          float64 `protobuf:"fixed64,3,opt,name=overdraftInterestAccrued,proto3" json:"overdraftInterestAccrued,omitempty"`
	TechnicalOverdraftInterestAccrued float64 `protobuf:"fixed64,4,opt,name=technicalOverdraftInterestAccrued,proto3" json:"technicalOverdraftInterestAccrued,omitempty"`
}

func (x *AccruedAmounts) Reset() {
	*x = AccruedAmounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_account_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccruedAmounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccruedAmounts) ProtoMessage() {}

func (x *AccruedAmounts) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_account_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccruedAmounts.ProtoReflect.Descriptor instead.
func (*AccruedAmounts) Descriptor() ([]byte, []int) {
	return file_deposit_account_proto_rawDescGZIP(), []int{3}
}

func (x *AccruedAmounts) GetInterestAccrued() float64 {
	if x != nil {
		return x.InterestAccrued
	}
	return 0
}

func (x *AccruedAmounts) GetNegativeInterestAccrued() float64 {
	if x != nil {
		return x.NegativeInterestAccrued
	}
	return 0
}

func (x *AccruedAmounts) GetOverdraftInterestAccrued() float64 {
	if x != nil {
		return x.OverdraftInterestAccrued
	}
	return 0
}

func (x *AccruedAmounts) GetTechnicalOverdraftInterestAccrued() float64 {
	if x != nil {
		return x.TechnicalOverdraftInterestAccrued
	}
	return 0
}

type Balances struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableBalance              float64 `protobuf:"fixed64,1,opt,name=availableBalance,proto3" json:"availableBalance,omitempty"`
	BlockedBalance                float64 `protobuf:"fixed64,2,opt,name=blockedBalance,proto3" json:"blockedBalance,omitempty"`
	FeesDue                       float64 `protobuf:"fixed64,3,opt,name=feesDue,proto3" json:"feesDue,omitempty"`
	ForwardAvailableBalance       float64 `protobuf:"fixed64,4,opt,name=forwardAvailableBalance,proto3" json:"forwardAvailableBalance,omitempty"`
	HoldBalance                   float64 `protobuf:"fixed64,5,opt,name=holdBalance,proto3" json:"holdBalance,omitempty"`
	LockedBalance                 float64 `protobuf:"fixed64,6,opt,name=lockedBalance,proto3" json:"lockedBalance,omitempty"`
	OverdraftAmount               float64 `protobuf:"fixed64,7,opt,name=overdraftAmount,proto3" json:"overdraftAmount,omitempty"`
	OverdraftInterestDue          float64 `protobuf:"fixed64,8,opt,name=overdraftInterestDue,proto3" json:"overdraftInterestDue,omitempty"`
	TechnicalOverdraftAmount      float64 `protobuf:"fixed64,9,opt,name=technicalOverdraftAmount,proto3" json:"technicalOverdraftAmount,omitempty"`
	TechnicalOverdraftInterestDue float64 `protobuf:"fixed64,10,opt,name=technicalOverdraftInterestDue,proto3" json:"technicalOverdraftInterestDue,omitempty"`
	TotalBalance                  float64 `protobuf:"fixed64,11,opt,name=totalBalance,proto3" json:"totalBalance,omitempty"`
}

func (x *Balances) Reset() {
	*x = Balances{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_account_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Balances) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Balances) ProtoMessage() {}

func (x *Balances) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_account_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Balances.ProtoReflect.Descriptor instead.
func (*Balances) Descriptor() ([]byte, []int) {
	return file_deposit_account_proto_rawDescGZIP(), []int{4}
}

func (x *Balances) GetAvailableBalance() float64 {
	if x != nil {
		return x.AvailableBalance
	}
	return 0
}

func (x *Balances) GetBlockedBalance() float64 {
	if x != nil {
		return x.BlockedBalance
	}
	return 0
}

func (x *Balances) GetFeesDue() float64 {
	if x != nil {
		return x.FeesDue
	}
	return 0
}

func (x *Balances) GetForwardAvailableBalance() float64 {
	if x != nil {
		return x.ForwardAvailableBalance
	}
	return 0
}

func (x *Balances) GetHoldBalance() float64 {
	if x != nil {
		return x.HoldBalance
	}
	return 0
}

func (x *Balances) GetLockedBalance() float64 {
	if x != nil {
		return x.LockedBalance
	}
	return 0
}

func (x *Balances) GetOverdraftAmount() float64 {
	if x != nil {
		return x.OverdraftAmount
	}
	return 0
}

func (x *Balances) GetOverdraftInterestDue() float64 {
	if x != nil {
		return x.OverdraftInterestDue
	}
	return 0
}

func (x *Balances) GetTechnicalOverdraftAmount() float64 {
	if x != nil {
		return x.TechnicalOverdraftAmount
	}
	return 0
}

func (x *Balances) GetTechnicalOverdraftInterestDue() float64 {
	if x != nil {
		return x.TechnicalOverdraftInterestDue
	}
	return 0
}

func (x *Balances) GetTotalBalance() float64 {
	if x != nil {
		return x.TotalBalance
	}
	return 0
}

type InterestSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterestPaymentSettings *InterestPaymentSettings `protobuf:"bytes,1,opt,name=interestPaymentSettings,proto3" json:"interestPaymentSettings,omitempty"`
	InterestRateSettings    *InterestRateSettings    `protobuf:"bytes,2,opt,name=interestRateSettings,proto3" json:"interestRateSettings,omitempty"`
}

func (x *InterestSettings) Reset() {
	*x = InterestSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_account_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterestSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterestSettings) ProtoMessage() {}

func (x *InterestSettings) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_account_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterestSettings.ProtoReflect.Descriptor instead.
func (*InterestSettings) Descriptor() ([]byte, []int) {
	return file_deposit_account_proto_rawDescGZIP(), []int{5}
}

func (x *InterestSettings) GetInterestPaymentSettings() *InterestPaymentSettings {
	if x != nil {
		return x.InterestPaymentSettings
	}
	return nil
}

func (x *InterestSettings) GetInterestRateSettings() *InterestRateSettings {
	if x != nil {
		return x.InterestRateSettings
	}
	return nil
}

type InternalControls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxDepositBalance        float64 `protobuf:"fixed64,1,opt,name=maxDepositBalance,proto3" json:"maxDepositBalance,omitempty"`
	MaxWithdrawalAmount      float64 `protobuf:"fixed64,2,opt,name=maxWithdrawalAmount,proto3" json:"maxWithdrawalAmount,omitempty"`
	RecommendedDepositAmount float64 `protobuf:"fixed64,3,opt,name=recommendedDepositAmount,proto3" json:"recommendedDepositAmount,omitempty"`
	TargetAmount             float64 `protobuf:"fixed64,4,opt,name=targetAmount,proto3" json:"targetAmount,omitempty"`
}

func (x *InternalControls) Reset() {
	*x = InternalControls{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_account_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InternalControls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalControls) ProtoMessage() {}

func (x *InternalControls) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_account_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalControls.ProtoReflect.Descriptor instead.
func (*InternalControls) Descriptor() ([]byte, []int) {
	return file_deposit_account_proto_rawDescGZIP(), []int{6}
}

func (x *InternalControls) GetMaxDepositBalance() float64 {
	if x != nil {
		return x.MaxDepositBalance
	}
	return 0
}

func (x *InternalControls) GetMaxWithdrawalAmount() float64 {
	if x != nil {
		return x.MaxWithdrawalAmount
	}
	return 0
}

func (x *InternalControls) GetRecommendedDepositAmount() float64 {
	if x != nil {
		return x.RecommendedDepositAmount
	}
	return 0
}

func (x *InternalControls) GetTargetAmount() float64 {
	if x != nil {
		return x.TargetAmount
	}
	return 0
}

type OverdraftInterestSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterestRateSettings *InterestRateSettings `protobuf:"bytes,1,opt,name=interestRateSettings,proto3" json:"interestRateSettings,omitempty"`
}

func (x *OverdraftInterestSettings) Reset() {
	*x = OverdraftInterestSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_account_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverdraftInterestSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverdraftInterestSettings) ProtoMessage() {}

func (x *OverdraftInterestSettings) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_account_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverdraftInterestSettings.ProtoReflect.Descriptor instead.
func (*OverdraftInterestSettings) Descriptor() ([]byte, []int) {
	return file_deposit_account_proto_rawDescGZIP(), []int{7}
}

func (x *OverdraftInterestSettings) GetInterestRateSettings() *InterestRateSettings {
	if x != nil {
		return x.InterestRateSettings
	}
	return nil
}

type OverdraftSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowOverdraft      bool   `protobuf:"varint,1,opt,name=allowOverdraft,proto3" json:"allowOverdraft,omitempty"`
	OverdraftExpiryDate string `protobuf:"bytes,2,opt,name=overdraftExpiryDate,proto3" json:"overdraftExpiryDate,omitempty"`
	OverdraftLimit      uint32 `protobuf:"varint,3,opt,name=overdraftLimit,proto3" json:"overdraftLimit,omitempty"`
}

func (x *OverdraftSettings) Reset() {
	*x = OverdraftSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_account_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverdraftSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverdraftSettings) ProtoMessage() {}

func (x *OverdraftSettings) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_account_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverdraftSettings.ProtoReflect.Descriptor instead.
func (*OverdraftSettings) Descriptor() ([]byte, []int) {
	return file_deposit_account_proto_rawDescGZIP(), []int{8}
}

func (x *OverdraftSettings) GetAllowOverdraft() bool {
	if x != nil {
		return x.AllowOverdraft
	}
	return false
}

func (x *OverdraftSettings) GetOverdraftExpiryDate() string {
	if x != nil {
		return x.OverdraftExpiryDate
	}
	return ""
}

func (x *OverdraftSettings) GetOverdraftLimit() uint32 {
	if x != nil {
		return x.OverdraftLimit
	}
	return 0
}

type InterestRateSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncodedKey                   string               `protobuf:"bytes,1,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	InterestChargeFrequency      string               `protobuf:"bytes,2,opt,name=interestChargeFrequency,proto3" json:"interestChargeFrequency,omitempty"`
	InterestChargeFrequencyCount uint32               `protobuf:"varint,3,opt,name=interestChargeFrequencyCount,proto3" json:"interestChargeFrequencyCount,omitempty"`
	InterestRate                 float64              `protobuf:"fixed64,4,opt,name=interestRate,proto3" json:"interestRate,omitempty"`
	InterestRateReviewCount      uint32               `protobuf:"varint,5,opt,name=interestRateReviewCount,proto3" json:"interestRateReviewCount,omitempty"`
	InterestRateReviewUnit       string               `protobuf:"bytes,6,opt,name=interestRateReviewUnit,proto3" json:"interestRateReviewUnit,omitempty"`
	InterestRateSource           string               `protobuf:"bytes,7,opt,name=interestRateSource,proto3" json:"interestRateSource,omitempty"`
	InterestRateTerms            string               `protobuf:"bytes,8,opt,name=interestRateTerms,proto3" json:"interestRateTerms,omitempty"`
	InterestRateTiers            []*InterestRateTiers `protobuf:"bytes,9,rep,name=interestRateTiers,proto3" json:"interestRateTiers,omitempty"`
	InterestSpread               float64              `protobuf:"fixed64,10,opt,name=interestSpread,proto3" json:"interestSpread,omitempty"`
}

func (x *InterestRateSettings) Reset() {
	*x = InterestRateSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_account_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterestRateSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterestRateSettings) ProtoMessage() {}

func (x *InterestRateSettings) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_account_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterestRateSettings.ProtoReflect.Descriptor instead.
func (*InterestRateSettings) Descriptor() ([]byte, []int) {
	return file_deposit_account_proto_rawDescGZIP(), []int{9}
}

func (x *InterestRateSettings) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *InterestRateSettings) GetInterestChargeFrequency() string {
	if x != nil {
		return x.InterestChargeFrequency
	}
	return ""
}

func (x *InterestRateSettings) GetInterestChargeFrequencyCount() uint32 {
	if x != nil {
		return x.InterestChargeFrequencyCount
	}
	return 0
}

func (x *InterestRateSettings) GetInterestRate() float64 {
	if x != nil {
		return x.InterestRate
	}
	return 0
}

func (x *InterestRateSettings) GetInterestRateReviewCount() uint32 {
	if x != nil {
		return x.InterestRateReviewCount
	}
	return 0
}

func (x *InterestRateSettings) GetInterestRateReviewUnit() string {
	if x != nil {
		return x.InterestRateReviewUnit
	}
	return ""
}

func (x *InterestRateSettings) GetInterestRateSource() string {
	if x != nil {
		return x.InterestRateSource
	}
	return ""
}

func (x *InterestRateSettings) GetInterestRateTerms() string {
	if x != nil {
		return x.InterestRateTerms
	}
	return ""
}

func (x *InterestRateSettings) GetInterestRateTiers() []*InterestRateTiers {
	if x != nil {
		return x.InterestRateTiers
	}
	return nil
}

func (x *InterestRateSettings) GetInterestSpread() float64 {
	if x != nil {
		return x.InterestSpread
	}
	return 0
}

type InterestRateTiers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncodedKey    string  `protobuf:"bytes,1,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	EndingBalance float64 `protobuf:"fixed64,2,opt,name=endingBalance,proto3" json:"endingBalance,omitempty"`
	EndingDay     uint32  `protobuf:"varint,3,opt,name=endingDay,proto3" json:"endingDay,omitempty"`
	InterestRate  float64 `protobuf:"fixed64,4,opt,name=interestRate,proto3" json:"interestRate,omitempty"`
}

func (x *InterestRateTiers) Reset() {
	*x = InterestRateTiers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_account_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterestRateTiers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterestRateTiers) ProtoMessage() {}

func (x *InterestRateTiers) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_account_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterestRateTiers.ProtoReflect.Descriptor instead.
func (*InterestRateTiers) Descriptor() ([]byte, []int) {
	return file_deposit_account_proto_rawDescGZIP(), []int{10}
}

func (x *InterestRateTiers) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *InterestRateTiers) GetEndingBalance() float64 {
	if x != nil {
		return x.EndingBalance
	}
	return 0
}

func (x *InterestRateTiers) GetEndingDay() uint32 {
	if x != nil {
		return x.EndingDay
	}
	return 0
}

func (x *InterestRateTiers) GetInterestRate() float64 {
	if x != nil {
		return x.InterestRate
	}
	return 0
}

type InterestPaymentSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterestPaymentDates []*InterestPaymentDates `protobuf:"bytes,1,rep,name=interestPaymentDates,proto3" json:"interestPaymentDates,omitempty"`
	InterestPaymentPoint string                  `protobuf:"bytes,2,opt,name=interestPaymentPoint,proto3" json:"interestPaymentPoint,omitempty"`
}

func (x *InterestPaymentSettings) Reset() {
	*x = InterestPaymentSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_account_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterestPaymentSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterestPaymentSettings) ProtoMessage() {}

func (x *InterestPaymentSettings) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_account_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterestPaymentSettings.ProtoReflect.Descriptor instead.
func (*InterestPaymentSettings) Descriptor() ([]byte, []int) {
	return file_deposit_account_proto_rawDescGZIP(), []int{11}
}

func (x *InterestPaymentSettings) GetInterestPaymentDates() []*InterestPaymentDates {
	if x != nil {
		return x.InterestPaymentDates
	}
	return nil
}

func (x *InterestPaymentSettings) GetInterestPaymentPoint() string {
	if x != nil {
		return x.InterestPaymentPoint
	}
	return ""
}

type InterestPaymentDates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Day   uint32 `protobuf:"varint,1,opt,name=day,proto3" json:"day,omitempty"`
	Month uint32 `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`
}

func (x *InterestPaymentDates) Reset() {
	*x = InterestPaymentDates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_account_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterestPaymentDates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterestPaymentDates) ProtoMessage() {}

func (x *InterestPaymentDates) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_account_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterestPaymentDates.ProtoReflect.Descriptor instead.
func (*InterestPaymentDates) Descriptor() ([]byte, []int) {
	return file_deposit_account_proto_rawDescGZIP(), []int{12}
}

func (x *InterestPaymentDates) GetDay() uint32 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *InterestPaymentDates) GetMonth() uint32 {
	if x != nil {
		return x.Month
	}
	return 0
}

type DepositCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountHolderKey  string                                 `protobuf:"bytes,1,opt,name=accountHolderKey,proto3" json:"accountHolderKey,omitempty"`
	AccountHolderType string                                 `protobuf:"bytes,2,opt,name=accountHolderType,proto3" json:"accountHolderType,omitempty"`
	Name              string                                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	AssignedBranchKey string                                 `protobuf:"bytes,4,opt,name=assignedBranchKey,proto3" json:"assignedBranchKey,omitempty"`
	ProductTypeKey    string                                 `protobuf:"bytes,5,opt,name=productTypeKey,proto3" json:"productTypeKey,omitempty"`
	Notes             string                                 `protobuf:"bytes,6,opt,name=notes,proto3" json:"notes,omitempty"`
	InternalControls  *DepositCreateRequest_InternalControls `protobuf:"bytes,7,opt,name=internalControls,proto3" json:"internalControls,omitempty"`
}

func (x *DepositCreateRequest) Reset() {
	*x = DepositCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_account_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositCreateRequest) ProtoMessage() {}

func (x *DepositCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_account_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositCreateRequest.ProtoReflect.Descriptor instead.
func (*DepositCreateRequest) Descriptor() ([]byte, []int) {
	return file_deposit_account_proto_rawDescGZIP(), []int{13}
}

func (x *DepositCreateRequest) GetAccountHolderKey() string {
	if x != nil {
		return x.AccountHolderKey
	}
	return ""
}

func (x *DepositCreateRequest) GetAccountHolderType() string {
	if x != nil {
		return x.AccountHolderType
	}
	return ""
}

func (x *DepositCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DepositCreateRequest) GetAssignedBranchKey() string {
	if x != nil {
		return x.AssignedBranchKey
	}
	return ""
}

func (x *DepositCreateRequest) GetProductTypeKey() string {
	if x != nil {
		return x.ProductTypeKey
	}
	return ""
}

func (x *DepositCreateRequest) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *DepositCreateRequest) GetInternalControls() *DepositCreateRequest_InternalControls {
	if x != nil {
		return x.InternalControls
	}
	return nil
}

type DepositChangeStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepositAccountId string `protobuf:"bytes,1,opt,name=depositAccountId,proto3" json:"depositAccountId,omitempty"`
	Action           string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	Notes            string `protobuf:"bytes,3,opt,name=notes,proto3" json:"notes,omitempty"`
}

func (x *DepositChangeStateRequest) Reset() {
	*x = DepositChangeStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_account_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositChangeStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositChangeStateRequest) ProtoMessage() {}

func (x *DepositChangeStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_account_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositChangeStateRequest.ProtoReflect.Descriptor instead.
func (*DepositChangeStateRequest) Descriptor() ([]byte, []int) {
	return file_deposit_account_proto_rawDescGZIP(), []int{14}
}

func (x *DepositChangeStateRequest) GetDepositAccountId() string {
	if x != nil {
		return x.DepositAccountId
	}
	return ""
}

func (x *DepositChangeStateRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *DepositChangeStateRequest) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

type DepositAccountSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parameter       *Parameter        `protobuf:"bytes,1,opt,name=parameter,proto3" json:"parameter,omitempty"`
	FilterCriteria  []*FilterCriteria `protobuf:"bytes,2,rep,name=filterCriteria,proto3" json:"filterCriteria,omitempty"`
	SortingCriteria *SortingCriteria  `protobuf:"bytes,3,opt,name=sortingCriteria,proto3" json:"sortingCriteria,omitempty"`
}

func (x *DepositAccountSearchRequest) Reset() {
	*x = DepositAccountSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_account_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositAccountSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositAccountSearchRequest) ProtoMessage() {}

func (x *DepositAccountSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_account_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositAccountSearchRequest.ProtoReflect.Descriptor instead.
func (*DepositAccountSearchRequest) Descriptor() ([]byte, []int) {
	return file_deposit_account_proto_rawDescGZIP(), []int{15}
}

func (x *DepositAccountSearchRequest) GetParameter() *Parameter {
	if x != nil {
		return x.Parameter
	}
	return nil
}

func (x *DepositAccountSearchRequest) GetFilterCriteria() []*FilterCriteria {
	if x != nil {
		return x.FilterCriteria
	}
	return nil
}

func (x *DepositAccountSearchRequest) GetSortingCriteria() *SortingCriteria {
	if x != nil {
		return x.SortingCriteria
	}
	return nil
}

type DepositAccountListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode    string            `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage string            `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	Data            []*DepositAccount `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Meta            *Meta             `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *DepositAccountListResponse) Reset() {
	*x = DepositAccountListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_account_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositAccountListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositAccountListResponse) ProtoMessage() {}

func (x *DepositAccountListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_account_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositAccountListResponse.ProtoReflect.Descriptor instead.
func (*DepositAccountListResponse) Descriptor() ([]byte, []int) {
	return file_deposit_account_proto_rawDescGZIP(), []int{16}
}

func (x *DepositAccountListResponse) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *DepositAccountListResponse) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *DepositAccountListResponse) GetData() []*DepositAccount {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DepositAccountListResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type DepositAccountListParamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page                  uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit                 uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	PaginationDetails     string `protobuf:"bytes,3,opt,name=paginationDetails,proto3" json:"paginationDetails,omitempty"`
	DetailsLevel          string `protobuf:"bytes,4,opt,name=detailsLevel,proto3" json:"detailsLevel,omitempty"`
	CreditOfficerUsername string `protobuf:"bytes,5,opt,name=creditOfficerUsername,proto3" json:"creditOfficerUsername,omitempty"`
	BranchId              string `protobuf:"bytes,6,opt,name=branchId,proto3" json:"branchId,omitempty"`
	CentreId              string `protobuf:"bytes,7,opt,name=centreId,proto3" json:"centreId,omitempty"`
	AccountState          string `protobuf:"bytes,8,opt,name=accountState,proto3" json:"accountState,omitempty"`
	AccountHolderType     string `protobuf:"bytes,9,opt,name=accountHolderType,proto3" json:"accountHolderType,omitempty"`
	AccountHolderId       string `protobuf:"bytes,10,opt,name=accountHolderId,proto3" json:"accountHolderId,omitempty"`
}

func (x *DepositAccountListParamRequest) Reset() {
	*x = DepositAccountListParamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_account_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositAccountListParamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositAccountListParamRequest) ProtoMessage() {}

func (x *DepositAccountListParamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_account_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositAccountListParamRequest.ProtoReflect.Descriptor instead.
func (*DepositAccountListParamRequest) Descriptor() ([]byte, []int) {
	return file_deposit_account_proto_rawDescGZIP(), []int{17}
}

func (x *DepositAccountListParamRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DepositAccountListParamRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *DepositAccountListParamRequest) GetPaginationDetails() string {
	if x != nil {
		return x.PaginationDetails
	}
	return ""
}

func (x *DepositAccountListParamRequest) GetDetailsLevel() string {
	if x != nil {
		return x.DetailsLevel
	}
	return ""
}

func (x *DepositAccountListParamRequest) GetCreditOfficerUsername() string {
	if x != nil {
		return x.CreditOfficerUsername
	}
	return ""
}

func (x *DepositAccountListParamRequest) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *DepositAccountListParamRequest) GetCentreId() string {
	if x != nil {
		return x.CentreId
	}
	return ""
}

func (x *DepositAccountListParamRequest) GetAccountState() string {
	if x != nil {
		return x.AccountState
	}
	return ""
}

func (x *DepositAccountListParamRequest) GetAccountHolderType() string {
	if x != nil {
		return x.AccountHolderType
	}
	return ""
}

func (x *DepositAccountListParamRequest) GetAccountHolderId() string {
	if x != nil {
		return x.AccountHolderId
	}
	return ""
}

type DepositCreateRequest_InternalControls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxDepositBalance        float64 `protobuf:"fixed64,1,opt,name=maxDepositBalance,proto3" json:"maxDepositBalance,omitempty"`
	MaxWithdrawalAmount      float64 `protobuf:"fixed64,2,opt,name=maxWithdrawalAmount,proto3" json:"maxWithdrawalAmount,omitempty"`
	RecommendedDepositAmount float64 `protobuf:"fixed64,3,opt,name=recommendedDepositAmount,proto3" json:"recommendedDepositAmount,omitempty"`
	TargetAmount             float64 `protobuf:"fixed64,4,opt,name=targetAmount,proto3" json:"targetAmount,omitempty"`
}

func (x *DepositCreateRequest_InternalControls) Reset() {
	*x = DepositCreateRequest_InternalControls{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposit_account_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositCreateRequest_InternalControls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositCreateRequest_InternalControls) ProtoMessage() {}

func (x *DepositCreateRequest_InternalControls) ProtoReflect() protoreflect.Message {
	mi := &file_deposit_account_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositCreateRequest_InternalControls.ProtoReflect.Descriptor instead.
func (*DepositCreateRequest_InternalControls) Descriptor() ([]byte, []int) {
	return file_deposit_account_proto_rawDescGZIP(), []int{13, 0}
}

func (x *DepositCreateRequest_InternalControls) GetMaxDepositBalance() float64 {
	if x != nil {
		return x.MaxDepositBalance
	}
	return 0
}

func (x *DepositCreateRequest_InternalControls) GetMaxWithdrawalAmount() float64 {
	if x != nil {
		return x.MaxWithdrawalAmount
	}
	return 0
}

func (x *DepositCreateRequest_InternalControls) GetRecommendedDepositAmount() float64 {
	if x != nil {
		return x.RecommendedDepositAmount
	}
	return 0
}

func (x *DepositCreateRequest_InternalControls) GetTargetAmount() float64 {
	if x != nil {
		return x.TargetAmount
	}
	return 0
}

var File_deposit_account_proto protoreflect.FileDescriptor

var file_deposit_account_proto_rawDesc = []byte{
	0x0a, 0x15, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb2, 0x01,
	0x0a, 0x16, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x1f, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x22, 0x49, 0x0a, 0x1b, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xc4, 0x0d,
	0x0a, 0x0e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2a, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x11,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x3d, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x72, 0x75, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x63, 0x63, 0x72, 0x75, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52,
	0x0e, 0x61, 0x63, 0x63, 0x72, 0x75, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12,
	0x26, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4b, 0x65, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x43, 0x65,
	0x6e, 0x74, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4b, 0x65,
	0x79, 0x12, 0x2b, 0x0a, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x52, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x41, 0x72, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x14, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x43, 0x0a, 0x10, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x10, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x43, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x73, 0x52, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x73, 0x12, 0x3a, 0x0a, 0x18, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x40, 0x0a, 0x1b, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x44, 0x61, 0x74, 0x65, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x44, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x6c, 0x61,
	0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x6c, 0x61, 0x73, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x61,
	0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x48,
	0x0a, 0x1f, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1f, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x76, 0x65,
	0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x44, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x6c, 0x61, 0x73, 0x74,
	0x53, 0x65, 0x74, 0x54, 0x6f, 0x41, 0x72, 0x72, 0x65, 0x61, 0x72, 0x73, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x74, 0x54,
	0x6f, 0x41, 0x72, 0x72, 0x65, 0x61, 0x72, 0x73, 0x44, 0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x1b,
	0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x1b, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x1b, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x65, 0x18, 0x1d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x69, 0x74, 0x79, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d,
	0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x5e, 0x0a, 0x19, 0x6f, 0x76,
	0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x19, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x46, 0x0a, 0x11, 0x6f, 0x76,
	0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x76,
	0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x11, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x4b, 0x65, 0x79, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x38, 0x0a, 0x17, 0x77, 0x69,
	0x74, 0x68, 0x68, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x78, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x77, 0x69, 0x74,
	0x68, 0x68, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x78, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4b, 0x65, 0x79, 0x22, 0xfe, 0x01, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x72, 0x75, 0x65, 0x64,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x72, 0x75, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x72, 0x75, 0x65,
	0x64, 0x12, 0x38, 0x0a, 0x17, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x72, 0x75, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x17, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x72, 0x75, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x18, 0x6f,
	0x76, 0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x41, 0x63, 0x63, 0x72, 0x75, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x18, 0x6f,
	0x76, 0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x41, 0x63, 0x63, 0x72, 0x75, 0x65, 0x64, 0x12, 0x4c, 0x0a, 0x21, 0x74, 0x65, 0x63, 0x68, 0x6e,
	0x69, 0x63, 0x61, 0x6c, 0x4f, 0x76, 0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x72, 0x75, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x21, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x4f, 0x76, 0x65,
	0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x63,
	0x63, 0x72, 0x75, 0x65, 0x64, 0x22, 0xfe, 0x03, 0x0a, 0x08, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x65, 0x65, 0x73, 0x44, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x66, 0x65, 0x65, 0x73, 0x44, 0x75, 0x65,
	0x12, 0x38, 0x0a, 0x17, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x17, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x6f,
	0x6c, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0b, 0x68, 0x6f, 0x6c, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x6f, 0x76, 0x65,
	0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x14,
	0x6f, 0x76, 0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x44, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x6f, 0x76, 0x65, 0x72,
	0x64, 0x72, 0x61, 0x66, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x44, 0x75, 0x65,
	0x12, 0x3a, 0x0a, 0x18, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x4f, 0x76, 0x65,
	0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x18, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x4f, 0x76, 0x65,
	0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x44, 0x0a, 0x1d,
	0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x4f, 0x76, 0x65, 0x72, 0x64, 0x72, 0x61,
	0x66, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x44, 0x75, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x1d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x4f, 0x76,
	0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x44,
	0x75, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x10, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x58, 0x0a, 0x17, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x17, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x4f, 0x0a, 0x14, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x52, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x14, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xd2, 0x01, 0x0a, 0x10, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x6d,
	0x61, 0x78, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x6d, 0x61, 0x78,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x6d, 0x61, 0x78, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x18, 0x72,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x18, 0x72,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6c, 0x0a, 0x19, 0x4f,
	0x76, 0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x4f, 0x0a, 0x14, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x14, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x95, 0x01, 0x0a, 0x11, 0x4f, 0x76,
	0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x26, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4f, 0x76, 0x65, 0x72, 0x64, 0x72, 0x61, 0x66,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4f, 0x76,
	0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x6f, 0x76, 0x65, 0x72, 0x64,
	0x72, 0x61, 0x66, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x76, 0x65,
	0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x72, 0x61, 0x66, 0x74, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x98, 0x04, 0x0a, 0x14, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x38, 0x0a, 0x17, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x46, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x46, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x42, 0x0a, 0x1c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1c, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x17,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55, 0x6e, 0x69, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x2e,
	0x0a, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2c,
	0x0a, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x72, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x46, 0x0a, 0x11,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x54, 0x69, 0x65, 0x72,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x54, 0x69, 0x65, 0x72,
	0x73, 0x52, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x65, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x53, 0x70, 0x72, 0x65, 0x61, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x53, 0x70, 0x72, 0x65, 0x61, 0x64, 0x22, 0x9b, 0x01, 0x0a,
	0x11, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x54, 0x69, 0x65,
	0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b,
	0x65, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x44, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x17, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x4f, 0x0a, 0x14, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x14, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x3e, 0x0a, 0x14, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x64, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x22, 0x9f, 0x04, 0x0a, 0x14,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79,
	0x12, 0x2c, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4b, 0x65, 0x79,
	0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4b,
	0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x58,
	0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x52, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x1a, 0xd2, 0x01, 0x0a, 0x10, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x12, 0x2c, 0x0a,
	0x11, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x6d,
	0x61, 0x78, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x6d, 0x61, 0x78, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a, 0x0a,
	0x18, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x18, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x75, 0x0a,
	0x19, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e,
	0x6f, 0x74, 0x65, 0x73, 0x22, 0xce, 0x01, 0x0a, 0x1b, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x72,
	0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x12, 0x40, 0x0a, 0x0f, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x72,
	0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x72, 0x69, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x52, 0x0f, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x72, 0x69,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x22, 0xb6, 0x01, 0x0a, 0x1a, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x86,
	0x03, 0x0a, 0x1e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x34, 0x0a,
	0x15, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x2c, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x67, 0x6f, 0x6c,
	0x61, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_deposit_account_proto_rawDescOnce sync.Once
	file_deposit_account_proto_rawDescData = file_deposit_account_proto_rawDesc
)

func file_deposit_account_proto_rawDescGZIP() []byte {
	file_deposit_account_proto_rawDescOnce.Do(func() {
		file_deposit_account_proto_rawDescData = protoimpl.X.CompressGZIP(file_deposit_account_proto_rawDescData)
	})
	return file_deposit_account_proto_rawDescData
}

var file_deposit_account_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_deposit_account_proto_goTypes = []interface{}{
	(*DepositAccountResponse)(nil),                // 0: proto.DepositAccountResponse
	(*DepositAccountDetailRequest)(nil),           // 1: proto.DepositAccountDetailRequest
	(*DepositAccount)(nil),                        // 2: proto.DepositAccount
	(*AccruedAmounts)(nil),                        // 3: proto.AccruedAmounts
	(*Balances)(nil),                              // 4: proto.Balances
	(*InterestSettings)(nil),                      // 5: proto.InterestSettings
	(*InternalControls)(nil),                      // 6: proto.InternalControls
	(*OverdraftInterestSettings)(nil),             // 7: proto.OverdraftInterestSettings
	(*OverdraftSettings)(nil),                     // 8: proto.OverdraftSettings
	(*InterestRateSettings)(nil),                  // 9: proto.InterestRateSettings
	(*InterestRateTiers)(nil),                     // 10: proto.InterestRateTiers
	(*InterestPaymentSettings)(nil),               // 11: proto.InterestPaymentSettings
	(*InterestPaymentDates)(nil),                  // 12: proto.InterestPaymentDates
	(*DepositCreateRequest)(nil),                  // 13: proto.DepositCreateRequest
	(*DepositChangeStateRequest)(nil),             // 14: proto.DepositChangeStateRequest
	(*DepositAccountSearchRequest)(nil),           // 15: proto.DepositAccountSearchRequest
	(*DepositAccountListResponse)(nil),            // 16: proto.DepositAccountListResponse
	(*DepositAccountListParamRequest)(nil),        // 17: proto.DepositAccountListParamRequest
	(*DepositCreateRequest_InternalControls)(nil), // 18: proto.DepositCreateRequest.InternalControls
	(*Meta)(nil),                                  // 19: proto.Meta
	(*Parameter)(nil),                             // 20: proto.Parameter
	(*FilterCriteria)(nil),                        // 21: proto.FilterCriteria
	(*SortingCriteria)(nil),                       // 22: proto.SortingCriteria
}
var file_deposit_account_proto_depIdxs = []int32{
	2,  // 0: proto.DepositAccountResponse.data:type_name -> proto.DepositAccount
	19, // 1: proto.DepositAccountResponse.meta:type_name -> proto.Meta
	3,  // 2: proto.DepositAccount.accruedAmounts:type_name -> proto.AccruedAmounts
	4,  // 3: proto.DepositAccount.balances:type_name -> proto.Balances
	5,  // 4: proto.DepositAccount.interestSettings:type_name -> proto.InterestSettings
	6,  // 5: proto.DepositAccount.internalControls:type_name -> proto.InternalControls
	7,  // 6: proto.DepositAccount.overdraftInterestSettings:type_name -> proto.OverdraftInterestSettings
	8,  // 7: proto.DepositAccount.overdraftSettings:type_name -> proto.OverdraftSettings
	11, // 8: proto.InterestSettings.interestPaymentSettings:type_name -> proto.InterestPaymentSettings
	9,  // 9: proto.InterestSettings.interestRateSettings:type_name -> proto.InterestRateSettings
	9,  // 10: proto.OverdraftInterestSettings.interestRateSettings:type_name -> proto.InterestRateSettings
	10, // 11: proto.InterestRateSettings.interestRateTiers:type_name -> proto.InterestRateTiers
	12, // 12: proto.InterestPaymentSettings.interestPaymentDates:type_name -> proto.InterestPaymentDates
	18, // 13: proto.DepositCreateRequest.internalControls:type_name -> proto.DepositCreateRequest.InternalControls
	20, // 14: proto.DepositAccountSearchRequest.parameter:type_name -> proto.Parameter
	21, // 15: proto.DepositAccountSearchRequest.filterCriteria:type_name -> proto.FilterCriteria
	22, // 16: proto.DepositAccountSearchRequest.sortingCriteria:type_name -> proto.SortingCriteria
	2,  // 17: proto.DepositAccountListResponse.data:type_name -> proto.DepositAccount
	19, // 18: proto.DepositAccountListResponse.meta:type_name -> proto.Meta
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_deposit_account_proto_init() }
func file_deposit_account_proto_init() {
	if File_deposit_account_proto != nil {
		return
	}
	file_general_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_deposit_account_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_account_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositAccountDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_account_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_account_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccruedAmounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_account_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Balances); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_account_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterestSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_account_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InternalControls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_account_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverdraftInterestSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_account_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverdraftSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_account_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterestRateSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_account_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterestRateTiers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_account_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterestPaymentSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_account_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterestPaymentDates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_account_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_account_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositChangeStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_account_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositAccountSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_account_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositAccountListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_account_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositAccountListParamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposit_account_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositCreateRequest_InternalControls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_deposit_account_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_deposit_account_proto_goTypes,
		DependencyIndexes: file_deposit_account_proto_depIdxs,
		MessageInfos:      file_deposit_account_proto_msgTypes,
	}.Build()
	File_deposit_account_proto = out.File
	file_deposit_account_proto_rawDesc = nil
	file_deposit_account_proto_goTypes = nil
	file_deposit_account_proto_depIdxs = nil
}
