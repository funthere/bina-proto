// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.25.2
// source: journal_entries_service.proto

package golang

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	JournalEntriesService_ListJournalEntries_FullMethodName = "/proto.JournalEntriesService/ListJournalEntries"
)

// JournalEntriesServiceClient is the client API for JournalEntriesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type JournalEntriesServiceClient interface {
	ListJournalEntries(ctx context.Context, in *JournalEntriesListRequest, opts ...grpc.CallOption) (*JournalEntriesResponse, error)
}

type journalEntriesServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewJournalEntriesServiceClient(cc grpc.ClientConnInterface) JournalEntriesServiceClient {
	return &journalEntriesServiceClient{cc}
}

func (c *journalEntriesServiceClient) ListJournalEntries(ctx context.Context, in *JournalEntriesListRequest, opts ...grpc.CallOption) (*JournalEntriesResponse, error) {
	out := new(JournalEntriesResponse)
	err := c.cc.Invoke(ctx, JournalEntriesService_ListJournalEntries_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JournalEntriesServiceServer is the server API for JournalEntriesService service.
// All implementations should embed UnimplementedJournalEntriesServiceServer
// for forward compatibility
type JournalEntriesServiceServer interface {
	ListJournalEntries(context.Context, *JournalEntriesListRequest) (*JournalEntriesResponse, error)
}

// UnimplementedJournalEntriesServiceServer should be embedded to have forward compatible implementations.
type UnimplementedJournalEntriesServiceServer struct {
}

func (UnimplementedJournalEntriesServiceServer) ListJournalEntries(context.Context, *JournalEntriesListRequest) (*JournalEntriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListJournalEntries not implemented")
}

// UnsafeJournalEntriesServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to JournalEntriesServiceServer will
// result in compilation errors.
type UnsafeJournalEntriesServiceServer interface {
	mustEmbedUnimplementedJournalEntriesServiceServer()
}

func RegisterJournalEntriesServiceServer(s grpc.ServiceRegistrar, srv JournalEntriesServiceServer) {
	s.RegisterService(&JournalEntriesService_ServiceDesc, srv)
}

func _JournalEntriesService_ListJournalEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JournalEntriesListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JournalEntriesServiceServer).ListJournalEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: JournalEntriesService_ListJournalEntries_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JournalEntriesServiceServer).ListJournalEntries(ctx, req.(*JournalEntriesListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// JournalEntriesService_ServiceDesc is the grpc.ServiceDesc for JournalEntriesService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var JournalEntriesService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.JournalEntriesService",
	HandlerType: (*JournalEntriesServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListJournalEntries",
			Handler:    _JournalEntriesService_ListJournalEntries_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "journal_entries_service.proto",
}
