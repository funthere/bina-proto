// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.2
// source: loan_product.proto

package golang

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LoanProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode    string       `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage string       `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	Data            *LoanProduct `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Meta            *Meta        `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *LoanProductResponse) Reset() {
	*x = LoanProductResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductResponse) ProtoMessage() {}

func (x *LoanProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductResponse.ProtoReflect.Descriptor instead.
func (*LoanProductResponse) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{0}
}

func (x *LoanProductResponse) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *LoanProductResponse) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *LoanProductResponse) GetData() *LoanProduct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *LoanProductResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type LoanProductDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoanProductId string `protobuf:"bytes,1,opt,name=loanProductId,proto3" json:"loanProductId,omitempty"`
	DetailsLevel  string `protobuf:"bytes,2,opt,name=detailsLevel,proto3" json:"detailsLevel,omitempty"`
}

func (x *LoanProductDetailRequest) Reset() {
	*x = LoanProductDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductDetailRequest) ProtoMessage() {}

func (x *LoanProductDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductDetailRequest.ProtoReflect.Descriptor instead.
func (*LoanProductDetailRequest) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{1}
}

func (x *LoanProductDetailRequest) GetLoanProductId() string {
	if x != nil {
		return x.LoanProductId
	}
	return ""
}

func (x *LoanProductDetailRequest) GetDetailsLevel() string {
	if x != nil {
		return x.DetailsLevel
	}
	return ""
}

type LoanProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountLinkSettings               *LoanProduct_AccountLinkSettings       `protobuf:"bytes,1,opt,name=accountLinkSettings,proto3" json:"accountLinkSettings,omitempty"`
	AccountingSettings                *LoanProduct_AccountingSettings        `protobuf:"bytes,2,opt,name=accountingSettings,proto3" json:"accountingSettings,omitempty"`
	AdjustInterestForFirstInstallment bool                                   `protobuf:"varint,3,opt,name=adjustInterestForFirstInstallment,proto3" json:"adjustInterestForFirstInstallment,omitempty"`
	AllowCustomRepaymentAllocation    bool                                   `protobuf:"varint,4,opt,name=allowCustomRepaymentAllocation,proto3" json:"allowCustomRepaymentAllocation,omitempty"`
	ArrearsSettings                   *LoanProduct_ArrearsSettings           `protobuf:"bytes,5,opt,name=arrearsSettings,proto3" json:"arrearsSettings,omitempty"`
	AvailabilitySettings              *LoanProduct_AvailabilitySettings      `protobuf:"bytes,6,opt,name=availabilitySettings,proto3" json:"availabilitySettings,omitempty"`
	Category                          string                                 `protobuf:"bytes,7,opt,name=category,proto3" json:"category,omitempty"`
	CreationDate                      string                                 `protobuf:"bytes,8,opt,name=creationDate,proto3" json:"creationDate,omitempty"`
	CreditArrangementSettings         *LoanProduct_CreditArrangementSettings `protobuf:"bytes,9,opt,name=creditArrangementSettings,proto3" json:"creditArrangementSettings,omitempty"`
	Currency                          *LoanProduct_Currency                  `protobuf:"bytes,10,opt,name=currency,proto3" json:"currency,omitempty"`
	EncodedKey                        string                                 `protobuf:"bytes,11,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	FeesSettings                      *LoanProduct_FeesSettings              `protobuf:"bytes,12,opt,name=feesSettings,proto3" json:"feesSettings,omitempty"`
	FundingSettings                   *LoanProduct_FundingSettings           `protobuf:"bytes,13,opt,name=fundingSettings,proto3" json:"fundingSettings,omitempty"`
	GracePeriodSettings               *LoanProduct_GracePeriodSettings       `protobuf:"bytes,14,opt,name=gracePeriodSettings,proto3" json:"gracePeriodSettings,omitempty"`
	Id                                string                                 `protobuf:"bytes,15,opt,name=id,proto3" json:"id,omitempty"`
	InterestSettings                  *LoanProduct_InterestSettings          `protobuf:"bytes,16,opt,name=interestSettings,proto3" json:"interestSettings,omitempty"`
	InternalControls                  *LoanProduct_InternalControls          `protobuf:"bytes,17,opt,name=internalControls,proto3" json:"internalControls,omitempty"`
	LastModifiedDate                  string                                 `protobuf:"bytes,18,opt,name=lastModifiedDate,proto3" json:"lastModifiedDate,omitempty"`
	LoanAmountSettings                *LoanProduct_LoanAmountSettings        `protobuf:"bytes,19,opt,name=loanAmountSettings,proto3" json:"loanAmountSettings,omitempty"`
	Name                              string                                 `protobuf:"bytes,20,opt,name=name,proto3" json:"name,omitempty"`
	NewAccountSettings                *LoanProduct_NewAccountSettings        `protobuf:"bytes,21,opt,name=newAccountSettings,proto3" json:"newAccountSettings,omitempty"`
	Notes                             string                                 `protobuf:"bytes,22,opt,name=notes,proto3" json:"notes,omitempty"`
	OffsetSettings                    *LoanProduct_OffsetSettings            `protobuf:"bytes,23,opt,name=offsetSettings,proto3" json:"offsetSettings,omitempty"`
	PaymentSettings                   *LoanProduct_PaymentSettings           `protobuf:"bytes,24,opt,name=paymentSettings,proto3" json:"paymentSettings,omitempty"`
	PenaltySettings                   *LoanProduct_PenaltySettings           `protobuf:"bytes,25,opt,name=penaltySettings,proto3" json:"penaltySettings,omitempty"`
	RedrawSettings                    *LoanProduct_RedrawSettings            `protobuf:"bytes,26,opt,name=redrawSettings,proto3" json:"redrawSettings,omitempty"`
	ScheduleSettings                  *LoanProduct_ScheduleSettings          `protobuf:"bytes,27,opt,name=scheduleSettings,proto3" json:"scheduleSettings,omitempty"`
	SecuritySettings                  *LoanProduct_SecuritySettings          `protobuf:"bytes,28,opt,name=securitySettings,proto3" json:"securitySettings,omitempty"`
	State                             string                                 `protobuf:"bytes,29,opt,name=state,proto3" json:"state,omitempty"`
	TaxSettings                       *LoanProduct_TaxSettings               `protobuf:"bytes,30,opt,name=taxSettings,proto3" json:"taxSettings,omitempty"`
	Templates                         []*LoanProduct_Templates               `protobuf:"bytes,31,rep,name=templates,proto3" json:"templates,omitempty"`
	Type                              string                                 `protobuf:"bytes,32,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *LoanProduct) Reset() {
	*x = LoanProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct) ProtoMessage() {}

func (x *LoanProduct) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct.ProtoReflect.Descriptor instead.
func (*LoanProduct) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2}
}

func (x *LoanProduct) GetAccountLinkSettings() *LoanProduct_AccountLinkSettings {
	if x != nil {
		return x.AccountLinkSettings
	}
	return nil
}

func (x *LoanProduct) GetAccountingSettings() *LoanProduct_AccountingSettings {
	if x != nil {
		return x.AccountingSettings
	}
	return nil
}

func (x *LoanProduct) GetAdjustInterestForFirstInstallment() bool {
	if x != nil {
		return x.AdjustInterestForFirstInstallment
	}
	return false
}

func (x *LoanProduct) GetAllowCustomRepaymentAllocation() bool {
	if x != nil {
		return x.AllowCustomRepaymentAllocation
	}
	return false
}

func (x *LoanProduct) GetArrearsSettings() *LoanProduct_ArrearsSettings {
	if x != nil {
		return x.ArrearsSettings
	}
	return nil
}

func (x *LoanProduct) GetAvailabilitySettings() *LoanProduct_AvailabilitySettings {
	if x != nil {
		return x.AvailabilitySettings
	}
	return nil
}

func (x *LoanProduct) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *LoanProduct) GetCreationDate() string {
	if x != nil {
		return x.CreationDate
	}
	return ""
}

func (x *LoanProduct) GetCreditArrangementSettings() *LoanProduct_CreditArrangementSettings {
	if x != nil {
		return x.CreditArrangementSettings
	}
	return nil
}

func (x *LoanProduct) GetCurrency() *LoanProduct_Currency {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *LoanProduct) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *LoanProduct) GetFeesSettings() *LoanProduct_FeesSettings {
	if x != nil {
		return x.FeesSettings
	}
	return nil
}

func (x *LoanProduct) GetFundingSettings() *LoanProduct_FundingSettings {
	if x != nil {
		return x.FundingSettings
	}
	return nil
}

func (x *LoanProduct) GetGracePeriodSettings() *LoanProduct_GracePeriodSettings {
	if x != nil {
		return x.GracePeriodSettings
	}
	return nil
}

func (x *LoanProduct) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LoanProduct) GetInterestSettings() *LoanProduct_InterestSettings {
	if x != nil {
		return x.InterestSettings
	}
	return nil
}

func (x *LoanProduct) GetInternalControls() *LoanProduct_InternalControls {
	if x != nil {
		return x.InternalControls
	}
	return nil
}

func (x *LoanProduct) GetLastModifiedDate() string {
	if x != nil {
		return x.LastModifiedDate
	}
	return ""
}

func (x *LoanProduct) GetLoanAmountSettings() *LoanProduct_LoanAmountSettings {
	if x != nil {
		return x.LoanAmountSettings
	}
	return nil
}

func (x *LoanProduct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LoanProduct) GetNewAccountSettings() *LoanProduct_NewAccountSettings {
	if x != nil {
		return x.NewAccountSettings
	}
	return nil
}

func (x *LoanProduct) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *LoanProduct) GetOffsetSettings() *LoanProduct_OffsetSettings {
	if x != nil {
		return x.OffsetSettings
	}
	return nil
}

func (x *LoanProduct) GetPaymentSettings() *LoanProduct_PaymentSettings {
	if x != nil {
		return x.PaymentSettings
	}
	return nil
}

func (x *LoanProduct) GetPenaltySettings() *LoanProduct_PenaltySettings {
	if x != nil {
		return x.PenaltySettings
	}
	return nil
}

func (x *LoanProduct) GetRedrawSettings() *LoanProduct_RedrawSettings {
	if x != nil {
		return x.RedrawSettings
	}
	return nil
}

func (x *LoanProduct) GetScheduleSettings() *LoanProduct_ScheduleSettings {
	if x != nil {
		return x.ScheduleSettings
	}
	return nil
}

func (x *LoanProduct) GetSecuritySettings() *LoanProduct_SecuritySettings {
	if x != nil {
		return x.SecuritySettings
	}
	return nil
}

func (x *LoanProduct) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *LoanProduct) GetTaxSettings() *LoanProduct_TaxSettings {
	if x != nil {
		return x.TaxSettings
	}
	return nil
}

func (x *LoanProduct) GetTemplates() []*LoanProduct_Templates {
	if x != nil {
		return x.Templates
	}
	return nil
}

func (x *LoanProduct) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type LoanProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountLinkSettings               *LoanProductRequest_AccountLinkSettings       `protobuf:"bytes,1,opt,name=accountLinkSettings,proto3" json:"accountLinkSettings,omitempty"`
	AccountingSettings                *LoanProductRequest_AccountingSettings        `protobuf:"bytes,2,opt,name=accountingSettings,proto3" json:"accountingSettings,omitempty"`
	AdjustInterestForFirstInstallment bool                                          `protobuf:"varint,3,opt,name=adjustInterestForFirstInstallment,proto3" json:"adjustInterestForFirstInstallment,omitempty"`
	AllowCustomRepaymentAllocation    bool                                          `protobuf:"varint,4,opt,name=allowCustomRepaymentAllocation,proto3" json:"allowCustomRepaymentAllocation,omitempty"`
	ArrearsSettings                   *LoanProductRequest_ArrearsSettings           `protobuf:"bytes,5,opt,name=arrearsSettings,proto3" json:"arrearsSettings,omitempty"`
	AvailabilitySettings              *LoanProductRequest_AvailabilitySettings      `protobuf:"bytes,6,opt,name=availabilitySettings,proto3" json:"availabilitySettings,omitempty"`
	Category                          string                                        `protobuf:"bytes,7,opt,name=category,proto3" json:"category,omitempty"`
	CreationDate                      string                                        `protobuf:"bytes,8,opt,name=creationDate,proto3" json:"creationDate,omitempty"`
	CreditArrangementSettings         *LoanProductRequest_CreditArrangementSettings `protobuf:"bytes,9,opt,name=creditArrangementSettings,proto3" json:"creditArrangementSettings,omitempty"`
	Currency                          *LoanProductRequest_Currency                  `protobuf:"bytes,10,opt,name=currency,proto3" json:"currency,omitempty"`
	FeesSettings                      *LoanProductRequest_FeesSettings              `protobuf:"bytes,11,opt,name=feesSettings,proto3" json:"feesSettings,omitempty"`
	FundingSettings                   *LoanProductRequest_FundingSettings           `protobuf:"bytes,12,opt,name=fundingSettings,proto3" json:"fundingSettings,omitempty"`
	GracePeriodSettings               *LoanProductRequest_GracePeriodSettings       `protobuf:"bytes,13,opt,name=gracePeriodSettings,proto3" json:"gracePeriodSettings,omitempty"`
	Id                                string                                        `protobuf:"bytes,14,opt,name=id,proto3" json:"id,omitempty"`
	InterestSettings                  *LoanProductRequest_InterestSettings          `protobuf:"bytes,15,opt,name=interestSettings,proto3" json:"interestSettings,omitempty"`
	InternalControls                  *LoanProductRequest_InternalControls          `protobuf:"bytes,16,opt,name=internalControls,proto3" json:"internalControls,omitempty"`
	LastModifiedDate                  string                                        `protobuf:"bytes,17,opt,name=lastModifiedDate,proto3" json:"lastModifiedDate,omitempty"`
	LoanAmountSettings                *LoanProductRequest_LoanAmountSettings        `protobuf:"bytes,18,opt,name=loanAmountSettings,proto3" json:"loanAmountSettings,omitempty"`
	Name                              string                                        `protobuf:"bytes,19,opt,name=name,proto3" json:"name,omitempty"`
	NewAccountSettings                *LoanProductRequest_NewAccountSettings        `protobuf:"bytes,20,opt,name=newAccountSettings,proto3" json:"newAccountSettings,omitempty"`
	Notes                             string                                        `protobuf:"bytes,21,opt,name=notes,proto3" json:"notes,omitempty"`
	OffsetSettings                    *LoanProductRequest_OffsetSettings            `protobuf:"bytes,22,opt,name=offsetSettings,proto3" json:"offsetSettings,omitempty"`
	PaymentSettings                   *LoanProductRequest_PaymentSettings           `protobuf:"bytes,23,opt,name=paymentSettings,proto3" json:"paymentSettings,omitempty"`
	PenaltySettings                   *LoanProductRequest_PenaltySettings           `protobuf:"bytes,24,opt,name=penaltySettings,proto3" json:"penaltySettings,omitempty"`
	RedrawSettings                    *LoanProductRequest_RedrawSettings            `protobuf:"bytes,25,opt,name=redrawSettings,proto3" json:"redrawSettings,omitempty"`
	ScheduleSettings                  *LoanProductRequest_ScheduleSettings          `protobuf:"bytes,26,opt,name=scheduleSettings,proto3" json:"scheduleSettings,omitempty"`
	SecuritySettings                  *LoanProductRequest_SecuritySettings          `protobuf:"bytes,27,opt,name=securitySettings,proto3" json:"securitySettings,omitempty"`
	State                             string                                        `protobuf:"bytes,28,opt,name=state,proto3" json:"state,omitempty"`
	TaxSettings                       *LoanProductRequest_TaxSettings               `protobuf:"bytes,29,opt,name=taxSettings,proto3" json:"taxSettings,omitempty"`
	Templates                         []*LoanProductRequest_Templates               `protobuf:"bytes,30,rep,name=templates,proto3" json:"templates,omitempty"`
	Type                              string                                        `protobuf:"bytes,31,opt,name=type,proto3" json:"type,omitempty"`
	EncodedKey                        string                                        `protobuf:"bytes,32,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
}

func (x *LoanProductRequest) Reset() {
	*x = LoanProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest) ProtoMessage() {}

func (x *LoanProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest.ProtoReflect.Descriptor instead.
func (*LoanProductRequest) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3}
}

func (x *LoanProductRequest) GetAccountLinkSettings() *LoanProductRequest_AccountLinkSettings {
	if x != nil {
		return x.AccountLinkSettings
	}
	return nil
}

func (x *LoanProductRequest) GetAccountingSettings() *LoanProductRequest_AccountingSettings {
	if x != nil {
		return x.AccountingSettings
	}
	return nil
}

func (x *LoanProductRequest) GetAdjustInterestForFirstInstallment() bool {
	if x != nil {
		return x.AdjustInterestForFirstInstallment
	}
	return false
}

func (x *LoanProductRequest) GetAllowCustomRepaymentAllocation() bool {
	if x != nil {
		return x.AllowCustomRepaymentAllocation
	}
	return false
}

func (x *LoanProductRequest) GetArrearsSettings() *LoanProductRequest_ArrearsSettings {
	if x != nil {
		return x.ArrearsSettings
	}
	return nil
}

func (x *LoanProductRequest) GetAvailabilitySettings() *LoanProductRequest_AvailabilitySettings {
	if x != nil {
		return x.AvailabilitySettings
	}
	return nil
}

func (x *LoanProductRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *LoanProductRequest) GetCreationDate() string {
	if x != nil {
		return x.CreationDate
	}
	return ""
}

func (x *LoanProductRequest) GetCreditArrangementSettings() *LoanProductRequest_CreditArrangementSettings {
	if x != nil {
		return x.CreditArrangementSettings
	}
	return nil
}

func (x *LoanProductRequest) GetCurrency() *LoanProductRequest_Currency {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *LoanProductRequest) GetFeesSettings() *LoanProductRequest_FeesSettings {
	if x != nil {
		return x.FeesSettings
	}
	return nil
}

func (x *LoanProductRequest) GetFundingSettings() *LoanProductRequest_FundingSettings {
	if x != nil {
		return x.FundingSettings
	}
	return nil
}

func (x *LoanProductRequest) GetGracePeriodSettings() *LoanProductRequest_GracePeriodSettings {
	if x != nil {
		return x.GracePeriodSettings
	}
	return nil
}

func (x *LoanProductRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LoanProductRequest) GetInterestSettings() *LoanProductRequest_InterestSettings {
	if x != nil {
		return x.InterestSettings
	}
	return nil
}

func (x *LoanProductRequest) GetInternalControls() *LoanProductRequest_InternalControls {
	if x != nil {
		return x.InternalControls
	}
	return nil
}

func (x *LoanProductRequest) GetLastModifiedDate() string {
	if x != nil {
		return x.LastModifiedDate
	}
	return ""
}

func (x *LoanProductRequest) GetLoanAmountSettings() *LoanProductRequest_LoanAmountSettings {
	if x != nil {
		return x.LoanAmountSettings
	}
	return nil
}

func (x *LoanProductRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LoanProductRequest) GetNewAccountSettings() *LoanProductRequest_NewAccountSettings {
	if x != nil {
		return x.NewAccountSettings
	}
	return nil
}

func (x *LoanProductRequest) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *LoanProductRequest) GetOffsetSettings() *LoanProductRequest_OffsetSettings {
	if x != nil {
		return x.OffsetSettings
	}
	return nil
}

func (x *LoanProductRequest) GetPaymentSettings() *LoanProductRequest_PaymentSettings {
	if x != nil {
		return x.PaymentSettings
	}
	return nil
}

func (x *LoanProductRequest) GetPenaltySettings() *LoanProductRequest_PenaltySettings {
	if x != nil {
		return x.PenaltySettings
	}
	return nil
}

func (x *LoanProductRequest) GetRedrawSettings() *LoanProductRequest_RedrawSettings {
	if x != nil {
		return x.RedrawSettings
	}
	return nil
}

func (x *LoanProductRequest) GetScheduleSettings() *LoanProductRequest_ScheduleSettings {
	if x != nil {
		return x.ScheduleSettings
	}
	return nil
}

func (x *LoanProductRequest) GetSecuritySettings() *LoanProductRequest_SecuritySettings {
	if x != nil {
		return x.SecuritySettings
	}
	return nil
}

func (x *LoanProductRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *LoanProductRequest) GetTaxSettings() *LoanProductRequest_TaxSettings {
	if x != nil {
		return x.TaxSettings
	}
	return nil
}

func (x *LoanProductRequest) GetTemplates() []*LoanProductRequest_Templates {
	if x != nil {
		return x.Templates
	}
	return nil
}

func (x *LoanProductRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LoanProductRequest) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

type LoanProduct_AccountLinkSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled                   bool     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	LinkableDepositProductKey string   `protobuf:"bytes,2,opt,name=linkableDepositProductKey,proto3" json:"linkableDepositProductKey,omitempty"`
	LinkedAccountOptions      []string `protobuf:"bytes,3,rep,name=linkedAccountOptions,proto3" json:"linkedAccountOptions,omitempty"`
	SettlementMethod          string   `protobuf:"bytes,4,opt,name=settlementMethod,proto3" json:"settlementMethod,omitempty"`
}

func (x *LoanProduct_AccountLinkSettings) Reset() {
	*x = LoanProduct_AccountLinkSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_AccountLinkSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_AccountLinkSettings) ProtoMessage() {}

func (x *LoanProduct_AccountLinkSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_AccountLinkSettings.ProtoReflect.Descriptor instead.
func (*LoanProduct_AccountLinkSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 0}
}

func (x *LoanProduct_AccountLinkSettings) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *LoanProduct_AccountLinkSettings) GetLinkableDepositProductKey() string {
	if x != nil {
		return x.LinkableDepositProductKey
	}
	return ""
}

func (x *LoanProduct_AccountLinkSettings) GetLinkedAccountOptions() []string {
	if x != nil {
		return x.LinkedAccountOptions
	}
	return nil
}

func (x *LoanProduct_AccountLinkSettings) GetSettlementMethod() string {
	if x != nil {
		return x.SettlementMethod
	}
	return ""
}

type LoanProduct_AccountingSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountingMethod                string                                            `protobuf:"bytes,1,opt,name=accountingMethod,proto3" json:"accountingMethod,omitempty"`
	AccountingRules                 []*LoanProduct_AccountingSettings_AccountingRules `protobuf:"bytes,2,rep,name=accountingRules,proto3" json:"accountingRules,omitempty"`
	InterestAccrualCalculation      string                                            `protobuf:"bytes,3,opt,name=interestAccrualCalculation,proto3" json:"interestAccrualCalculation,omitempty"`
	InterestAccruedAccountingMethod string                                            `protobuf:"bytes,4,opt,name=interestAccruedAccountingMethod,proto3" json:"interestAccruedAccountingMethod,omitempty"`
}

func (x *LoanProduct_AccountingSettings) Reset() {
	*x = LoanProduct_AccountingSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_AccountingSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_AccountingSettings) ProtoMessage() {}

func (x *LoanProduct_AccountingSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_AccountingSettings.ProtoReflect.Descriptor instead.
func (*LoanProduct_AccountingSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 1}
}

func (x *LoanProduct_AccountingSettings) GetAccountingMethod() string {
	if x != nil {
		return x.AccountingMethod
	}
	return ""
}

func (x *LoanProduct_AccountingSettings) GetAccountingRules() []*LoanProduct_AccountingSettings_AccountingRules {
	if x != nil {
		return x.AccountingRules
	}
	return nil
}

func (x *LoanProduct_AccountingSettings) GetInterestAccrualCalculation() string {
	if x != nil {
		return x.InterestAccrualCalculation
	}
	return ""
}

func (x *LoanProduct_AccountingSettings) GetInterestAccruedAccountingMethod() string {
	if x != nil {
		return x.InterestAccruedAccountingMethod
	}
	return ""
}

type LoanProduct_ArrearsSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DateCalculationMethod                     string                                                                 `protobuf:"bytes,1,opt,name=dateCalculationMethod,proto3" json:"dateCalculationMethod,omitempty"`
	EncodedKey                                string                                                                 `protobuf:"bytes,2,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	MonthlyToleranceDay                       uint32                                                                 `protobuf:"varint,3,opt,name=monthlyToleranceDay,proto3" json:"monthlyToleranceDay,omitempty"`
	NonWorkingDaysMethod                      string                                                                 `protobuf:"bytes,4,opt,name=nonWorkingDaysMethod,proto3" json:"nonWorkingDaysMethod,omitempty"`
	ToleranceCalculationMethod                string                                                                 `protobuf:"bytes,5,opt,name=toleranceCalculationMethod,proto3" json:"toleranceCalculationMethod,omitempty"`
	ToleranceFloorAmount                      float64                                                                `protobuf:"fixed64,6,opt,name=toleranceFloorAmount,proto3" json:"toleranceFloorAmount,omitempty"`
	TolerancePercentageOfOutstandingPrincipal *LoanProduct_ArrearsSettings_TolerancePercentageOfOutstandingPrincipal `protobuf:"bytes,7,opt,name=tolerancePercentageOfOutstandingPrincipal,proto3" json:"tolerancePercentageOfOutstandingPrincipal,omitempty"`
	TolerancePeriod                           *LoanProduct_ArrearsSettings_TolerancePeriod                           `protobuf:"bytes,8,opt,name=tolerancePeriod,proto3" json:"tolerancePeriod,omitempty"`
}

func (x *LoanProduct_ArrearsSettings) Reset() {
	*x = LoanProduct_ArrearsSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_ArrearsSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_ArrearsSettings) ProtoMessage() {}

func (x *LoanProduct_ArrearsSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_ArrearsSettings.ProtoReflect.Descriptor instead.
func (*LoanProduct_ArrearsSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 2}
}

func (x *LoanProduct_ArrearsSettings) GetDateCalculationMethod() string {
	if x != nil {
		return x.DateCalculationMethod
	}
	return ""
}

func (x *LoanProduct_ArrearsSettings) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *LoanProduct_ArrearsSettings) GetMonthlyToleranceDay() uint32 {
	if x != nil {
		return x.MonthlyToleranceDay
	}
	return 0
}

func (x *LoanProduct_ArrearsSettings) GetNonWorkingDaysMethod() string {
	if x != nil {
		return x.NonWorkingDaysMethod
	}
	return ""
}

func (x *LoanProduct_ArrearsSettings) GetToleranceCalculationMethod() string {
	if x != nil {
		return x.ToleranceCalculationMethod
	}
	return ""
}

func (x *LoanProduct_ArrearsSettings) GetToleranceFloorAmount() float64 {
	if x != nil {
		return x.ToleranceFloorAmount
	}
	return 0
}

func (x *LoanProduct_ArrearsSettings) GetTolerancePercentageOfOutstandingPrincipal() *LoanProduct_ArrearsSettings_TolerancePercentageOfOutstandingPrincipal {
	if x != nil {
		return x.TolerancePercentageOfOutstandingPrincipal
	}
	return nil
}

func (x *LoanProduct_ArrearsSettings) GetTolerancePeriod() *LoanProduct_ArrearsSettings_TolerancePeriod {
	if x != nil {
		return x.TolerancePeriod
	}
	return nil
}

type LoanProduct_AvailabilitySettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableFor   []string                                         `protobuf:"bytes,1,rep,name=availableFor,proto3" json:"availableFor,omitempty"`
	BranchSettings *LoanProduct_AvailabilitySettings_BranchSettings `protobuf:"bytes,2,opt,name=branchSettings,proto3" json:"branchSettings,omitempty"`
}

func (x *LoanProduct_AvailabilitySettings) Reset() {
	*x = LoanProduct_AvailabilitySettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_AvailabilitySettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_AvailabilitySettings) ProtoMessage() {}

func (x *LoanProduct_AvailabilitySettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_AvailabilitySettings.ProtoReflect.Descriptor instead.
func (*LoanProduct_AvailabilitySettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 3}
}

func (x *LoanProduct_AvailabilitySettings) GetAvailableFor() []string {
	if x != nil {
		return x.AvailableFor
	}
	return nil
}

func (x *LoanProduct_AvailabilitySettings) GetBranchSettings() *LoanProduct_AvailabilitySettings_BranchSettings {
	if x != nil {
		return x.BranchSettings
	}
	return nil
}

type LoanProduct_CreditArrangementSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreditArrangementRequirement string `protobuf:"bytes,1,opt,name=creditArrangementRequirement,proto3" json:"creditArrangementRequirement,omitempty"`
}

func (x *LoanProduct_CreditArrangementSettings) Reset() {
	*x = LoanProduct_CreditArrangementSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_CreditArrangementSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_CreditArrangementSettings) ProtoMessage() {}

func (x *LoanProduct_CreditArrangementSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_CreditArrangementSettings.ProtoReflect.Descriptor instead.
func (*LoanProduct_CreditArrangementSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 4}
}

func (x *LoanProduct_CreditArrangementSettings) GetCreditArrangementRequirement() string {
	if x != nil {
		return x.CreditArrangementRequirement
	}
	return ""
}

type LoanProduct_Currency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	CurrencyCode string `protobuf:"bytes,2,opt,name=currencyCode,proto3" json:"currencyCode,omitempty"`
}

func (x *LoanProduct_Currency) Reset() {
	*x = LoanProduct_Currency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_Currency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_Currency) ProtoMessage() {}

func (x *LoanProduct_Currency) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_Currency.ProtoReflect.Descriptor instead.
func (*LoanProduct_Currency) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 5}
}

func (x *LoanProduct_Currency) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *LoanProduct_Currency) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

type LoanProduct_FeesSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowArbitraryFees bool                             `protobuf:"varint,1,opt,name=allowArbitraryFees,proto3" json:"allowArbitraryFees,omitempty"`
	Fees               []*LoanProduct_FeesSettings_Fees `protobuf:"bytes,2,rep,name=fees,proto3" json:"fees,omitempty"`
}

func (x *LoanProduct_FeesSettings) Reset() {
	*x = LoanProduct_FeesSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_FeesSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_FeesSettings) ProtoMessage() {}

func (x *LoanProduct_FeesSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_FeesSettings.ProtoReflect.Descriptor instead.
func (*LoanProduct_FeesSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 6}
}

func (x *LoanProduct_FeesSettings) GetAllowArbitraryFees() bool {
	if x != nil {
		return x.AllowArbitraryFees
	}
	return false
}

func (x *LoanProduct_FeesSettings) GetFees() []*LoanProduct_FeesSettings_Fees {
	if x != nil {
		return x.Fees
	}
	return nil
}

type LoanProduct_FundingSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled                                bool                                                        `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	FunderInterestCommission               *LoanProduct_FundingSettings_FunderInterestCommission       `protobuf:"bytes,2,opt,name=funderInterestCommission,proto3" json:"funderInterestCommission,omitempty"`
	FunderInterestCommissionAllocationType string                                                      `protobuf:"bytes,3,opt,name=funderInterestCommissionAllocationType,proto3" json:"funderInterestCommissionAllocationType,omitempty"`
	LockFundsAtApproval                    bool                                                        `protobuf:"varint,4,opt,name=lockFundsAtApproval,proto3" json:"lockFundsAtApproval,omitempty"`
	OrganizationInterestCommission         *LoanProduct_FundingSettings_OrganizationInterestCommission `protobuf:"bytes,5,opt,name=organizationInterestCommission,proto3" json:"organizationInterestCommission,omitempty"`
	RequiredFunds                          float64                                                     `protobuf:"fixed64,6,opt,name=requiredFunds,proto3" json:"requiredFunds,omitempty"`
}

func (x *LoanProduct_FundingSettings) Reset() {
	*x = LoanProduct_FundingSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_FundingSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_FundingSettings) ProtoMessage() {}

func (x *LoanProduct_FundingSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_FundingSettings.ProtoReflect.Descriptor instead.
func (*LoanProduct_FundingSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 7}
}

func (x *LoanProduct_FundingSettings) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *LoanProduct_FundingSettings) GetFunderInterestCommission() *LoanProduct_FundingSettings_FunderInterestCommission {
	if x != nil {
		return x.FunderInterestCommission
	}
	return nil
}

func (x *LoanProduct_FundingSettings) GetFunderInterestCommissionAllocationType() string {
	if x != nil {
		return x.FunderInterestCommissionAllocationType
	}
	return ""
}

func (x *LoanProduct_FundingSettings) GetLockFundsAtApproval() bool {
	if x != nil {
		return x.LockFundsAtApproval
	}
	return false
}

func (x *LoanProduct_FundingSettings) GetOrganizationInterestCommission() *LoanProduct_FundingSettings_OrganizationInterestCommission {
	if x != nil {
		return x.OrganizationInterestCommission
	}
	return nil
}

func (x *LoanProduct_FundingSettings) GetRequiredFunds() float64 {
	if x != nil {
		return x.RequiredFunds
	}
	return 0
}

type LoanProduct_GracePeriodSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GracePeriod     *LoanProduct_GracePeriodSettings_GracePeriod `protobuf:"bytes,1,opt,name=gracePeriod,proto3" json:"gracePeriod,omitempty"`
	GracePeriodType string                                       `protobuf:"bytes,2,opt,name=gracePeriodType,proto3" json:"gracePeriodType,omitempty"`
}

func (x *LoanProduct_GracePeriodSettings) Reset() {
	*x = LoanProduct_GracePeriodSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_GracePeriodSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_GracePeriodSettings) ProtoMessage() {}

func (x *LoanProduct_GracePeriodSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_GracePeriodSettings.ProtoReflect.Descriptor instead.
func (*LoanProduct_GracePeriodSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 8}
}

func (x *LoanProduct_GracePeriodSettings) GetGracePeriod() *LoanProduct_GracePeriodSettings_GracePeriod {
	if x != nil {
		return x.GracePeriod
	}
	return nil
}

func (x *LoanProduct_GracePeriodSettings) GetGracePeriodType() string {
	if x != nil {
		return x.GracePeriodType
	}
	return ""
}

type LoanProduct_InterestSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccrueLateInterest               bool                                                 `protobuf:"varint,1,opt,name=accrueLateInterest,proto3" json:"accrueLateInterest,omitempty"`
	CompoundingFrequency             string                                               `protobuf:"bytes,2,opt,name=compoundingFrequency,proto3" json:"compoundingFrequency,omitempty"`
	DaysInYear                       string                                               `protobuf:"bytes,3,opt,name=daysInYear,proto3" json:"daysInYear,omitempty"`
	IndexRateSettings                *LoanProduct_InterestSettings_IndexRateSettings      `protobuf:"bytes,4,opt,name=indexRateSettings,proto3" json:"indexRateSettings,omitempty"`
	InterestApplicationMethod        string                                               `protobuf:"bytes,5,opt,name=interestApplicationMethod,proto3" json:"interestApplicationMethod,omitempty"`
	InterestBalanceCalculationMethod string                                               `protobuf:"bytes,6,opt,name=interestBalanceCalculationMethod,proto3" json:"interestBalanceCalculationMethod,omitempty"`
	InterestCalculationMethod        string                                               `protobuf:"bytes,7,opt,name=interestCalculationMethod,proto3" json:"interestCalculationMethod,omitempty"`
	InterestRateSettings             []*LoanProduct_InterestSettings_InterestRateSettings `protobuf:"bytes,8,rep,name=interestRateSettings,proto3" json:"interestRateSettings,omitempty"`
	InterestType                     string                                               `protobuf:"bytes,9,opt,name=interestType,proto3" json:"interestType,omitempty"`
	ScheduleInterestDaysCountMethod  string                                               `protobuf:"bytes,10,opt,name=scheduleInterestDaysCountMethod,proto3" json:"scheduleInterestDaysCountMethod,omitempty"`
}

func (x *LoanProduct_InterestSettings) Reset() {
	*x = LoanProduct_InterestSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_InterestSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_InterestSettings) ProtoMessage() {}

func (x *LoanProduct_InterestSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_InterestSettings.ProtoReflect.Descriptor instead.
func (*LoanProduct_InterestSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 9}
}

func (x *LoanProduct_InterestSettings) GetAccrueLateInterest() bool {
	if x != nil {
		return x.AccrueLateInterest
	}
	return false
}

func (x *LoanProduct_InterestSettings) GetCompoundingFrequency() string {
	if x != nil {
		return x.CompoundingFrequency
	}
	return ""
}

func (x *LoanProduct_InterestSettings) GetDaysInYear() string {
	if x != nil {
		return x.DaysInYear
	}
	return ""
}

func (x *LoanProduct_InterestSettings) GetIndexRateSettings() *LoanProduct_InterestSettings_IndexRateSettings {
	if x != nil {
		return x.IndexRateSettings
	}
	return nil
}

func (x *LoanProduct_InterestSettings) GetInterestApplicationMethod() string {
	if x != nil {
		return x.InterestApplicationMethod
	}
	return ""
}

func (x *LoanProduct_InterestSettings) GetInterestBalanceCalculationMethod() string {
	if x != nil {
		return x.InterestBalanceCalculationMethod
	}
	return ""
}

func (x *LoanProduct_InterestSettings) GetInterestCalculationMethod() string {
	if x != nil {
		return x.InterestCalculationMethod
	}
	return ""
}

func (x *LoanProduct_InterestSettings) GetInterestRateSettings() []*LoanProduct_InterestSettings_InterestRateSettings {
	if x != nil {
		return x.InterestRateSettings
	}
	return nil
}

func (x *LoanProduct_InterestSettings) GetInterestType() string {
	if x != nil {
		return x.InterestType
	}
	return ""
}

func (x *LoanProduct_InterestSettings) GetScheduleInterestDaysCountMethod() string {
	if x != nil {
		return x.ScheduleInterestDaysCountMethod
	}
	return ""
}

type LoanProduct_InternalControls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DormancyPeriodDays uint32                                          `protobuf:"varint,1,opt,name=dormancyPeriodDays,proto3" json:"dormancyPeriodDays,omitempty"`
	FourEyesPrinciple  *LoanProduct_InternalControls_FourEyesPrinciple `protobuf:"bytes,2,opt,name=fourEyesPrinciple,proto3" json:"fourEyesPrinciple,omitempty"`
	LockSettings       *LoanProduct_InternalControls_LockSettings      `protobuf:"bytes,3,opt,name=lockSettings,proto3" json:"lockSettings,omitempty"`
}

func (x *LoanProduct_InternalControls) Reset() {
	*x = LoanProduct_InternalControls{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_InternalControls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_InternalControls) ProtoMessage() {}

func (x *LoanProduct_InternalControls) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_InternalControls.ProtoReflect.Descriptor instead.
func (*LoanProduct_InternalControls) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 10}
}

func (x *LoanProduct_InternalControls) GetDormancyPeriodDays() uint32 {
	if x != nil {
		return x.DormancyPeriodDays
	}
	return 0
}

func (x *LoanProduct_InternalControls) GetFourEyesPrinciple() *LoanProduct_InternalControls_FourEyesPrinciple {
	if x != nil {
		return x.FourEyesPrinciple
	}
	return nil
}

func (x *LoanProduct_InternalControls) GetLockSettings() *LoanProduct_InternalControls_LockSettings {
	if x != nil {
		return x.LockSettings
	}
	return nil
}

type LoanProduct_LoanAmountSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoanAmount      *LoanProduct_LoanAmountSettings_LoanAmount      `protobuf:"bytes,1,opt,name=loanAmount,proto3" json:"loanAmount,omitempty"`
	TrancheSettings *LoanProduct_LoanAmountSettings_TrancheSettings `protobuf:"bytes,2,opt,name=trancheSettings,proto3" json:"trancheSettings,omitempty"`
}

func (x *LoanProduct_LoanAmountSettings) Reset() {
	*x = LoanProduct_LoanAmountSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_LoanAmountSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_LoanAmountSettings) ProtoMessage() {}

func (x *LoanProduct_LoanAmountSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_LoanAmountSettings.ProtoReflect.Descriptor instead.
func (*LoanProduct_LoanAmountSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 11}
}

func (x *LoanProduct_LoanAmountSettings) GetLoanAmount() *LoanProduct_LoanAmountSettings_LoanAmount {
	if x != nil {
		return x.LoanAmount
	}
	return nil
}

func (x *LoanProduct_LoanAmountSettings) GetTrancheSettings() *LoanProduct_LoanAmountSettings_TrancheSettings {
	if x != nil {
		return x.TrancheSettings
	}
	return nil
}

type LoanProduct_NewAccountSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountInitialState string `protobuf:"bytes,1,opt,name=accountInitialState,proto3" json:"accountInitialState,omitempty"`
	IdGeneratorType     string `protobuf:"bytes,2,opt,name=idGeneratorType,proto3" json:"idGeneratorType,omitempty"`
	IdPattern           string `protobuf:"bytes,3,opt,name=idPattern,proto3" json:"idPattern,omitempty"`
}

func (x *LoanProduct_NewAccountSettings) Reset() {
	*x = LoanProduct_NewAccountSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_NewAccountSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_NewAccountSettings) ProtoMessage() {}

func (x *LoanProduct_NewAccountSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_NewAccountSettings.ProtoReflect.Descriptor instead.
func (*LoanProduct_NewAccountSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 12}
}

func (x *LoanProduct_NewAccountSettings) GetAccountInitialState() string {
	if x != nil {
		return x.AccountInitialState
	}
	return ""
}

func (x *LoanProduct_NewAccountSettings) GetIdGeneratorType() string {
	if x != nil {
		return x.IdGeneratorType
	}
	return ""
}

func (x *LoanProduct_NewAccountSettings) GetIdPattern() string {
	if x != nil {
		return x.IdPattern
	}
	return ""
}

type LoanProduct_OffsetSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowOffset bool `protobuf:"varint,1,opt,name=allowOffset,proto3" json:"allowOffset,omitempty"`
}

func (x *LoanProduct_OffsetSettings) Reset() {
	*x = LoanProduct_OffsetSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_OffsetSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_OffsetSettings) ProtoMessage() {}

func (x *LoanProduct_OffsetSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_OffsetSettings.ProtoReflect.Descriptor instead.
func (*LoanProduct_OffsetSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 13}
}

func (x *LoanProduct_OffsetSettings) GetAllowOffset() bool {
	if x != nil {
		return x.AllowOffset
	}
	return false
}

type LoanProduct_PaymentSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AmortizationMethod              string                                                `protobuf:"bytes,1,opt,name=amortizationMethod,proto3" json:"amortizationMethod,omitempty"`
	LatePaymentsRecalculationMethod string                                                `protobuf:"bytes,2,opt,name=latePaymentsRecalculationMethod,proto3" json:"latePaymentsRecalculationMethod,omitempty"`
	PaymentMethod                   string                                                `protobuf:"bytes,3,opt,name=paymentMethod,proto3" json:"paymentMethod,omitempty"`
	PrepaymentSettings              *LoanProduct_PaymentSettings_PrepaymentSettings       `protobuf:"bytes,4,opt,name=prepaymentSettings,proto3" json:"prepaymentSettings,omitempty"`
	PrincipalPaymentSettings        *LoanProduct_PaymentSettings_PrincipalPaymentSettings `protobuf:"bytes,5,opt,name=principalPaymentSettings,proto3" json:"principalPaymentSettings,omitempty"`
	RepaymentAllocationOrder        []string                                              `protobuf:"bytes,6,rep,name=repaymentAllocationOrder,proto3" json:"repaymentAllocationOrder,omitempty"`
}

func (x *LoanProduct_PaymentSettings) Reset() {
	*x = LoanProduct_PaymentSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_PaymentSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_PaymentSettings) ProtoMessage() {}

func (x *LoanProduct_PaymentSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_PaymentSettings.ProtoReflect.Descriptor instead.
func (*LoanProduct_PaymentSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 14}
}

func (x *LoanProduct_PaymentSettings) GetAmortizationMethod() string {
	if x != nil {
		return x.AmortizationMethod
	}
	return ""
}

func (x *LoanProduct_PaymentSettings) GetLatePaymentsRecalculationMethod() string {
	if x != nil {
		return x.LatePaymentsRecalculationMethod
	}
	return ""
}

func (x *LoanProduct_PaymentSettings) GetPaymentMethod() string {
	if x != nil {
		return x.PaymentMethod
	}
	return ""
}

func (x *LoanProduct_PaymentSettings) GetPrepaymentSettings() *LoanProduct_PaymentSettings_PrepaymentSettings {
	if x != nil {
		return x.PrepaymentSettings
	}
	return nil
}

func (x *LoanProduct_PaymentSettings) GetPrincipalPaymentSettings() *LoanProduct_PaymentSettings_PrincipalPaymentSettings {
	if x != nil {
		return x.PrincipalPaymentSettings
	}
	return nil
}

func (x *LoanProduct_PaymentSettings) GetRepaymentAllocationOrder() []string {
	if x != nil {
		return x.RepaymentAllocationOrder
	}
	return nil
}

type LoanProduct_PenaltySettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoanPenaltyCalculationMethod string                                   `protobuf:"bytes,1,opt,name=loanPenaltyCalculationMethod,proto3" json:"loanPenaltyCalculationMethod,omitempty"`
	LoanPenaltyGracePeriod       float64                                  `protobuf:"fixed64,2,opt,name=loanPenaltyGracePeriod,proto3" json:"loanPenaltyGracePeriod,omitempty"`
	PenaltyRate                  *LoanProduct_PenaltySettings_PenaltyRate `protobuf:"bytes,3,opt,name=penaltyRate,proto3" json:"penaltyRate,omitempty"`
}

func (x *LoanProduct_PenaltySettings) Reset() {
	*x = LoanProduct_PenaltySettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_PenaltySettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_PenaltySettings) ProtoMessage() {}

func (x *LoanProduct_PenaltySettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_PenaltySettings.ProtoReflect.Descriptor instead.
func (*LoanProduct_PenaltySettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 15}
}

func (x *LoanProduct_PenaltySettings) GetLoanPenaltyCalculationMethod() string {
	if x != nil {
		return x.LoanPenaltyCalculationMethod
	}
	return ""
}

func (x *LoanProduct_PenaltySettings) GetLoanPenaltyGracePeriod() float64 {
	if x != nil {
		return x.LoanPenaltyGracePeriod
	}
	return 0
}

func (x *LoanProduct_PenaltySettings) GetPenaltyRate() *LoanProduct_PenaltySettings_PenaltyRate {
	if x != nil {
		return x.PenaltyRate
	}
	return nil
}

type LoanProduct_RedrawSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowRedraw bool `protobuf:"varint,1,opt,name=allowRedraw,proto3" json:"allowRedraw,omitempty"`
}

func (x *LoanProduct_RedrawSettings) Reset() {
	*x = LoanProduct_RedrawSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_RedrawSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_RedrawSettings) ProtoMessage() {}

func (x *LoanProduct_RedrawSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_RedrawSettings.ProtoReflect.Descriptor instead.
func (*LoanProduct_RedrawSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 16}
}

func (x *LoanProduct_RedrawSettings) GetAllowRedraw() bool {
	if x != nil {
		return x.AllowRedraw
	}
	return false
}

type LoanProduct_ScheduleSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BillingCycles                *LoanProduct_ScheduleSettings_BillingCycles               `protobuf:"bytes,1,opt,name=billingCycles,proto3" json:"billingCycles,omitempty"`
	DefaultRepaymentPeriodCount  float64                                                   `protobuf:"fixed64,2,opt,name=defaultRepaymentPeriodCount,proto3" json:"defaultRepaymentPeriodCount,omitempty"`
	FirstRepaymentDueDateOffset  *LoanProduct_ScheduleSettings_FirstRepaymentDueDateOffset `protobuf:"bytes,3,opt,name=firstRepaymentDueDateOffset,proto3" json:"firstRepaymentDueDateOffset,omitempty"`
	FixedDaysOfMonth             []int64                                                   `protobuf:"varint,4,rep,packed,name=fixedDaysOfMonth,proto3" json:"fixedDaysOfMonth,omitempty"`
	InterestAccrualSince         string                                                    `protobuf:"bytes,5,opt,name=interestAccrualSince,proto3" json:"interestAccrualSince,omitempty"`
	NumInstallments              *LoanProduct_ScheduleSettings_NumInstallments             `protobuf:"bytes,6,opt,name=numInstallments,proto3" json:"numInstallments,omitempty"`
	PreviewSchedule              *LoanProduct_ScheduleSettings_PreviewSchedule             `protobuf:"bytes,7,opt,name=previewSchedule,proto3" json:"previewSchedule,omitempty"`
	RepaymentMethod              string                                                    `protobuf:"bytes,8,opt,name=repaymentMethod,proto3" json:"repaymentMethod,omitempty"`
	RepaymentPeriodUnit          string                                                    `protobuf:"bytes,9,opt,name=repaymentPeriodUnit,proto3" json:"repaymentPeriodUnit,omitempty"`
	RepaymentReschedulingMethod  string                                                    `protobuf:"bytes,10,opt,name=repaymentReschedulingMethod,proto3" json:"repaymentReschedulingMethod,omitempty"`
	RepaymentScheduleEditOptions []string                                                  `protobuf:"bytes,11,rep,name=repaymentScheduleEditOptions,proto3" json:"repaymentScheduleEditOptions,omitempty"`
	RepaymentScheduleMethod      string                                                    `protobuf:"bytes,12,opt,name=repaymentScheduleMethod,proto3" json:"repaymentScheduleMethod,omitempty"`
	RoundingSettings             *LoanProduct_ScheduleSettings_RoundingSettings            `protobuf:"bytes,13,opt,name=roundingSettings,proto3" json:"roundingSettings,omitempty"`
	ScheduleDueDatesMethod       string                                                    `protobuf:"bytes,14,opt,name=scheduleDueDatesMethod,proto3" json:"scheduleDueDatesMethod,omitempty"`
	ShortMonthHandlingMethod     string                                                    `protobuf:"bytes,15,opt,name=shortMonthHandlingMethod,proto3" json:"shortMonthHandlingMethod,omitempty"`
}

func (x *LoanProduct_ScheduleSettings) Reset() {
	*x = LoanProduct_ScheduleSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_ScheduleSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_ScheduleSettings) ProtoMessage() {}

func (x *LoanProduct_ScheduleSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_ScheduleSettings.ProtoReflect.Descriptor instead.
func (*LoanProduct_ScheduleSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 17}
}

func (x *LoanProduct_ScheduleSettings) GetBillingCycles() *LoanProduct_ScheduleSettings_BillingCycles {
	if x != nil {
		return x.BillingCycles
	}
	return nil
}

func (x *LoanProduct_ScheduleSettings) GetDefaultRepaymentPeriodCount() float64 {
	if x != nil {
		return x.DefaultRepaymentPeriodCount
	}
	return 0
}

func (x *LoanProduct_ScheduleSettings) GetFirstRepaymentDueDateOffset() *LoanProduct_ScheduleSettings_FirstRepaymentDueDateOffset {
	if x != nil {
		return x.FirstRepaymentDueDateOffset
	}
	return nil
}

func (x *LoanProduct_ScheduleSettings) GetFixedDaysOfMonth() []int64 {
	if x != nil {
		return x.FixedDaysOfMonth
	}
	return nil
}

func (x *LoanProduct_ScheduleSettings) GetInterestAccrualSince() string {
	if x != nil {
		return x.InterestAccrualSince
	}
	return ""
}

func (x *LoanProduct_ScheduleSettings) GetNumInstallments() *LoanProduct_ScheduleSettings_NumInstallments {
	if x != nil {
		return x.NumInstallments
	}
	return nil
}

func (x *LoanProduct_ScheduleSettings) GetPreviewSchedule() *LoanProduct_ScheduleSettings_PreviewSchedule {
	if x != nil {
		return x.PreviewSchedule
	}
	return nil
}

func (x *LoanProduct_ScheduleSettings) GetRepaymentMethod() string {
	if x != nil {
		return x.RepaymentMethod
	}
	return ""
}

func (x *LoanProduct_ScheduleSettings) GetRepaymentPeriodUnit() string {
	if x != nil {
		return x.RepaymentPeriodUnit
	}
	return ""
}

func (x *LoanProduct_ScheduleSettings) GetRepaymentReschedulingMethod() string {
	if x != nil {
		return x.RepaymentReschedulingMethod
	}
	return ""
}

func (x *LoanProduct_ScheduleSettings) GetRepaymentScheduleEditOptions() []string {
	if x != nil {
		return x.RepaymentScheduleEditOptions
	}
	return nil
}

func (x *LoanProduct_ScheduleSettings) GetRepaymentScheduleMethod() string {
	if x != nil {
		return x.RepaymentScheduleMethod
	}
	return ""
}

func (x *LoanProduct_ScheduleSettings) GetRoundingSettings() *LoanProduct_ScheduleSettings_RoundingSettings {
	if x != nil {
		return x.RoundingSettings
	}
	return nil
}

func (x *LoanProduct_ScheduleSettings) GetScheduleDueDatesMethod() string {
	if x != nil {
		return x.ScheduleDueDatesMethod
	}
	return ""
}

func (x *LoanProduct_ScheduleSettings) GetShortMonthHandlingMethod() string {
	if x != nil {
		return x.ShortMonthHandlingMethod
	}
	return ""
}

type LoanProduct_SecuritySettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsCollateralEnabled bool   `protobuf:"varint,1,opt,name=isCollateralEnabled,proto3" json:"isCollateralEnabled,omitempty"`
	IsGuarantorsEnabled bool   `protobuf:"varint,2,opt,name=isGuarantorsEnabled,proto3" json:"isGuarantorsEnabled,omitempty"`
	RequiredGuaranties  uint32 `protobuf:"varint,3,opt,name=requiredGuaranties,proto3" json:"requiredGuaranties,omitempty"`
}

func (x *LoanProduct_SecuritySettings) Reset() {
	*x = LoanProduct_SecuritySettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_SecuritySettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_SecuritySettings) ProtoMessage() {}

func (x *LoanProduct_SecuritySettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_SecuritySettings.ProtoReflect.Descriptor instead.
func (*LoanProduct_SecuritySettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 18}
}

func (x *LoanProduct_SecuritySettings) GetIsCollateralEnabled() bool {
	if x != nil {
		return x.IsCollateralEnabled
	}
	return false
}

func (x *LoanProduct_SecuritySettings) GetIsGuarantorsEnabled() bool {
	if x != nil {
		return x.IsGuarantorsEnabled
	}
	return false
}

func (x *LoanProduct_SecuritySettings) GetRequiredGuaranties() uint32 {
	if x != nil {
		return x.RequiredGuaranties
	}
	return 0
}

type LoanProduct_TaxSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaxCalculationMethod   string `protobuf:"bytes,1,opt,name=taxCalculationMethod,proto3" json:"taxCalculationMethod,omitempty"`
	TaxSourceKey           string `protobuf:"bytes,2,opt,name=taxSourceKey,proto3" json:"taxSourceKey,omitempty"`
	TaxesOnFeesEnabled     bool   `protobuf:"varint,3,opt,name=taxesOnFeesEnabled,proto3" json:"taxesOnFeesEnabled,omitempty"`
	TaxesOnInterestEnabled bool   `protobuf:"varint,4,opt,name=taxesOnInterestEnabled,proto3" json:"taxesOnInterestEnabled,omitempty"`
	TaxesOnPenaltyEnabled  bool   `protobuf:"varint,5,opt,name=taxesOnPenaltyEnabled,proto3" json:"taxesOnPenaltyEnabled,omitempty"`
}

func (x *LoanProduct_TaxSettings) Reset() {
	*x = LoanProduct_TaxSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_TaxSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_TaxSettings) ProtoMessage() {}

func (x *LoanProduct_TaxSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_TaxSettings.ProtoReflect.Descriptor instead.
func (*LoanProduct_TaxSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 19}
}

func (x *LoanProduct_TaxSettings) GetTaxCalculationMethod() string {
	if x != nil {
		return x.TaxCalculationMethod
	}
	return ""
}

func (x *LoanProduct_TaxSettings) GetTaxSourceKey() string {
	if x != nil {
		return x.TaxSourceKey
	}
	return ""
}

func (x *LoanProduct_TaxSettings) GetTaxesOnFeesEnabled() bool {
	if x != nil {
		return x.TaxesOnFeesEnabled
	}
	return false
}

func (x *LoanProduct_TaxSettings) GetTaxesOnInterestEnabled() bool {
	if x != nil {
		return x.TaxesOnInterestEnabled
	}
	return false
}

func (x *LoanProduct_TaxSettings) GetTaxesOnPenaltyEnabled() bool {
	if x != nil {
		return x.TaxesOnPenaltyEnabled
	}
	return false
}

type LoanProduct_Templates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreationDate     string `protobuf:"bytes,1,opt,name=creationDate,proto3" json:"creationDate,omitempty"`
	EncodedKey       string `protobuf:"bytes,2,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	LastModifiedDate string `protobuf:"bytes,3,opt,name=lastModifiedDate,proto3" json:"lastModifiedDate,omitempty"`
	Name             string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Type             string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *LoanProduct_Templates) Reset() {
	*x = LoanProduct_Templates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_Templates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_Templates) ProtoMessage() {}

func (x *LoanProduct_Templates) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_Templates.ProtoReflect.Descriptor instead.
func (*LoanProduct_Templates) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 20}
}

func (x *LoanProduct_Templates) GetCreationDate() string {
	if x != nil {
		return x.CreationDate
	}
	return ""
}

func (x *LoanProduct_Templates) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *LoanProduct_Templates) GetLastModifiedDate() string {
	if x != nil {
		return x.LastModifiedDate
	}
	return ""
}

func (x *LoanProduct_Templates) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LoanProduct_Templates) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type LoanProduct_AccountingSettings_AccountingRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncodedKey            string `protobuf:"bytes,1,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	FinancialResource     string `protobuf:"bytes,2,opt,name=financialResource,proto3" json:"financialResource,omitempty"`
	GlAccountKey          string `protobuf:"bytes,3,opt,name=glAccountKey,proto3" json:"glAccountKey,omitempty"`
	TransactionChannelKey string `protobuf:"bytes,4,opt,name=transactionChannelKey,proto3" json:"transactionChannelKey,omitempty"`
}

func (x *LoanProduct_AccountingSettings_AccountingRules) Reset() {
	*x = LoanProduct_AccountingSettings_AccountingRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_AccountingSettings_AccountingRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_AccountingSettings_AccountingRules) ProtoMessage() {}

func (x *LoanProduct_AccountingSettings_AccountingRules) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_AccountingSettings_AccountingRules.ProtoReflect.Descriptor instead.
func (*LoanProduct_AccountingSettings_AccountingRules) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 1, 0}
}

func (x *LoanProduct_AccountingSettings_AccountingRules) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *LoanProduct_AccountingSettings_AccountingRules) GetFinancialResource() string {
	if x != nil {
		return x.FinancialResource
	}
	return ""
}

func (x *LoanProduct_AccountingSettings_AccountingRules) GetGlAccountKey() string {
	if x != nil {
		return x.GlAccountKey
	}
	return ""
}

func (x *LoanProduct_AccountingSettings_AccountingRules) GetTransactionChannelKey() string {
	if x != nil {
		return x.TransactionChannelKey
	}
	return ""
}

type LoanProduct_ArrearsSettings_TolerancePercentageOfOutstandingPrincipal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue float64 `protobuf:"fixed64,1,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	MaxValue     float64 `protobuf:"fixed64,2,opt,name=maxValue,proto3" json:"maxValue,omitempty"`
	MinValue     float64 `protobuf:"fixed64,3,opt,name=minValue,proto3" json:"minValue,omitempty"`
}

func (x *LoanProduct_ArrearsSettings_TolerancePercentageOfOutstandingPrincipal) Reset() {
	*x = LoanProduct_ArrearsSettings_TolerancePercentageOfOutstandingPrincipal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_ArrearsSettings_TolerancePercentageOfOutstandingPrincipal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_ArrearsSettings_TolerancePercentageOfOutstandingPrincipal) ProtoMessage() {}

func (x *LoanProduct_ArrearsSettings_TolerancePercentageOfOutstandingPrincipal) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_ArrearsSettings_TolerancePercentageOfOutstandingPrincipal.ProtoReflect.Descriptor instead.
func (*LoanProduct_ArrearsSettings_TolerancePercentageOfOutstandingPrincipal) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 2, 0}
}

func (x *LoanProduct_ArrearsSettings_TolerancePercentageOfOutstandingPrincipal) GetDefaultValue() float64 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *LoanProduct_ArrearsSettings_TolerancePercentageOfOutstandingPrincipal) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *LoanProduct_ArrearsSettings_TolerancePercentageOfOutstandingPrincipal) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

type LoanProduct_ArrearsSettings_TolerancePeriod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue uint32 `protobuf:"varint,1,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	EncodedKey   string `protobuf:"bytes,2,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	MaxValue     uint32 `protobuf:"varint,3,opt,name=maxValue,proto3" json:"maxValue,omitempty"`
	MinValue     uint32 `protobuf:"varint,4,opt,name=minValue,proto3" json:"minValue,omitempty"`
}

func (x *LoanProduct_ArrearsSettings_TolerancePeriod) Reset() {
	*x = LoanProduct_ArrearsSettings_TolerancePeriod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_ArrearsSettings_TolerancePeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_ArrearsSettings_TolerancePeriod) ProtoMessage() {}

func (x *LoanProduct_ArrearsSettings_TolerancePeriod) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_ArrearsSettings_TolerancePeriod.ProtoReflect.Descriptor instead.
func (*LoanProduct_ArrearsSettings_TolerancePeriod) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 2, 1}
}

func (x *LoanProduct_ArrearsSettings_TolerancePeriod) GetDefaultValue() uint32 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *LoanProduct_ArrearsSettings_TolerancePeriod) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *LoanProduct_ArrearsSettings_TolerancePeriod) GetMaxValue() uint32 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *LoanProduct_ArrearsSettings_TolerancePeriod) GetMinValue() uint32 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

type LoanProduct_AvailabilitySettings_BranchSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableProductBranches []string `protobuf:"bytes,1,rep,name=availableProductBranches,proto3" json:"availableProductBranches,omitempty"`
	ForAllBranches           bool     `protobuf:"varint,2,opt,name=forAllBranches,proto3" json:"forAllBranches,omitempty"`
}

func (x *LoanProduct_AvailabilitySettings_BranchSettings) Reset() {
	*x = LoanProduct_AvailabilitySettings_BranchSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_AvailabilitySettings_BranchSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_AvailabilitySettings_BranchSettings) ProtoMessage() {}

func (x *LoanProduct_AvailabilitySettings_BranchSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_AvailabilitySettings_BranchSettings.ProtoReflect.Descriptor instead.
func (*LoanProduct_AvailabilitySettings_BranchSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 3, 0}
}

func (x *LoanProduct_AvailabilitySettings_BranchSettings) GetAvailableProductBranches() []string {
	if x != nil {
		return x.AvailableProductBranches
	}
	return nil
}

func (x *LoanProduct_AvailabilitySettings_BranchSettings) GetForAllBranches() bool {
	if x != nil {
		return x.ForAllBranches
	}
	return false
}

type LoanProduct_FeesSettings_Fees struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountingRules               []*LoanProduct_FeesSettings_Fees_AccountingRules    `protobuf:"bytes,1,rep,name=accountingRules,proto3" json:"accountingRules,omitempty"`
	AmortizationSettings          *LoanProduct_FeesSettings_Fees_AmortizationSettings `protobuf:"bytes,2,opt,name=amortizationSettings,proto3" json:"amortizationSettings,omitempty"`
	Amount                        float64                                             `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	AmountCalculationFunctionName string                                              `protobuf:"bytes,4,opt,name=amountCalculationFunctionName,proto3" json:"amountCalculationFunctionName,omitempty"`
	AmountCalculationMethod       string                                              `protobuf:"bytes,5,opt,name=amountCalculationMethod,proto3" json:"amountCalculationMethod,omitempty"`
	ApplyDateMethod               string                                              `protobuf:"bytes,6,opt,name=applyDateMethod,proto3" json:"applyDateMethod,omitempty"`
	CreationDate                  string                                              `protobuf:"bytes,7,opt,name=creationDate,proto3" json:"creationDate,omitempty"`
	EncodedKey                    string                                              `protobuf:"bytes,8,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	FeeApplication                string                                              `protobuf:"bytes,9,opt,name=feeApplication,proto3" json:"feeApplication,omitempty"`
	Id                            string                                              `protobuf:"bytes,10,opt,name=id,proto3" json:"id,omitempty"`
	LastModifiedDate              string                                              `protobuf:"bytes,11,opt,name=lastModifiedDate,proto3" json:"lastModifiedDate,omitempty"`
	Name                          string                                              `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	PercentageAmount              float64                                             `protobuf:"fixed64,13,opt,name=percentageAmount,proto3" json:"percentageAmount,omitempty"`
	State                         string                                              `protobuf:"bytes,14,opt,name=state,proto3" json:"state,omitempty"`
	TaxSettings                   *LoanProduct_FeesSettings_Fees_TaxSettings          `protobuf:"bytes,15,opt,name=taxSettings,proto3" json:"taxSettings,omitempty"`
	Trigger                       string                                              `protobuf:"bytes,16,opt,name=trigger,proto3" json:"trigger,omitempty"`
}

func (x *LoanProduct_FeesSettings_Fees) Reset() {
	*x = LoanProduct_FeesSettings_Fees{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_FeesSettings_Fees) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_FeesSettings_Fees) ProtoMessage() {}

func (x *LoanProduct_FeesSettings_Fees) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_FeesSettings_Fees.ProtoReflect.Descriptor instead.
func (*LoanProduct_FeesSettings_Fees) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 6, 0}
}

func (x *LoanProduct_FeesSettings_Fees) GetAccountingRules() []*LoanProduct_FeesSettings_Fees_AccountingRules {
	if x != nil {
		return x.AccountingRules
	}
	return nil
}

func (x *LoanProduct_FeesSettings_Fees) GetAmortizationSettings() *LoanProduct_FeesSettings_Fees_AmortizationSettings {
	if x != nil {
		return x.AmortizationSettings
	}
	return nil
}

func (x *LoanProduct_FeesSettings_Fees) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *LoanProduct_FeesSettings_Fees) GetAmountCalculationFunctionName() string {
	if x != nil {
		return x.AmountCalculationFunctionName
	}
	return ""
}

func (x *LoanProduct_FeesSettings_Fees) GetAmountCalculationMethod() string {
	if x != nil {
		return x.AmountCalculationMethod
	}
	return ""
}

func (x *LoanProduct_FeesSettings_Fees) GetApplyDateMethod() string {
	if x != nil {
		return x.ApplyDateMethod
	}
	return ""
}

func (x *LoanProduct_FeesSettings_Fees) GetCreationDate() string {
	if x != nil {
		return x.CreationDate
	}
	return ""
}

func (x *LoanProduct_FeesSettings_Fees) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *LoanProduct_FeesSettings_Fees) GetFeeApplication() string {
	if x != nil {
		return x.FeeApplication
	}
	return ""
}

func (x *LoanProduct_FeesSettings_Fees) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LoanProduct_FeesSettings_Fees) GetLastModifiedDate() string {
	if x != nil {
		return x.LastModifiedDate
	}
	return ""
}

func (x *LoanProduct_FeesSettings_Fees) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LoanProduct_FeesSettings_Fees) GetPercentageAmount() float64 {
	if x != nil {
		return x.PercentageAmount
	}
	return 0
}

func (x *LoanProduct_FeesSettings_Fees) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *LoanProduct_FeesSettings_Fees) GetTaxSettings() *LoanProduct_FeesSettings_Fees_TaxSettings {
	if x != nil {
		return x.TaxSettings
	}
	return nil
}

func (x *LoanProduct_FeesSettings_Fees) GetTrigger() string {
	if x != nil {
		return x.Trigger
	}
	return ""
}

type LoanProduct_FeesSettings_Fees_AccountingRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncodedKey            string `protobuf:"bytes,1,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	FinancialResource     string `protobuf:"bytes,2,opt,name=financialResource,proto3" json:"financialResource,omitempty"`
	GlAccountKey          string `protobuf:"bytes,3,opt,name=glAccountKey,proto3" json:"glAccountKey,omitempty"`
	TransactionChannelKey string `protobuf:"bytes,4,opt,name=transactionChannelKey,proto3" json:"transactionChannelKey,omitempty"`
}

func (x *LoanProduct_FeesSettings_Fees_AccountingRules) Reset() {
	*x = LoanProduct_FeesSettings_Fees_AccountingRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_FeesSettings_Fees_AccountingRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_FeesSettings_Fees_AccountingRules) ProtoMessage() {}

func (x *LoanProduct_FeesSettings_Fees_AccountingRules) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_FeesSettings_Fees_AccountingRules.ProtoReflect.Descriptor instead.
func (*LoanProduct_FeesSettings_Fees_AccountingRules) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 6, 0, 0}
}

func (x *LoanProduct_FeesSettings_Fees_AccountingRules) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *LoanProduct_FeesSettings_Fees_AccountingRules) GetFinancialResource() string {
	if x != nil {
		return x.FinancialResource
	}
	return ""
}

func (x *LoanProduct_FeesSettings_Fees_AccountingRules) GetGlAccountKey() string {
	if x != nil {
		return x.GlAccountKey
	}
	return ""
}

func (x *LoanProduct_FeesSettings_Fees_AccountingRules) GetTransactionChannelKey() string {
	if x != nil {
		return x.TransactionChannelKey
	}
	return ""
}

type LoanProduct_FeesSettings_Fees_AmortizationSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AmortizationProfile                          string `protobuf:"bytes,1,opt,name=amortizationProfile,proto3" json:"amortizationProfile,omitempty"`
	EncodedKey                                   string `protobuf:"bytes,2,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	FeeAmortizationUponRescheduleRefinanceOption string `protobuf:"bytes,3,opt,name=feeAmortizationUponRescheduleRefinanceOption,proto3" json:"feeAmortizationUponRescheduleRefinanceOption,omitempty"`
	Frequency                                    string `protobuf:"bytes,4,opt,name=frequency,proto3" json:"frequency,omitempty"`
	IntervalCount                                uint32 `protobuf:"varint,5,opt,name=intervalCount,proto3" json:"intervalCount,omitempty"`
	IntervalType                                 string `protobuf:"bytes,6,opt,name=intervalType,proto3" json:"intervalType,omitempty"`
	PeriodCount                                  uint32 `protobuf:"varint,7,opt,name=periodCount,proto3" json:"periodCount,omitempty"`
	PeriodUnit                                   string `protobuf:"bytes,8,opt,name=periodUnit,proto3" json:"periodUnit,omitempty"`
}

func (x *LoanProduct_FeesSettings_Fees_AmortizationSettings) Reset() {
	*x = LoanProduct_FeesSettings_Fees_AmortizationSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_FeesSettings_Fees_AmortizationSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_FeesSettings_Fees_AmortizationSettings) ProtoMessage() {}

func (x *LoanProduct_FeesSettings_Fees_AmortizationSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_FeesSettings_Fees_AmortizationSettings.ProtoReflect.Descriptor instead.
func (*LoanProduct_FeesSettings_Fees_AmortizationSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 6, 0, 1}
}

func (x *LoanProduct_FeesSettings_Fees_AmortizationSettings) GetAmortizationProfile() string {
	if x != nil {
		return x.AmortizationProfile
	}
	return ""
}

func (x *LoanProduct_FeesSettings_Fees_AmortizationSettings) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *LoanProduct_FeesSettings_Fees_AmortizationSettings) GetFeeAmortizationUponRescheduleRefinanceOption() string {
	if x != nil {
		return x.FeeAmortizationUponRescheduleRefinanceOption
	}
	return ""
}

func (x *LoanProduct_FeesSettings_Fees_AmortizationSettings) GetFrequency() string {
	if x != nil {
		return x.Frequency
	}
	return ""
}

func (x *LoanProduct_FeesSettings_Fees_AmortizationSettings) GetIntervalCount() uint32 {
	if x != nil {
		return x.IntervalCount
	}
	return 0
}

func (x *LoanProduct_FeesSettings_Fees_AmortizationSettings) GetIntervalType() string {
	if x != nil {
		return x.IntervalType
	}
	return ""
}

func (x *LoanProduct_FeesSettings_Fees_AmortizationSettings) GetPeriodCount() uint32 {
	if x != nil {
		return x.PeriodCount
	}
	return 0
}

func (x *LoanProduct_FeesSettings_Fees_AmortizationSettings) GetPeriodUnit() string {
	if x != nil {
		return x.PeriodUnit
	}
	return ""
}

type LoanProduct_FeesSettings_Fees_TaxSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaxableCalculationMethod string `protobuf:"bytes,1,opt,name=taxableCalculationMethod,proto3" json:"taxableCalculationMethod,omitempty"`
}

func (x *LoanProduct_FeesSettings_Fees_TaxSettings) Reset() {
	*x = LoanProduct_FeesSettings_Fees_TaxSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_FeesSettings_Fees_TaxSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_FeesSettings_Fees_TaxSettings) ProtoMessage() {}

func (x *LoanProduct_FeesSettings_Fees_TaxSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_FeesSettings_Fees_TaxSettings.ProtoReflect.Descriptor instead.
func (*LoanProduct_FeesSettings_Fees_TaxSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 6, 0, 2}
}

func (x *LoanProduct_FeesSettings_Fees_TaxSettings) GetTaxableCalculationMethod() string {
	if x != nil {
		return x.TaxableCalculationMethod
	}
	return ""
}

type LoanProduct_FundingSettings_FunderInterestCommission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue float64 `protobuf:"fixed64,1,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	EncodedKey   string  `protobuf:"bytes,2,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	MaxValue     float64 `protobuf:"fixed64,3,opt,name=maxValue,proto3" json:"maxValue,omitempty"`
	MinValue     float64 `protobuf:"fixed64,4,opt,name=minValue,proto3" json:"minValue,omitempty"`
}

func (x *LoanProduct_FundingSettings_FunderInterestCommission) Reset() {
	*x = LoanProduct_FundingSettings_FunderInterestCommission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_FundingSettings_FunderInterestCommission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_FundingSettings_FunderInterestCommission) ProtoMessage() {}

func (x *LoanProduct_FundingSettings_FunderInterestCommission) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_FundingSettings_FunderInterestCommission.ProtoReflect.Descriptor instead.
func (*LoanProduct_FundingSettings_FunderInterestCommission) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 7, 0}
}

func (x *LoanProduct_FundingSettings_FunderInterestCommission) GetDefaultValue() float64 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *LoanProduct_FundingSettings_FunderInterestCommission) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *LoanProduct_FundingSettings_FunderInterestCommission) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *LoanProduct_FundingSettings_FunderInterestCommission) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

type LoanProduct_FundingSettings_OrganizationInterestCommission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue float64 `protobuf:"fixed64,1,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	EncodedKey   string  `protobuf:"bytes,2,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	MaxValue     float64 `protobuf:"fixed64,3,opt,name=maxValue,proto3" json:"maxValue,omitempty"`
	MinValue     float64 `protobuf:"fixed64,4,opt,name=minValue,proto3" json:"minValue,omitempty"`
}

func (x *LoanProduct_FundingSettings_OrganizationInterestCommission) Reset() {
	*x = LoanProduct_FundingSettings_OrganizationInterestCommission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_FundingSettings_OrganizationInterestCommission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_FundingSettings_OrganizationInterestCommission) ProtoMessage() {}

func (x *LoanProduct_FundingSettings_OrganizationInterestCommission) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_FundingSettings_OrganizationInterestCommission.ProtoReflect.Descriptor instead.
func (*LoanProduct_FundingSettings_OrganizationInterestCommission) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 7, 1}
}

func (x *LoanProduct_FundingSettings_OrganizationInterestCommission) GetDefaultValue() float64 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *LoanProduct_FundingSettings_OrganizationInterestCommission) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *LoanProduct_FundingSettings_OrganizationInterestCommission) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *LoanProduct_FundingSettings_OrganizationInterestCommission) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

type LoanProduct_GracePeriodSettings_GracePeriod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue float64 `protobuf:"fixed64,1,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	EncodedKey   string  `protobuf:"bytes,2,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	MaxValue     float64 `protobuf:"fixed64,3,opt,name=maxValue,proto3" json:"maxValue,omitempty"`
	MinValue     float64 `protobuf:"fixed64,4,opt,name=minValue,proto3" json:"minValue,omitempty"`
}

func (x *LoanProduct_GracePeriodSettings_GracePeriod) Reset() {
	*x = LoanProduct_GracePeriodSettings_GracePeriod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_GracePeriodSettings_GracePeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_GracePeriodSettings_GracePeriod) ProtoMessage() {}

func (x *LoanProduct_GracePeriodSettings_GracePeriod) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_GracePeriodSettings_GracePeriod.ProtoReflect.Descriptor instead.
func (*LoanProduct_GracePeriodSettings_GracePeriod) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 8, 0}
}

func (x *LoanProduct_GracePeriodSettings_GracePeriod) GetDefaultValue() float64 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *LoanProduct_GracePeriodSettings_GracePeriod) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *LoanProduct_GracePeriodSettings_GracePeriod) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *LoanProduct_GracePeriodSettings_GracePeriod) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

type LoanProduct_InterestSettings_IndexRateSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccrueInterestAfterMaturity  bool                                                                `protobuf:"varint,1,opt,name=accrueInterestAfterMaturity,proto3" json:"accrueInterestAfterMaturity,omitempty"`
	AllowNegativeInterestRate    bool                                                                `protobuf:"varint,2,opt,name=allowNegativeInterestRate,proto3" json:"allowNegativeInterestRate,omitempty"`
	EncodedKey                   string                                                              `protobuf:"bytes,3,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	IndexSourceKey               string                                                              `protobuf:"bytes,4,opt,name=indexSourceKey,proto3" json:"indexSourceKey,omitempty"`
	InterestChargeFrequency      string                                                              `protobuf:"bytes,5,opt,name=interestChargeFrequency,proto3" json:"interestChargeFrequency,omitempty"`
	InterestChargeFrequencyCount float64                                                             `protobuf:"fixed64,6,opt,name=interestChargeFrequencyCount,proto3" json:"interestChargeFrequencyCount,omitempty"`
	InterestRate                 *LoanProduct_InterestSettings_IndexRateSettings_InterestRate        `protobuf:"bytes,7,opt,name=interestRate,proto3" json:"interestRate,omitempty"`
	InterestRateCeilingValue     float64                                                             `protobuf:"fixed64,8,opt,name=interestRateCeilingValue,proto3" json:"interestRateCeilingValue,omitempty"`
	InterestRateFloorValue       float64                                                             `protobuf:"fixed64,9,opt,name=interestRateFloorValue,proto3" json:"interestRateFloorValue,omitempty"`
	InterestRateReviewCount      float64                                                             `protobuf:"fixed64,10,opt,name=interestRateReviewCount,proto3" json:"interestRateReviewCount,omitempty"`
	InterestRateReviewUnit       string                                                              `protobuf:"bytes,11,opt,name=interestRateReviewUnit,proto3" json:"interestRateReviewUnit,omitempty"`
	InterestRateSource           string                                                              `protobuf:"bytes,12,opt,name=interestRateSource,proto3" json:"interestRateSource,omitempty"`
	InterestRateTerms            string                                                              `protobuf:"bytes,13,opt,name=interestRateTerms,proto3" json:"interestRateTerms,omitempty"`
	InterestRateTiers            []*LoanProduct_InterestSettings_IndexRateSettings_InterestRateTiers `protobuf:"bytes,14,rep,name=interestRateTiers,proto3" json:"interestRateTiers,omitempty"`
}

func (x *LoanProduct_InterestSettings_IndexRateSettings) Reset() {
	*x = LoanProduct_InterestSettings_IndexRateSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_InterestSettings_IndexRateSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_InterestSettings_IndexRateSettings) ProtoMessage() {}

func (x *LoanProduct_InterestSettings_IndexRateSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_InterestSettings_IndexRateSettings.ProtoReflect.Descriptor instead.
func (*LoanProduct_InterestSettings_IndexRateSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 9, 0}
}

func (x *LoanProduct_InterestSettings_IndexRateSettings) GetAccrueInterestAfterMaturity() bool {
	if x != nil {
		return x.AccrueInterestAfterMaturity
	}
	return false
}

func (x *LoanProduct_InterestSettings_IndexRateSettings) GetAllowNegativeInterestRate() bool {
	if x != nil {
		return x.AllowNegativeInterestRate
	}
	return false
}

func (x *LoanProduct_InterestSettings_IndexRateSettings) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *LoanProduct_InterestSettings_IndexRateSettings) GetIndexSourceKey() string {
	if x != nil {
		return x.IndexSourceKey
	}
	return ""
}

func (x *LoanProduct_InterestSettings_IndexRateSettings) GetInterestChargeFrequency() string {
	if x != nil {
		return x.InterestChargeFrequency
	}
	return ""
}

func (x *LoanProduct_InterestSettings_IndexRateSettings) GetInterestChargeFrequencyCount() float64 {
	if x != nil {
		return x.InterestChargeFrequencyCount
	}
	return 0
}

func (x *LoanProduct_InterestSettings_IndexRateSettings) GetInterestRate() *LoanProduct_InterestSettings_IndexRateSettings_InterestRate {
	if x != nil {
		return x.InterestRate
	}
	return nil
}

func (x *LoanProduct_InterestSettings_IndexRateSettings) GetInterestRateCeilingValue() float64 {
	if x != nil {
		return x.InterestRateCeilingValue
	}
	return 0
}

func (x *LoanProduct_InterestSettings_IndexRateSettings) GetInterestRateFloorValue() float64 {
	if x != nil {
		return x.InterestRateFloorValue
	}
	return 0
}

func (x *LoanProduct_InterestSettings_IndexRateSettings) GetInterestRateReviewCount() float64 {
	if x != nil {
		return x.InterestRateReviewCount
	}
	return 0
}

func (x *LoanProduct_InterestSettings_IndexRateSettings) GetInterestRateReviewUnit() string {
	if x != nil {
		return x.InterestRateReviewUnit
	}
	return ""
}

func (x *LoanProduct_InterestSettings_IndexRateSettings) GetInterestRateSource() string {
	if x != nil {
		return x.InterestRateSource
	}
	return ""
}

func (x *LoanProduct_InterestSettings_IndexRateSettings) GetInterestRateTerms() string {
	if x != nil {
		return x.InterestRateTerms
	}
	return ""
}

func (x *LoanProduct_InterestSettings_IndexRateSettings) GetInterestRateTiers() []*LoanProduct_InterestSettings_IndexRateSettings_InterestRateTiers {
	if x != nil {
		return x.InterestRateTiers
	}
	return nil
}

type LoanProduct_InterestSettings_InterestRateSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncodedKey               string                                                          `protobuf:"bytes,1,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	IndexSourceKey           string                                                          `protobuf:"bytes,2,opt,name=indexSourceKey,proto3" json:"indexSourceKey,omitempty"`
	InterestRate             *LoanProduct_InterestSettings_InterestRateSettings_InterestRate `protobuf:"bytes,3,opt,name=interestRate,proto3" json:"interestRate,omitempty"`
	InterestRateCeilingValue float64                                                         `protobuf:"fixed64,4,opt,name=interestRateCeilingValue,proto3" json:"interestRateCeilingValue,omitempty"`
	InterestRateFloorValue   float64                                                         `protobuf:"fixed64,5,opt,name=interestRateFloorValue,proto3" json:"interestRateFloorValue,omitempty"`
	InterestRateReviewCount  float64                                                         `protobuf:"fixed64,6,opt,name=interestRateReviewCount,proto3" json:"interestRateReviewCount,omitempty"`
	InterestRateReviewUnit   string                                                          `protobuf:"bytes,7,opt,name=interestRateReviewUnit,proto3" json:"interestRateReviewUnit,omitempty"`
	InterestRateSource       string                                                          `protobuf:"bytes,8,opt,name=interestRateSource,proto3" json:"interestRateSource,omitempty"`
}

func (x *LoanProduct_InterestSettings_InterestRateSettings) Reset() {
	*x = LoanProduct_InterestSettings_InterestRateSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_InterestSettings_InterestRateSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_InterestSettings_InterestRateSettings) ProtoMessage() {}

func (x *LoanProduct_InterestSettings_InterestRateSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_InterestSettings_InterestRateSettings.ProtoReflect.Descriptor instead.
func (*LoanProduct_InterestSettings_InterestRateSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 9, 1}
}

func (x *LoanProduct_InterestSettings_InterestRateSettings) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *LoanProduct_InterestSettings_InterestRateSettings) GetIndexSourceKey() string {
	if x != nil {
		return x.IndexSourceKey
	}
	return ""
}

func (x *LoanProduct_InterestSettings_InterestRateSettings) GetInterestRate() *LoanProduct_InterestSettings_InterestRateSettings_InterestRate {
	if x != nil {
		return x.InterestRate
	}
	return nil
}

func (x *LoanProduct_InterestSettings_InterestRateSettings) GetInterestRateCeilingValue() float64 {
	if x != nil {
		return x.InterestRateCeilingValue
	}
	return 0
}

func (x *LoanProduct_InterestSettings_InterestRateSettings) GetInterestRateFloorValue() float64 {
	if x != nil {
		return x.InterestRateFloorValue
	}
	return 0
}

func (x *LoanProduct_InterestSettings_InterestRateSettings) GetInterestRateReviewCount() float64 {
	if x != nil {
		return x.InterestRateReviewCount
	}
	return 0
}

func (x *LoanProduct_InterestSettings_InterestRateSettings) GetInterestRateReviewUnit() string {
	if x != nil {
		return x.InterestRateReviewUnit
	}
	return ""
}

func (x *LoanProduct_InterestSettings_InterestRateSettings) GetInterestRateSource() string {
	if x != nil {
		return x.InterestRateSource
	}
	return ""
}

type LoanProduct_InterestSettings_IndexRateSettings_InterestRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue float64 `protobuf:"fixed64,1,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	MaxValue     float64 `protobuf:"fixed64,2,opt,name=maxValue,proto3" json:"maxValue,omitempty"`
	MinValue     float64 `protobuf:"fixed64,3,opt,name=minValue,proto3" json:"minValue,omitempty"`
}

func (x *LoanProduct_InterestSettings_IndexRateSettings_InterestRate) Reset() {
	*x = LoanProduct_InterestSettings_IndexRateSettings_InterestRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_InterestSettings_IndexRateSettings_InterestRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_InterestSettings_IndexRateSettings_InterestRate) ProtoMessage() {}

func (x *LoanProduct_InterestSettings_IndexRateSettings_InterestRate) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_InterestSettings_IndexRateSettings_InterestRate.ProtoReflect.Descriptor instead.
func (*LoanProduct_InterestSettings_IndexRateSettings_InterestRate) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 9, 0, 0}
}

func (x *LoanProduct_InterestSettings_IndexRateSettings_InterestRate) GetDefaultValue() float64 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *LoanProduct_InterestSettings_IndexRateSettings_InterestRate) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *LoanProduct_InterestSettings_IndexRateSettings_InterestRate) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

type LoanProduct_InterestSettings_IndexRateSettings_InterestRateTiers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncodedKey    string  `protobuf:"bytes,1,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	EndingBalance float64 `protobuf:"fixed64,2,opt,name=endingBalance,proto3" json:"endingBalance,omitempty"`
	InterestRate  float64 `protobuf:"fixed64,3,opt,name=interestRate,proto3" json:"interestRate,omitempty"`
}

func (x *LoanProduct_InterestSettings_IndexRateSettings_InterestRateTiers) Reset() {
	*x = LoanProduct_InterestSettings_IndexRateSettings_InterestRateTiers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_InterestSettings_IndexRateSettings_InterestRateTiers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_InterestSettings_IndexRateSettings_InterestRateTiers) ProtoMessage() {}

func (x *LoanProduct_InterestSettings_IndexRateSettings_InterestRateTiers) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_InterestSettings_IndexRateSettings_InterestRateTiers.ProtoReflect.Descriptor instead.
func (*LoanProduct_InterestSettings_IndexRateSettings_InterestRateTiers) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 9, 0, 1}
}

func (x *LoanProduct_InterestSettings_IndexRateSettings_InterestRateTiers) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *LoanProduct_InterestSettings_IndexRateSettings_InterestRateTiers) GetEndingBalance() float64 {
	if x != nil {
		return x.EndingBalance
	}
	return 0
}

func (x *LoanProduct_InterestSettings_IndexRateSettings_InterestRateTiers) GetInterestRate() float64 {
	if x != nil {
		return x.InterestRate
	}
	return 0
}

type LoanProduct_InterestSettings_InterestRateSettings_InterestRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue float64 `protobuf:"fixed64,1,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	MaxValue     float64 `protobuf:"fixed64,2,opt,name=maxValue,proto3" json:"maxValue,omitempty"`
	MinValue     float64 `protobuf:"fixed64,3,opt,name=minValue,proto3" json:"minValue,omitempty"`
}

func (x *LoanProduct_InterestSettings_InterestRateSettings_InterestRate) Reset() {
	*x = LoanProduct_InterestSettings_InterestRateSettings_InterestRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_InterestSettings_InterestRateSettings_InterestRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_InterestSettings_InterestRateSettings_InterestRate) ProtoMessage() {}

func (x *LoanProduct_InterestSettings_InterestRateSettings_InterestRate) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_InterestSettings_InterestRateSettings_InterestRate.ProtoReflect.Descriptor instead.
func (*LoanProduct_InterestSettings_InterestRateSettings_InterestRate) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 9, 1, 0}
}

func (x *LoanProduct_InterestSettings_InterestRateSettings_InterestRate) GetDefaultValue() float64 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *LoanProduct_InterestSettings_InterestRateSettings_InterestRate) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *LoanProduct_InterestSettings_InterestRateSettings_InterestRate) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

type LoanProduct_InternalControls_FourEyesPrinciple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActiveForLoanApproval bool `protobuf:"varint,1,opt,name=activeForLoanApproval,proto3" json:"activeForLoanApproval,omitempty"`
}

func (x *LoanProduct_InternalControls_FourEyesPrinciple) Reset() {
	*x = LoanProduct_InternalControls_FourEyesPrinciple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_InternalControls_FourEyesPrinciple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_InternalControls_FourEyesPrinciple) ProtoMessage() {}

func (x *LoanProduct_InternalControls_FourEyesPrinciple) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_InternalControls_FourEyesPrinciple.ProtoReflect.Descriptor instead.
func (*LoanProduct_InternalControls_FourEyesPrinciple) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 10, 0}
}

func (x *LoanProduct_InternalControls_FourEyesPrinciple) GetActiveForLoanApproval() bool {
	if x != nil {
		return x.ActiveForLoanApproval
	}
	return false
}

type LoanProduct_InternalControls_LockSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CappingConstraintType string  `protobuf:"bytes,1,opt,name=cappingConstraintType,proto3" json:"cappingConstraintType,omitempty"`
	CappingMethod         string  `protobuf:"bytes,2,opt,name=cappingMethod,proto3" json:"cappingMethod,omitempty"`
	CappingPercentage     float64 `protobuf:"fixed64,3,opt,name=cappingPercentage,proto3" json:"cappingPercentage,omitempty"`
	LockPeriodDays        float64 `protobuf:"fixed64,4,opt,name=lockPeriodDays,proto3" json:"lockPeriodDays,omitempty"`
}

func (x *LoanProduct_InternalControls_LockSettings) Reset() {
	*x = LoanProduct_InternalControls_LockSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_InternalControls_LockSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_InternalControls_LockSettings) ProtoMessage() {}

func (x *LoanProduct_InternalControls_LockSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_InternalControls_LockSettings.ProtoReflect.Descriptor instead.
func (*LoanProduct_InternalControls_LockSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 10, 1}
}

func (x *LoanProduct_InternalControls_LockSettings) GetCappingConstraintType() string {
	if x != nil {
		return x.CappingConstraintType
	}
	return ""
}

func (x *LoanProduct_InternalControls_LockSettings) GetCappingMethod() string {
	if x != nil {
		return x.CappingMethod
	}
	return ""
}

func (x *LoanProduct_InternalControls_LockSettings) GetCappingPercentage() float64 {
	if x != nil {
		return x.CappingPercentage
	}
	return 0
}

func (x *LoanProduct_InternalControls_LockSettings) GetLockPeriodDays() float64 {
	if x != nil {
		return x.LockPeriodDays
	}
	return 0
}

type LoanProduct_LoanAmountSettings_LoanAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue float64 `protobuf:"fixed64,1,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	EncodedKey   string  `protobuf:"bytes,2,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	MaxValue     float64 `protobuf:"fixed64,3,opt,name=maxValue,proto3" json:"maxValue,omitempty"`
	MinValue     float64 `protobuf:"fixed64,4,opt,name=minValue,proto3" json:"minValue,omitempty"`
}

func (x *LoanProduct_LoanAmountSettings_LoanAmount) Reset() {
	*x = LoanProduct_LoanAmountSettings_LoanAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_LoanAmountSettings_LoanAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_LoanAmountSettings_LoanAmount) ProtoMessage() {}

func (x *LoanProduct_LoanAmountSettings_LoanAmount) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_LoanAmountSettings_LoanAmount.ProtoReflect.Descriptor instead.
func (*LoanProduct_LoanAmountSettings_LoanAmount) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 11, 0}
}

func (x *LoanProduct_LoanAmountSettings_LoanAmount) GetDefaultValue() float64 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *LoanProduct_LoanAmountSettings_LoanAmount) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *LoanProduct_LoanAmountSettings_LoanAmount) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *LoanProduct_LoanAmountSettings_LoanAmount) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

type LoanProduct_LoanAmountSettings_TrancheSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxNumberOfTranches float64 `protobuf:"fixed64,1,opt,name=maxNumberOfTranches,proto3" json:"maxNumberOfTranches,omitempty"`
}

func (x *LoanProduct_LoanAmountSettings_TrancheSettings) Reset() {
	*x = LoanProduct_LoanAmountSettings_TrancheSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_LoanAmountSettings_TrancheSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_LoanAmountSettings_TrancheSettings) ProtoMessage() {}

func (x *LoanProduct_LoanAmountSettings_TrancheSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_LoanAmountSettings_TrancheSettings.ProtoReflect.Descriptor instead.
func (*LoanProduct_LoanAmountSettings_TrancheSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 11, 1}
}

func (x *LoanProduct_LoanAmountSettings_TrancheSettings) GetMaxNumberOfTranches() float64 {
	if x != nil {
		return x.MaxNumberOfTranches
	}
	return 0
}

type LoanProduct_PaymentSettings_PrepaymentSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplyInterestOnPrepaymentMethod string `protobuf:"bytes,1,opt,name=applyInterestOnPrepaymentMethod,proto3" json:"applyInterestOnPrepaymentMethod,omitempty"`
	ElementsRecalculationMethod     string `protobuf:"bytes,2,opt,name=elementsRecalculationMethod,proto3" json:"elementsRecalculationMethod,omitempty"`
	FuturePaymentsAcceptance        string `protobuf:"bytes,3,opt,name=futurePaymentsAcceptance,proto3" json:"futurePaymentsAcceptance,omitempty"`
	PrepaymentAcceptance            string `protobuf:"bytes,4,opt,name=prepaymentAcceptance,proto3" json:"prepaymentAcceptance,omitempty"`
	PrepaymentRecalculationMethod   string `protobuf:"bytes,5,opt,name=prepaymentRecalculationMethod,proto3" json:"prepaymentRecalculationMethod,omitempty"`
	PrincipalPaidInstallmentStatus  string `protobuf:"bytes,6,opt,name=principalPaidInstallmentStatus,proto3" json:"principalPaidInstallmentStatus,omitempty"`
}

func (x *LoanProduct_PaymentSettings_PrepaymentSettings) Reset() {
	*x = LoanProduct_PaymentSettings_PrepaymentSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_PaymentSettings_PrepaymentSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_PaymentSettings_PrepaymentSettings) ProtoMessage() {}

func (x *LoanProduct_PaymentSettings_PrepaymentSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_PaymentSettings_PrepaymentSettings.ProtoReflect.Descriptor instead.
func (*LoanProduct_PaymentSettings_PrepaymentSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 14, 0}
}

func (x *LoanProduct_PaymentSettings_PrepaymentSettings) GetApplyInterestOnPrepaymentMethod() string {
	if x != nil {
		return x.ApplyInterestOnPrepaymentMethod
	}
	return ""
}

func (x *LoanProduct_PaymentSettings_PrepaymentSettings) GetElementsRecalculationMethod() string {
	if x != nil {
		return x.ElementsRecalculationMethod
	}
	return ""
}

func (x *LoanProduct_PaymentSettings_PrepaymentSettings) GetFuturePaymentsAcceptance() string {
	if x != nil {
		return x.FuturePaymentsAcceptance
	}
	return ""
}

func (x *LoanProduct_PaymentSettings_PrepaymentSettings) GetPrepaymentAcceptance() string {
	if x != nil {
		return x.PrepaymentAcceptance
	}
	return ""
}

func (x *LoanProduct_PaymentSettings_PrepaymentSettings) GetPrepaymentRecalculationMethod() string {
	if x != nil {
		return x.PrepaymentRecalculationMethod
	}
	return ""
}

func (x *LoanProduct_PaymentSettings_PrepaymentSettings) GetPrincipalPaidInstallmentStatus() string {
	if x != nil {
		return x.PrincipalPaidInstallmentStatus
	}
	return ""
}

type LoanProduct_PaymentSettings_PrincipalPaymentSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount                            *LoanProduct_PaymentSettings_PrincipalPaymentSettings_Amount     `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	DefaultPrincipalRepaymentInterval uint32                                                           `protobuf:"varint,2,opt,name=defaultPrincipalRepaymentInterval,proto3" json:"defaultPrincipalRepaymentInterval,omitempty"`
	EncodedKey                        string                                                           `protobuf:"bytes,3,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	IncludeFeesInFloorAmount          bool                                                             `protobuf:"varint,4,opt,name=includeFeesInFloorAmount,proto3" json:"includeFeesInFloorAmount,omitempty"`
	IncludeInterestInFloorAmount      bool                                                             `protobuf:"varint,5,opt,name=includeInterestInFloorAmount,proto3" json:"includeInterestInFloorAmount,omitempty"`
	Percentage                        *LoanProduct_PaymentSettings_PrincipalPaymentSettings_Percentage `protobuf:"bytes,6,opt,name=percentage,proto3" json:"percentage,omitempty"`
	PrincipalCeilingValue             float64                                                          `protobuf:"fixed64,7,opt,name=principalCeilingValue,proto3" json:"principalCeilingValue,omitempty"`
	PrincipalFloorValue               float64                                                          `protobuf:"fixed64,8,opt,name=principalFloorValue,proto3" json:"principalFloorValue,omitempty"`
	PrincipalPaymentMethod            string                                                           `protobuf:"bytes,9,opt,name=principalPaymentMethod,proto3" json:"principalPaymentMethod,omitempty"`
	TotalDueAmountFloor               float64                                                          `protobuf:"fixed64,10,opt,name=totalDueAmountFloor,proto3" json:"totalDueAmountFloor,omitempty"`
	TotalDuePayment                   string                                                           `protobuf:"bytes,11,opt,name=totalDuePayment,proto3" json:"totalDuePayment,omitempty"`
}

func (x *LoanProduct_PaymentSettings_PrincipalPaymentSettings) Reset() {
	*x = LoanProduct_PaymentSettings_PrincipalPaymentSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_PaymentSettings_PrincipalPaymentSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_PaymentSettings_PrincipalPaymentSettings) ProtoMessage() {}

func (x *LoanProduct_PaymentSettings_PrincipalPaymentSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_PaymentSettings_PrincipalPaymentSettings.ProtoReflect.Descriptor instead.
func (*LoanProduct_PaymentSettings_PrincipalPaymentSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 14, 1}
}

func (x *LoanProduct_PaymentSettings_PrincipalPaymentSettings) GetAmount() *LoanProduct_PaymentSettings_PrincipalPaymentSettings_Amount {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *LoanProduct_PaymentSettings_PrincipalPaymentSettings) GetDefaultPrincipalRepaymentInterval() uint32 {
	if x != nil {
		return x.DefaultPrincipalRepaymentInterval
	}
	return 0
}

func (x *LoanProduct_PaymentSettings_PrincipalPaymentSettings) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *LoanProduct_PaymentSettings_PrincipalPaymentSettings) GetIncludeFeesInFloorAmount() bool {
	if x != nil {
		return x.IncludeFeesInFloorAmount
	}
	return false
}

func (x *LoanProduct_PaymentSettings_PrincipalPaymentSettings) GetIncludeInterestInFloorAmount() bool {
	if x != nil {
		return x.IncludeInterestInFloorAmount
	}
	return false
}

func (x *LoanProduct_PaymentSettings_PrincipalPaymentSettings) GetPercentage() *LoanProduct_PaymentSettings_PrincipalPaymentSettings_Percentage {
	if x != nil {
		return x.Percentage
	}
	return nil
}

func (x *LoanProduct_PaymentSettings_PrincipalPaymentSettings) GetPrincipalCeilingValue() float64 {
	if x != nil {
		return x.PrincipalCeilingValue
	}
	return 0
}

func (x *LoanProduct_PaymentSettings_PrincipalPaymentSettings) GetPrincipalFloorValue() float64 {
	if x != nil {
		return x.PrincipalFloorValue
	}
	return 0
}

func (x *LoanProduct_PaymentSettings_PrincipalPaymentSettings) GetPrincipalPaymentMethod() string {
	if x != nil {
		return x.PrincipalPaymentMethod
	}
	return ""
}

func (x *LoanProduct_PaymentSettings_PrincipalPaymentSettings) GetTotalDueAmountFloor() float64 {
	if x != nil {
		return x.TotalDueAmountFloor
	}
	return 0
}

func (x *LoanProduct_PaymentSettings_PrincipalPaymentSettings) GetTotalDuePayment() string {
	if x != nil {
		return x.TotalDuePayment
	}
	return ""
}

type LoanProduct_PaymentSettings_PrincipalPaymentSettings_Amount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue float64 `protobuf:"fixed64,1,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	EncodedKey   string  `protobuf:"bytes,2,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	MaxValue     float64 `protobuf:"fixed64,3,opt,name=maxValue,proto3" json:"maxValue,omitempty"`
	MinValue     float64 `protobuf:"fixed64,4,opt,name=minValue,proto3" json:"minValue,omitempty"`
}

func (x *LoanProduct_PaymentSettings_PrincipalPaymentSettings_Amount) Reset() {
	*x = LoanProduct_PaymentSettings_PrincipalPaymentSettings_Amount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_PaymentSettings_PrincipalPaymentSettings_Amount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_PaymentSettings_PrincipalPaymentSettings_Amount) ProtoMessage() {}

func (x *LoanProduct_PaymentSettings_PrincipalPaymentSettings_Amount) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_PaymentSettings_PrincipalPaymentSettings_Amount.ProtoReflect.Descriptor instead.
func (*LoanProduct_PaymentSettings_PrincipalPaymentSettings_Amount) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 14, 1, 0}
}

func (x *LoanProduct_PaymentSettings_PrincipalPaymentSettings_Amount) GetDefaultValue() float64 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *LoanProduct_PaymentSettings_PrincipalPaymentSettings_Amount) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *LoanProduct_PaymentSettings_PrincipalPaymentSettings_Amount) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *LoanProduct_PaymentSettings_PrincipalPaymentSettings_Amount) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

type LoanProduct_PaymentSettings_PrincipalPaymentSettings_Percentage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue float64 `protobuf:"fixed64,1,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	EncodedKey   string  `protobuf:"bytes,2,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	MaxValue     float64 `protobuf:"fixed64,3,opt,name=maxValue,proto3" json:"maxValue,omitempty"`
	MinValue     float64 `protobuf:"fixed64,4,opt,name=minValue,proto3" json:"minValue,omitempty"`
}

func (x *LoanProduct_PaymentSettings_PrincipalPaymentSettings_Percentage) Reset() {
	*x = LoanProduct_PaymentSettings_PrincipalPaymentSettings_Percentage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_PaymentSettings_PrincipalPaymentSettings_Percentage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_PaymentSettings_PrincipalPaymentSettings_Percentage) ProtoMessage() {}

func (x *LoanProduct_PaymentSettings_PrincipalPaymentSettings_Percentage) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_PaymentSettings_PrincipalPaymentSettings_Percentage.ProtoReflect.Descriptor instead.
func (*LoanProduct_PaymentSettings_PrincipalPaymentSettings_Percentage) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 14, 1, 1}
}

func (x *LoanProduct_PaymentSettings_PrincipalPaymentSettings_Percentage) GetDefaultValue() float64 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *LoanProduct_PaymentSettings_PrincipalPaymentSettings_Percentage) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *LoanProduct_PaymentSettings_PrincipalPaymentSettings_Percentage) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *LoanProduct_PaymentSettings_PrincipalPaymentSettings_Percentage) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

type LoanProduct_PenaltySettings_PenaltyRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue float64 `protobuf:"fixed64,1,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	EncodedKey   string  `protobuf:"bytes,2,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	MaxValue     float64 `protobuf:"fixed64,3,opt,name=maxValue,proto3" json:"maxValue,omitempty"`
	MinValue     float64 `protobuf:"fixed64,4,opt,name=minValue,proto3" json:"minValue,omitempty"`
}

func (x *LoanProduct_PenaltySettings_PenaltyRate) Reset() {
	*x = LoanProduct_PenaltySettings_PenaltyRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_PenaltySettings_PenaltyRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_PenaltySettings_PenaltyRate) ProtoMessage() {}

func (x *LoanProduct_PenaltySettings_PenaltyRate) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_PenaltySettings_PenaltyRate.ProtoReflect.Descriptor instead.
func (*LoanProduct_PenaltySettings_PenaltyRate) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 15, 0}
}

func (x *LoanProduct_PenaltySettings_PenaltyRate) GetDefaultValue() float64 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *LoanProduct_PenaltySettings_PenaltyRate) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *LoanProduct_PenaltySettings_PenaltyRate) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *LoanProduct_PenaltySettings_PenaltyRate) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

type LoanProduct_ScheduleSettings_BillingCycles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled   bool    `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	StartDays []int64 `protobuf:"varint,2,rep,packed,name=startDays,proto3" json:"startDays,omitempty"`
}

func (x *LoanProduct_ScheduleSettings_BillingCycles) Reset() {
	*x = LoanProduct_ScheduleSettings_BillingCycles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_ScheduleSettings_BillingCycles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_ScheduleSettings_BillingCycles) ProtoMessage() {}

func (x *LoanProduct_ScheduleSettings_BillingCycles) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_ScheduleSettings_BillingCycles.ProtoReflect.Descriptor instead.
func (*LoanProduct_ScheduleSettings_BillingCycles) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 17, 0}
}

func (x *LoanProduct_ScheduleSettings_BillingCycles) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *LoanProduct_ScheduleSettings_BillingCycles) GetStartDays() []int64 {
	if x != nil {
		return x.StartDays
	}
	return nil
}

type LoanProduct_ScheduleSettings_FirstRepaymentDueDateOffset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue float64 `protobuf:"fixed64,1,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	EncodedKey   string  `protobuf:"bytes,2,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	MaxValue     float64 `protobuf:"fixed64,3,opt,name=maxValue,proto3" json:"maxValue,omitempty"`
	MinValue     float64 `protobuf:"fixed64,4,opt,name=minValue,proto3" json:"minValue,omitempty"`
}

func (x *LoanProduct_ScheduleSettings_FirstRepaymentDueDateOffset) Reset() {
	*x = LoanProduct_ScheduleSettings_FirstRepaymentDueDateOffset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_ScheduleSettings_FirstRepaymentDueDateOffset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_ScheduleSettings_FirstRepaymentDueDateOffset) ProtoMessage() {}

func (x *LoanProduct_ScheduleSettings_FirstRepaymentDueDateOffset) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_ScheduleSettings_FirstRepaymentDueDateOffset.ProtoReflect.Descriptor instead.
func (*LoanProduct_ScheduleSettings_FirstRepaymentDueDateOffset) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 17, 1}
}

func (x *LoanProduct_ScheduleSettings_FirstRepaymentDueDateOffset) GetDefaultValue() float64 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *LoanProduct_ScheduleSettings_FirstRepaymentDueDateOffset) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *LoanProduct_ScheduleSettings_FirstRepaymentDueDateOffset) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *LoanProduct_ScheduleSettings_FirstRepaymentDueDateOffset) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

type LoanProduct_ScheduleSettings_NumInstallments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue float64 `protobuf:"fixed64,1,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	EncodedKey   string  `protobuf:"bytes,2,opt,name=encodedKey,proto3" json:"encodedKey,omitempty"`
	MaxValue     float64 `protobuf:"fixed64,3,opt,name=maxValue,proto3" json:"maxValue,omitempty"`
	MinValue     float64 `protobuf:"fixed64,4,opt,name=minValue,proto3" json:"minValue,omitempty"`
}

func (x *LoanProduct_ScheduleSettings_NumInstallments) Reset() {
	*x = LoanProduct_ScheduleSettings_NumInstallments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_ScheduleSettings_NumInstallments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_ScheduleSettings_NumInstallments) ProtoMessage() {}

func (x *LoanProduct_ScheduleSettings_NumInstallments) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_ScheduleSettings_NumInstallments.ProtoReflect.Descriptor instead.
func (*LoanProduct_ScheduleSettings_NumInstallments) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 17, 2}
}

func (x *LoanProduct_ScheduleSettings_NumInstallments) GetDefaultValue() float64 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *LoanProduct_ScheduleSettings_NumInstallments) GetEncodedKey() string {
	if x != nil {
		return x.EncodedKey
	}
	return ""
}

func (x *LoanProduct_ScheduleSettings_NumInstallments) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *LoanProduct_ScheduleSettings_NumInstallments) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

type LoanProduct_ScheduleSettings_PreviewSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumberOfPreviewedInstalments float64 `protobuf:"fixed64,1,opt,name=numberOfPreviewedInstalments,proto3" json:"numberOfPreviewedInstalments,omitempty"`
	PreviewScheduleEnabled       bool    `protobuf:"varint,2,opt,name=previewScheduleEnabled,proto3" json:"previewScheduleEnabled,omitempty"`
}

func (x *LoanProduct_ScheduleSettings_PreviewSchedule) Reset() {
	*x = LoanProduct_ScheduleSettings_PreviewSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_ScheduleSettings_PreviewSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_ScheduleSettings_PreviewSchedule) ProtoMessage() {}

func (x *LoanProduct_ScheduleSettings_PreviewSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_ScheduleSettings_PreviewSchedule.ProtoReflect.Descriptor instead.
func (*LoanProduct_ScheduleSettings_PreviewSchedule) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 17, 3}
}

func (x *LoanProduct_ScheduleSettings_PreviewSchedule) GetNumberOfPreviewedInstalments() float64 {
	if x != nil {
		return x.NumberOfPreviewedInstalments
	}
	return 0
}

func (x *LoanProduct_ScheduleSettings_PreviewSchedule) GetPreviewScheduleEnabled() bool {
	if x != nil {
		return x.PreviewScheduleEnabled
	}
	return false
}

type LoanProduct_ScheduleSettings_RoundingSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepaymentCurrencyRounding       string `protobuf:"bytes,1,opt,name=repaymentCurrencyRounding,proto3" json:"repaymentCurrencyRounding,omitempty"`
	RepaymentElementsRoundingMethod string `protobuf:"bytes,2,opt,name=repaymentElementsRoundingMethod,proto3" json:"repaymentElementsRoundingMethod,omitempty"`
	RoundingRepaymentScheduleMethod string `protobuf:"bytes,3,opt,name=roundingRepaymentScheduleMethod,proto3" json:"roundingRepaymentScheduleMethod,omitempty"`
}

func (x *LoanProduct_ScheduleSettings_RoundingSettings) Reset() {
	*x = LoanProduct_ScheduleSettings_RoundingSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct_ScheduleSettings_RoundingSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct_ScheduleSettings_RoundingSettings) ProtoMessage() {}

func (x *LoanProduct_ScheduleSettings_RoundingSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct_ScheduleSettings_RoundingSettings.ProtoReflect.Descriptor instead.
func (*LoanProduct_ScheduleSettings_RoundingSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{2, 17, 4}
}

func (x *LoanProduct_ScheduleSettings_RoundingSettings) GetRepaymentCurrencyRounding() string {
	if x != nil {
		return x.RepaymentCurrencyRounding
	}
	return ""
}

func (x *LoanProduct_ScheduleSettings_RoundingSettings) GetRepaymentElementsRoundingMethod() string {
	if x != nil {
		return x.RepaymentElementsRoundingMethod
	}
	return ""
}

func (x *LoanProduct_ScheduleSettings_RoundingSettings) GetRoundingRepaymentScheduleMethod() string {
	if x != nil {
		return x.RoundingRepaymentScheduleMethod
	}
	return ""
}

type LoanProductRequest_AccountLinkSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled                   bool     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	LinkableDepositProductKey string   `protobuf:"bytes,2,opt,name=linkableDepositProductKey,proto3" json:"linkableDepositProductKey,omitempty"`
	LinkedAccountOptions      []string `protobuf:"bytes,3,rep,name=linkedAccountOptions,proto3" json:"linkedAccountOptions,omitempty"`
	SettlementMethod          string   `protobuf:"bytes,4,opt,name=settlementMethod,proto3" json:"settlementMethod,omitempty"`
}

func (x *LoanProductRequest_AccountLinkSettings) Reset() {
	*x = LoanProductRequest_AccountLinkSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_AccountLinkSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_AccountLinkSettings) ProtoMessage() {}

func (x *LoanProductRequest_AccountLinkSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_AccountLinkSettings.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_AccountLinkSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 0}
}

func (x *LoanProductRequest_AccountLinkSettings) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *LoanProductRequest_AccountLinkSettings) GetLinkableDepositProductKey() string {
	if x != nil {
		return x.LinkableDepositProductKey
	}
	return ""
}

func (x *LoanProductRequest_AccountLinkSettings) GetLinkedAccountOptions() []string {
	if x != nil {
		return x.LinkedAccountOptions
	}
	return nil
}

func (x *LoanProductRequest_AccountLinkSettings) GetSettlementMethod() string {
	if x != nil {
		return x.SettlementMethod
	}
	return ""
}

type LoanProductRequest_AccountingSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountingMethod                string                                                   `protobuf:"bytes,1,opt,name=accountingMethod,proto3" json:"accountingMethod,omitempty"`
	AccountingRules                 []*LoanProductRequest_AccountingSettings_AccountingRules `protobuf:"bytes,2,rep,name=accountingRules,proto3" json:"accountingRules,omitempty"`
	InterestAccrualCalculation      string                                                   `protobuf:"bytes,3,opt,name=interestAccrualCalculation,proto3" json:"interestAccrualCalculation,omitempty"`
	InterestAccruedAccountingMethod string                                                   `protobuf:"bytes,4,opt,name=interestAccruedAccountingMethod,proto3" json:"interestAccruedAccountingMethod,omitempty"`
}

func (x *LoanProductRequest_AccountingSettings) Reset() {
	*x = LoanProductRequest_AccountingSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_AccountingSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_AccountingSettings) ProtoMessage() {}

func (x *LoanProductRequest_AccountingSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_AccountingSettings.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_AccountingSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 1}
}

func (x *LoanProductRequest_AccountingSettings) GetAccountingMethod() string {
	if x != nil {
		return x.AccountingMethod
	}
	return ""
}

func (x *LoanProductRequest_AccountingSettings) GetAccountingRules() []*LoanProductRequest_AccountingSettings_AccountingRules {
	if x != nil {
		return x.AccountingRules
	}
	return nil
}

func (x *LoanProductRequest_AccountingSettings) GetInterestAccrualCalculation() string {
	if x != nil {
		return x.InterestAccrualCalculation
	}
	return ""
}

func (x *LoanProductRequest_AccountingSettings) GetInterestAccruedAccountingMethod() string {
	if x != nil {
		return x.InterestAccruedAccountingMethod
	}
	return ""
}

type LoanProductRequest_ArrearsSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DateCalculationMethod                     string                                                                        `protobuf:"bytes,1,opt,name=dateCalculationMethod,proto3" json:"dateCalculationMethod,omitempty"`
	MonthlyToleranceDay                       uint32                                                                        `protobuf:"varint,2,opt,name=monthlyToleranceDay,proto3" json:"monthlyToleranceDay,omitempty"`
	NonWorkingDaysMethod                      string                                                                        `protobuf:"bytes,3,opt,name=nonWorkingDaysMethod,proto3" json:"nonWorkingDaysMethod,omitempty"`
	ToleranceCalculationMethod                string                                                                        `protobuf:"bytes,4,opt,name=toleranceCalculationMethod,proto3" json:"toleranceCalculationMethod,omitempty"`
	ToleranceFloorAmount                      float64                                                                       `protobuf:"fixed64,5,opt,name=toleranceFloorAmount,proto3" json:"toleranceFloorAmount,omitempty"`
	TolerancePercentageOfOutstandingPrincipal *LoanProductRequest_ArrearsSettings_TolerancePercentageOfOutstandingPrincipal `protobuf:"bytes,6,opt,name=tolerancePercentageOfOutstandingPrincipal,proto3" json:"tolerancePercentageOfOutstandingPrincipal,omitempty"`
	TolerancePeriod                           *LoanProductRequest_ArrearsSettings_TolerancePeriod                           `protobuf:"bytes,7,opt,name=tolerancePeriod,proto3" json:"tolerancePeriod,omitempty"`
}

func (x *LoanProductRequest_ArrearsSettings) Reset() {
	*x = LoanProductRequest_ArrearsSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_ArrearsSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_ArrearsSettings) ProtoMessage() {}

func (x *LoanProductRequest_ArrearsSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_ArrearsSettings.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_ArrearsSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 2}
}

func (x *LoanProductRequest_ArrearsSettings) GetDateCalculationMethod() string {
	if x != nil {
		return x.DateCalculationMethod
	}
	return ""
}

func (x *LoanProductRequest_ArrearsSettings) GetMonthlyToleranceDay() uint32 {
	if x != nil {
		return x.MonthlyToleranceDay
	}
	return 0
}

func (x *LoanProductRequest_ArrearsSettings) GetNonWorkingDaysMethod() string {
	if x != nil {
		return x.NonWorkingDaysMethod
	}
	return ""
}

func (x *LoanProductRequest_ArrearsSettings) GetToleranceCalculationMethod() string {
	if x != nil {
		return x.ToleranceCalculationMethod
	}
	return ""
}

func (x *LoanProductRequest_ArrearsSettings) GetToleranceFloorAmount() float64 {
	if x != nil {
		return x.ToleranceFloorAmount
	}
	return 0
}

func (x *LoanProductRequest_ArrearsSettings) GetTolerancePercentageOfOutstandingPrincipal() *LoanProductRequest_ArrearsSettings_TolerancePercentageOfOutstandingPrincipal {
	if x != nil {
		return x.TolerancePercentageOfOutstandingPrincipal
	}
	return nil
}

func (x *LoanProductRequest_ArrearsSettings) GetTolerancePeriod() *LoanProductRequest_ArrearsSettings_TolerancePeriod {
	if x != nil {
		return x.TolerancePeriod
	}
	return nil
}

type LoanProductRequest_AvailabilitySettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableFor   []string                                                `protobuf:"bytes,1,rep,name=availableFor,proto3" json:"availableFor,omitempty"`
	BranchSettings *LoanProductRequest_AvailabilitySettings_BranchSettings `protobuf:"bytes,2,opt,name=branchSettings,proto3" json:"branchSettings,omitempty"`
}

func (x *LoanProductRequest_AvailabilitySettings) Reset() {
	*x = LoanProductRequest_AvailabilitySettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_AvailabilitySettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_AvailabilitySettings) ProtoMessage() {}

func (x *LoanProductRequest_AvailabilitySettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_AvailabilitySettings.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_AvailabilitySettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 3}
}

func (x *LoanProductRequest_AvailabilitySettings) GetAvailableFor() []string {
	if x != nil {
		return x.AvailableFor
	}
	return nil
}

func (x *LoanProductRequest_AvailabilitySettings) GetBranchSettings() *LoanProductRequest_AvailabilitySettings_BranchSettings {
	if x != nil {
		return x.BranchSettings
	}
	return nil
}

type LoanProductRequest_CreditArrangementSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreditArrangementRequirement string `protobuf:"bytes,1,opt,name=creditArrangementRequirement,proto3" json:"creditArrangementRequirement,omitempty"`
}

func (x *LoanProductRequest_CreditArrangementSettings) Reset() {
	*x = LoanProductRequest_CreditArrangementSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_CreditArrangementSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_CreditArrangementSettings) ProtoMessage() {}

func (x *LoanProductRequest_CreditArrangementSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_CreditArrangementSettings.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_CreditArrangementSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 4}
}

func (x *LoanProductRequest_CreditArrangementSettings) GetCreditArrangementRequirement() string {
	if x != nil {
		return x.CreditArrangementRequirement
	}
	return ""
}

type LoanProductRequest_Currency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	CurrencyCode string `protobuf:"bytes,2,opt,name=currencyCode,proto3" json:"currencyCode,omitempty"`
}

func (x *LoanProductRequest_Currency) Reset() {
	*x = LoanProductRequest_Currency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_Currency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_Currency) ProtoMessage() {}

func (x *LoanProductRequest_Currency) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_Currency.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_Currency) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 5}
}

func (x *LoanProductRequest_Currency) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *LoanProductRequest_Currency) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

type LoanProductRequest_FeesSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowArbitraryFees bool                                    `protobuf:"varint,1,opt,name=allowArbitraryFees,proto3" json:"allowArbitraryFees,omitempty"`
	Fees               []*LoanProductRequest_FeesSettings_Fees `protobuf:"bytes,2,rep,name=fees,proto3" json:"fees,omitempty"`
}

func (x *LoanProductRequest_FeesSettings) Reset() {
	*x = LoanProductRequest_FeesSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_FeesSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_FeesSettings) ProtoMessage() {}

func (x *LoanProductRequest_FeesSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_FeesSettings.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_FeesSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 6}
}

func (x *LoanProductRequest_FeesSettings) GetAllowArbitraryFees() bool {
	if x != nil {
		return x.AllowArbitraryFees
	}
	return false
}

func (x *LoanProductRequest_FeesSettings) GetFees() []*LoanProductRequest_FeesSettings_Fees {
	if x != nil {
		return x.Fees
	}
	return nil
}

type LoanProductRequest_FundingSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled                                bool                                                               `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	FunderInterestCommission               *LoanProductRequest_FundingSettings_FunderInterestCommission       `protobuf:"bytes,2,opt,name=funderInterestCommission,proto3" json:"funderInterestCommission,omitempty"`
	FunderInterestCommissionAllocationType string                                                             `protobuf:"bytes,3,opt,name=funderInterestCommissionAllocationType,proto3" json:"funderInterestCommissionAllocationType,omitempty"`
	LockFundsAtApproval                    bool                                                               `protobuf:"varint,4,opt,name=lockFundsAtApproval,proto3" json:"lockFundsAtApproval,omitempty"`
	OrganizationInterestCommission         *LoanProductRequest_FundingSettings_OrganizationInterestCommission `protobuf:"bytes,5,opt,name=organizationInterestCommission,proto3" json:"organizationInterestCommission,omitempty"`
	RequiredFunds                          float64                                                            `protobuf:"fixed64,6,opt,name=requiredFunds,proto3" json:"requiredFunds,omitempty"`
}

func (x *LoanProductRequest_FundingSettings) Reset() {
	*x = LoanProductRequest_FundingSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_FundingSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_FundingSettings) ProtoMessage() {}

func (x *LoanProductRequest_FundingSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_FundingSettings.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_FundingSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 7}
}

func (x *LoanProductRequest_FundingSettings) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *LoanProductRequest_FundingSettings) GetFunderInterestCommission() *LoanProductRequest_FundingSettings_FunderInterestCommission {
	if x != nil {
		return x.FunderInterestCommission
	}
	return nil
}

func (x *LoanProductRequest_FundingSettings) GetFunderInterestCommissionAllocationType() string {
	if x != nil {
		return x.FunderInterestCommissionAllocationType
	}
	return ""
}

func (x *LoanProductRequest_FundingSettings) GetLockFundsAtApproval() bool {
	if x != nil {
		return x.LockFundsAtApproval
	}
	return false
}

func (x *LoanProductRequest_FundingSettings) GetOrganizationInterestCommission() *LoanProductRequest_FundingSettings_OrganizationInterestCommission {
	if x != nil {
		return x.OrganizationInterestCommission
	}
	return nil
}

func (x *LoanProductRequest_FundingSettings) GetRequiredFunds() float64 {
	if x != nil {
		return x.RequiredFunds
	}
	return 0
}

type LoanProductRequest_GracePeriodSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GracePeriod     *LoanProductRequest_GracePeriodSettings_GracePeriod `protobuf:"bytes,1,opt,name=gracePeriod,proto3" json:"gracePeriod,omitempty"`
	GracePeriodType string                                              `protobuf:"bytes,2,opt,name=gracePeriodType,proto3" json:"gracePeriodType,omitempty"`
}

func (x *LoanProductRequest_GracePeriodSettings) Reset() {
	*x = LoanProductRequest_GracePeriodSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_GracePeriodSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_GracePeriodSettings) ProtoMessage() {}

func (x *LoanProductRequest_GracePeriodSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_GracePeriodSettings.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_GracePeriodSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 8}
}

func (x *LoanProductRequest_GracePeriodSettings) GetGracePeriod() *LoanProductRequest_GracePeriodSettings_GracePeriod {
	if x != nil {
		return x.GracePeriod
	}
	return nil
}

func (x *LoanProductRequest_GracePeriodSettings) GetGracePeriodType() string {
	if x != nil {
		return x.GracePeriodType
	}
	return ""
}

type LoanProductRequest_InterestSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccrueLateInterest               bool                                                        `protobuf:"varint,1,opt,name=accrueLateInterest,proto3" json:"accrueLateInterest,omitempty"`
	CompoundingFrequency             string                                                      `protobuf:"bytes,2,opt,name=compoundingFrequency,proto3" json:"compoundingFrequency,omitempty"`
	DaysInYear                       string                                                      `protobuf:"bytes,3,opt,name=daysInYear,proto3" json:"daysInYear,omitempty"`
	IndexRateSettings                *LoanProductRequest_InterestSettings_IndexRateSettings      `protobuf:"bytes,4,opt,name=indexRateSettings,proto3" json:"indexRateSettings,omitempty"`
	InterestApplicationMethod        string                                                      `protobuf:"bytes,5,opt,name=interestApplicationMethod,proto3" json:"interestApplicationMethod,omitempty"`
	InterestBalanceCalculationMethod string                                                      `protobuf:"bytes,6,opt,name=interestBalanceCalculationMethod,proto3" json:"interestBalanceCalculationMethod,omitempty"`
	InterestCalculationMethod        string                                                      `protobuf:"bytes,7,opt,name=interestCalculationMethod,proto3" json:"interestCalculationMethod,omitempty"`
	InterestRateSettings             []*LoanProductRequest_InterestSettings_InterestRateSettings `protobuf:"bytes,8,rep,name=interestRateSettings,proto3" json:"interestRateSettings,omitempty"`
	InterestType                     string                                                      `protobuf:"bytes,9,opt,name=interestType,proto3" json:"interestType,omitempty"`
	ScheduleInterestDaysCountMethod  string                                                      `protobuf:"bytes,10,opt,name=scheduleInterestDaysCountMethod,proto3" json:"scheduleInterestDaysCountMethod,omitempty"`
}

func (x *LoanProductRequest_InterestSettings) Reset() {
	*x = LoanProductRequest_InterestSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_InterestSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_InterestSettings) ProtoMessage() {}

func (x *LoanProductRequest_InterestSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_InterestSettings.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_InterestSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 9}
}

func (x *LoanProductRequest_InterestSettings) GetAccrueLateInterest() bool {
	if x != nil {
		return x.AccrueLateInterest
	}
	return false
}

func (x *LoanProductRequest_InterestSettings) GetCompoundingFrequency() string {
	if x != nil {
		return x.CompoundingFrequency
	}
	return ""
}

func (x *LoanProductRequest_InterestSettings) GetDaysInYear() string {
	if x != nil {
		return x.DaysInYear
	}
	return ""
}

func (x *LoanProductRequest_InterestSettings) GetIndexRateSettings() *LoanProductRequest_InterestSettings_IndexRateSettings {
	if x != nil {
		return x.IndexRateSettings
	}
	return nil
}

func (x *LoanProductRequest_InterestSettings) GetInterestApplicationMethod() string {
	if x != nil {
		return x.InterestApplicationMethod
	}
	return ""
}

func (x *LoanProductRequest_InterestSettings) GetInterestBalanceCalculationMethod() string {
	if x != nil {
		return x.InterestBalanceCalculationMethod
	}
	return ""
}

func (x *LoanProductRequest_InterestSettings) GetInterestCalculationMethod() string {
	if x != nil {
		return x.InterestCalculationMethod
	}
	return ""
}

func (x *LoanProductRequest_InterestSettings) GetInterestRateSettings() []*LoanProductRequest_InterestSettings_InterestRateSettings {
	if x != nil {
		return x.InterestRateSettings
	}
	return nil
}

func (x *LoanProductRequest_InterestSettings) GetInterestType() string {
	if x != nil {
		return x.InterestType
	}
	return ""
}

func (x *LoanProductRequest_InterestSettings) GetScheduleInterestDaysCountMethod() string {
	if x != nil {
		return x.ScheduleInterestDaysCountMethod
	}
	return ""
}

type LoanProductRequest_InternalControls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DormancyPeriodDays float64                                                `protobuf:"fixed64,1,opt,name=dormancyPeriodDays,proto3" json:"dormancyPeriodDays,omitempty"`
	FourEyesPrinciple  *LoanProductRequest_InternalControls_FourEyesPrinciple `protobuf:"bytes,2,opt,name=fourEyesPrinciple,proto3" json:"fourEyesPrinciple,omitempty"`
	LockSettings       *LoanProductRequest_InternalControls_LockSettings      `protobuf:"bytes,3,opt,name=lockSettings,proto3" json:"lockSettings,omitempty"`
}

func (x *LoanProductRequest_InternalControls) Reset() {
	*x = LoanProductRequest_InternalControls{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_InternalControls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_InternalControls) ProtoMessage() {}

func (x *LoanProductRequest_InternalControls) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_InternalControls.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_InternalControls) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 10}
}

func (x *LoanProductRequest_InternalControls) GetDormancyPeriodDays() float64 {
	if x != nil {
		return x.DormancyPeriodDays
	}
	return 0
}

func (x *LoanProductRequest_InternalControls) GetFourEyesPrinciple() *LoanProductRequest_InternalControls_FourEyesPrinciple {
	if x != nil {
		return x.FourEyesPrinciple
	}
	return nil
}

func (x *LoanProductRequest_InternalControls) GetLockSettings() *LoanProductRequest_InternalControls_LockSettings {
	if x != nil {
		return x.LockSettings
	}
	return nil
}

type LoanProductRequest_LoanAmountSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoanAmount      *LoanProductRequest_LoanAmountSettings_LoanAmount      `protobuf:"bytes,1,opt,name=loanAmount,proto3" json:"loanAmount,omitempty"`
	TrancheSettings *LoanProductRequest_LoanAmountSettings_TrancheSettings `protobuf:"bytes,2,opt,name=trancheSettings,proto3" json:"trancheSettings,omitempty"`
}

func (x *LoanProductRequest_LoanAmountSettings) Reset() {
	*x = LoanProductRequest_LoanAmountSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_LoanAmountSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_LoanAmountSettings) ProtoMessage() {}

func (x *LoanProductRequest_LoanAmountSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_LoanAmountSettings.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_LoanAmountSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 11}
}

func (x *LoanProductRequest_LoanAmountSettings) GetLoanAmount() *LoanProductRequest_LoanAmountSettings_LoanAmount {
	if x != nil {
		return x.LoanAmount
	}
	return nil
}

func (x *LoanProductRequest_LoanAmountSettings) GetTrancheSettings() *LoanProductRequest_LoanAmountSettings_TrancheSettings {
	if x != nil {
		return x.TrancheSettings
	}
	return nil
}

type LoanProductRequest_NewAccountSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountInitialState string `protobuf:"bytes,1,opt,name=accountInitialState,proto3" json:"accountInitialState,omitempty"`
	IdGeneratorType     string `protobuf:"bytes,2,opt,name=idGeneratorType,proto3" json:"idGeneratorType,omitempty"`
	IdPattern           string `protobuf:"bytes,3,opt,name=idPattern,proto3" json:"idPattern,omitempty"`
}

func (x *LoanProductRequest_NewAccountSettings) Reset() {
	*x = LoanProductRequest_NewAccountSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_NewAccountSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_NewAccountSettings) ProtoMessage() {}

func (x *LoanProductRequest_NewAccountSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_NewAccountSettings.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_NewAccountSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 12}
}

func (x *LoanProductRequest_NewAccountSettings) GetAccountInitialState() string {
	if x != nil {
		return x.AccountInitialState
	}
	return ""
}

func (x *LoanProductRequest_NewAccountSettings) GetIdGeneratorType() string {
	if x != nil {
		return x.IdGeneratorType
	}
	return ""
}

func (x *LoanProductRequest_NewAccountSettings) GetIdPattern() string {
	if x != nil {
		return x.IdPattern
	}
	return ""
}

type LoanProductRequest_OffsetSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowOffset bool `protobuf:"varint,1,opt,name=allowOffset,proto3" json:"allowOffset,omitempty"`
}

func (x *LoanProductRequest_OffsetSettings) Reset() {
	*x = LoanProductRequest_OffsetSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_OffsetSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_OffsetSettings) ProtoMessage() {}

func (x *LoanProductRequest_OffsetSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_OffsetSettings.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_OffsetSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 13}
}

func (x *LoanProductRequest_OffsetSettings) GetAllowOffset() bool {
	if x != nil {
		return x.AllowOffset
	}
	return false
}

type LoanProductRequest_PaymentSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AmortizationMethod              string                                                       `protobuf:"bytes,1,opt,name=amortizationMethod,proto3" json:"amortizationMethod,omitempty"`
	LatePaymentsRecalculationMethod string                                                       `protobuf:"bytes,2,opt,name=latePaymentsRecalculationMethod,proto3" json:"latePaymentsRecalculationMethod,omitempty"`
	PaymentMethod                   string                                                       `protobuf:"bytes,3,opt,name=paymentMethod,proto3" json:"paymentMethod,omitempty"`
	PrepaymentSettings              *LoanProductRequest_PaymentSettings_PrepaymentSettings       `protobuf:"bytes,4,opt,name=prepaymentSettings,proto3" json:"prepaymentSettings,omitempty"`
	PrincipalPaymentSettings        *LoanProductRequest_PaymentSettings_PrincipalPaymentSettings `protobuf:"bytes,5,opt,name=principalPaymentSettings,proto3" json:"principalPaymentSettings,omitempty"`
	RepaymentAllocationOrder        []string                                                     `protobuf:"bytes,6,rep,name=repaymentAllocationOrder,proto3" json:"repaymentAllocationOrder,omitempty"`
}

func (x *LoanProductRequest_PaymentSettings) Reset() {
	*x = LoanProductRequest_PaymentSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_PaymentSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_PaymentSettings) ProtoMessage() {}

func (x *LoanProductRequest_PaymentSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_PaymentSettings.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_PaymentSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 14}
}

func (x *LoanProductRequest_PaymentSettings) GetAmortizationMethod() string {
	if x != nil {
		return x.AmortizationMethod
	}
	return ""
}

func (x *LoanProductRequest_PaymentSettings) GetLatePaymentsRecalculationMethod() string {
	if x != nil {
		return x.LatePaymentsRecalculationMethod
	}
	return ""
}

func (x *LoanProductRequest_PaymentSettings) GetPaymentMethod() string {
	if x != nil {
		return x.PaymentMethod
	}
	return ""
}

func (x *LoanProductRequest_PaymentSettings) GetPrepaymentSettings() *LoanProductRequest_PaymentSettings_PrepaymentSettings {
	if x != nil {
		return x.PrepaymentSettings
	}
	return nil
}

func (x *LoanProductRequest_PaymentSettings) GetPrincipalPaymentSettings() *LoanProductRequest_PaymentSettings_PrincipalPaymentSettings {
	if x != nil {
		return x.PrincipalPaymentSettings
	}
	return nil
}

func (x *LoanProductRequest_PaymentSettings) GetRepaymentAllocationOrder() []string {
	if x != nil {
		return x.RepaymentAllocationOrder
	}
	return nil
}

type LoanProductRequest_PenaltySettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoanPenaltyCalculationMethod string                                          `protobuf:"bytes,1,opt,name=loanPenaltyCalculationMethod,proto3" json:"loanPenaltyCalculationMethod,omitempty"`
	LoanPenaltyGracePeriod       float64                                         `protobuf:"fixed64,2,opt,name=loanPenaltyGracePeriod,proto3" json:"loanPenaltyGracePeriod,omitempty"`
	PenaltyRate                  *LoanProductRequest_PenaltySettings_PenaltyRate `protobuf:"bytes,3,opt,name=penaltyRate,proto3" json:"penaltyRate,omitempty"`
}

func (x *LoanProductRequest_PenaltySettings) Reset() {
	*x = LoanProductRequest_PenaltySettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_PenaltySettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_PenaltySettings) ProtoMessage() {}

func (x *LoanProductRequest_PenaltySettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_PenaltySettings.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_PenaltySettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 15}
}

func (x *LoanProductRequest_PenaltySettings) GetLoanPenaltyCalculationMethod() string {
	if x != nil {
		return x.LoanPenaltyCalculationMethod
	}
	return ""
}

func (x *LoanProductRequest_PenaltySettings) GetLoanPenaltyGracePeriod() float64 {
	if x != nil {
		return x.LoanPenaltyGracePeriod
	}
	return 0
}

func (x *LoanProductRequest_PenaltySettings) GetPenaltyRate() *LoanProductRequest_PenaltySettings_PenaltyRate {
	if x != nil {
		return x.PenaltyRate
	}
	return nil
}

type LoanProductRequest_RedrawSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowRedraw bool `protobuf:"varint,1,opt,name=allowRedraw,proto3" json:"allowRedraw,omitempty"`
}

func (x *LoanProductRequest_RedrawSettings) Reset() {
	*x = LoanProductRequest_RedrawSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_RedrawSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_RedrawSettings) ProtoMessage() {}

func (x *LoanProductRequest_RedrawSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_RedrawSettings.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_RedrawSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 16}
}

func (x *LoanProductRequest_RedrawSettings) GetAllowRedraw() bool {
	if x != nil {
		return x.AllowRedraw
	}
	return false
}

type LoanProductRequest_ScheduleSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BillingCycles                *LoanProductRequest_ScheduleSettings_BillingCycles               `protobuf:"bytes,1,opt,name=billingCycles,proto3" json:"billingCycles,omitempty"`
	DefaultRepaymentPeriodCount  uint32                                                           `protobuf:"varint,2,opt,name=defaultRepaymentPeriodCount,proto3" json:"defaultRepaymentPeriodCount,omitempty"`
	FirstRepaymentDueDateOffset  *LoanProductRequest_ScheduleSettings_FirstRepaymentDueDateOffset `protobuf:"bytes,3,opt,name=firstRepaymentDueDateOffset,proto3" json:"firstRepaymentDueDateOffset,omitempty"`
	FixedDaysOfMonth             []int64                                                          `protobuf:"varint,4,rep,packed,name=fixedDaysOfMonth,proto3" json:"fixedDaysOfMonth,omitempty"`
	InterestAccrualSince         string                                                           `protobuf:"bytes,5,opt,name=interestAccrualSince,proto3" json:"interestAccrualSince,omitempty"`
	NumInstallments              *LoanProductRequest_ScheduleSettings_NumInstallments             `protobuf:"bytes,6,opt,name=numInstallments,proto3" json:"numInstallments,omitempty"`
	PreviewSchedule              *LoanProductRequest_ScheduleSettings_PreviewSchedule             `protobuf:"bytes,7,opt,name=previewSchedule,proto3" json:"previewSchedule,omitempty"`
	RepaymentMethod              string                                                           `protobuf:"bytes,8,opt,name=repaymentMethod,proto3" json:"repaymentMethod,omitempty"`
	RepaymentPeriodUnit          string                                                           `protobuf:"bytes,9,opt,name=repaymentPeriodUnit,proto3" json:"repaymentPeriodUnit,omitempty"`
	RepaymentReschedulingMethod  string                                                           `protobuf:"bytes,10,opt,name=repaymentReschedulingMethod,proto3" json:"repaymentReschedulingMethod,omitempty"`
	RepaymentScheduleEditOptions []string                                                         `protobuf:"bytes,11,rep,name=repaymentScheduleEditOptions,proto3" json:"repaymentScheduleEditOptions,omitempty"`
	RepaymentScheduleMethod      string                                                           `protobuf:"bytes,12,opt,name=repaymentScheduleMethod,proto3" json:"repaymentScheduleMethod,omitempty"`
	RoundingSettings             *LoanProductRequest_ScheduleSettings_RoundingSettings            `protobuf:"bytes,13,opt,name=roundingSettings,proto3" json:"roundingSettings,omitempty"`
	ScheduleDueDatesMethod       string                                                           `protobuf:"bytes,14,opt,name=scheduleDueDatesMethod,proto3" json:"scheduleDueDatesMethod,omitempty"`
	ShortMonthHandlingMethod     string                                                           `protobuf:"bytes,15,opt,name=shortMonthHandlingMethod,proto3" json:"shortMonthHandlingMethod,omitempty"`
}

func (x *LoanProductRequest_ScheduleSettings) Reset() {
	*x = LoanProductRequest_ScheduleSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_ScheduleSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_ScheduleSettings) ProtoMessage() {}

func (x *LoanProductRequest_ScheduleSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_ScheduleSettings.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_ScheduleSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 17}
}

func (x *LoanProductRequest_ScheduleSettings) GetBillingCycles() *LoanProductRequest_ScheduleSettings_BillingCycles {
	if x != nil {
		return x.BillingCycles
	}
	return nil
}

func (x *LoanProductRequest_ScheduleSettings) GetDefaultRepaymentPeriodCount() uint32 {
	if x != nil {
		return x.DefaultRepaymentPeriodCount
	}
	return 0
}

func (x *LoanProductRequest_ScheduleSettings) GetFirstRepaymentDueDateOffset() *LoanProductRequest_ScheduleSettings_FirstRepaymentDueDateOffset {
	if x != nil {
		return x.FirstRepaymentDueDateOffset
	}
	return nil
}

func (x *LoanProductRequest_ScheduleSettings) GetFixedDaysOfMonth() []int64 {
	if x != nil {
		return x.FixedDaysOfMonth
	}
	return nil
}

func (x *LoanProductRequest_ScheduleSettings) GetInterestAccrualSince() string {
	if x != nil {
		return x.InterestAccrualSince
	}
	return ""
}

func (x *LoanProductRequest_ScheduleSettings) GetNumInstallments() *LoanProductRequest_ScheduleSettings_NumInstallments {
	if x != nil {
		return x.NumInstallments
	}
	return nil
}

func (x *LoanProductRequest_ScheduleSettings) GetPreviewSchedule() *LoanProductRequest_ScheduleSettings_PreviewSchedule {
	if x != nil {
		return x.PreviewSchedule
	}
	return nil
}

func (x *LoanProductRequest_ScheduleSettings) GetRepaymentMethod() string {
	if x != nil {
		return x.RepaymentMethod
	}
	return ""
}

func (x *LoanProductRequest_ScheduleSettings) GetRepaymentPeriodUnit() string {
	if x != nil {
		return x.RepaymentPeriodUnit
	}
	return ""
}

func (x *LoanProductRequest_ScheduleSettings) GetRepaymentReschedulingMethod() string {
	if x != nil {
		return x.RepaymentReschedulingMethod
	}
	return ""
}

func (x *LoanProductRequest_ScheduleSettings) GetRepaymentScheduleEditOptions() []string {
	if x != nil {
		return x.RepaymentScheduleEditOptions
	}
	return nil
}

func (x *LoanProductRequest_ScheduleSettings) GetRepaymentScheduleMethod() string {
	if x != nil {
		return x.RepaymentScheduleMethod
	}
	return ""
}

func (x *LoanProductRequest_ScheduleSettings) GetRoundingSettings() *LoanProductRequest_ScheduleSettings_RoundingSettings {
	if x != nil {
		return x.RoundingSettings
	}
	return nil
}

func (x *LoanProductRequest_ScheduleSettings) GetScheduleDueDatesMethod() string {
	if x != nil {
		return x.ScheduleDueDatesMethod
	}
	return ""
}

func (x *LoanProductRequest_ScheduleSettings) GetShortMonthHandlingMethod() string {
	if x != nil {
		return x.ShortMonthHandlingMethod
	}
	return ""
}

type LoanProductRequest_SecuritySettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsCollateralEnabled bool   `protobuf:"varint,1,opt,name=isCollateralEnabled,proto3" json:"isCollateralEnabled,omitempty"`
	IsGuarantorsEnabled bool   `protobuf:"varint,2,opt,name=isGuarantorsEnabled,proto3" json:"isGuarantorsEnabled,omitempty"`
	RequiredGuaranties  uint32 `protobuf:"varint,3,opt,name=requiredGuaranties,proto3" json:"requiredGuaranties,omitempty"`
}

func (x *LoanProductRequest_SecuritySettings) Reset() {
	*x = LoanProductRequest_SecuritySettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_SecuritySettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_SecuritySettings) ProtoMessage() {}

func (x *LoanProductRequest_SecuritySettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_SecuritySettings.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_SecuritySettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 18}
}

func (x *LoanProductRequest_SecuritySettings) GetIsCollateralEnabled() bool {
	if x != nil {
		return x.IsCollateralEnabled
	}
	return false
}

func (x *LoanProductRequest_SecuritySettings) GetIsGuarantorsEnabled() bool {
	if x != nil {
		return x.IsGuarantorsEnabled
	}
	return false
}

func (x *LoanProductRequest_SecuritySettings) GetRequiredGuaranties() uint32 {
	if x != nil {
		return x.RequiredGuaranties
	}
	return 0
}

type LoanProductRequest_TaxSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaxCalculationMethod   string `protobuf:"bytes,1,opt,name=taxCalculationMethod,proto3" json:"taxCalculationMethod,omitempty"`
	TaxSourceKey           string `protobuf:"bytes,2,opt,name=taxSourceKey,proto3" json:"taxSourceKey,omitempty"`
	TaxesOnFeesEnabled     bool   `protobuf:"varint,3,opt,name=taxesOnFeesEnabled,proto3" json:"taxesOnFeesEnabled,omitempty"`
	TaxesOnInterestEnabled bool   `protobuf:"varint,4,opt,name=taxesOnInterestEnabled,proto3" json:"taxesOnInterestEnabled,omitempty"`
	TaxesOnPenaltyEnabled  bool   `protobuf:"varint,5,opt,name=taxesOnPenaltyEnabled,proto3" json:"taxesOnPenaltyEnabled,omitempty"`
}

func (x *LoanProductRequest_TaxSettings) Reset() {
	*x = LoanProductRequest_TaxSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_TaxSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_TaxSettings) ProtoMessage() {}

func (x *LoanProductRequest_TaxSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_TaxSettings.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_TaxSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 19}
}

func (x *LoanProductRequest_TaxSettings) GetTaxCalculationMethod() string {
	if x != nil {
		return x.TaxCalculationMethod
	}
	return ""
}

func (x *LoanProductRequest_TaxSettings) GetTaxSourceKey() string {
	if x != nil {
		return x.TaxSourceKey
	}
	return ""
}

func (x *LoanProductRequest_TaxSettings) GetTaxesOnFeesEnabled() bool {
	if x != nil {
		return x.TaxesOnFeesEnabled
	}
	return false
}

func (x *LoanProductRequest_TaxSettings) GetTaxesOnInterestEnabled() bool {
	if x != nil {
		return x.TaxesOnInterestEnabled
	}
	return false
}

func (x *LoanProductRequest_TaxSettings) GetTaxesOnPenaltyEnabled() bool {
	if x != nil {
		return x.TaxesOnPenaltyEnabled
	}
	return false
}

type LoanProductRequest_Templates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *LoanProductRequest_Templates) Reset() {
	*x = LoanProductRequest_Templates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_Templates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_Templates) ProtoMessage() {}

func (x *LoanProductRequest_Templates) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_Templates.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_Templates) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 20}
}

func (x *LoanProductRequest_Templates) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LoanProductRequest_Templates) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type LoanProductRequest_AccountingSettings_AccountingRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinancialResource     string `protobuf:"bytes,1,opt,name=financialResource,proto3" json:"financialResource,omitempty"`
	GlAccountKey          string `protobuf:"bytes,2,opt,name=glAccountKey,proto3" json:"glAccountKey,omitempty"`
	TransactionChannelKey string `protobuf:"bytes,3,opt,name=transactionChannelKey,proto3" json:"transactionChannelKey,omitempty"`
}

func (x *LoanProductRequest_AccountingSettings_AccountingRules) Reset() {
	*x = LoanProductRequest_AccountingSettings_AccountingRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_AccountingSettings_AccountingRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_AccountingSettings_AccountingRules) ProtoMessage() {}

func (x *LoanProductRequest_AccountingSettings_AccountingRules) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_AccountingSettings_AccountingRules.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_AccountingSettings_AccountingRules) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 1, 0}
}

func (x *LoanProductRequest_AccountingSettings_AccountingRules) GetFinancialResource() string {
	if x != nil {
		return x.FinancialResource
	}
	return ""
}

func (x *LoanProductRequest_AccountingSettings_AccountingRules) GetGlAccountKey() string {
	if x != nil {
		return x.GlAccountKey
	}
	return ""
}

func (x *LoanProductRequest_AccountingSettings_AccountingRules) GetTransactionChannelKey() string {
	if x != nil {
		return x.TransactionChannelKey
	}
	return ""
}

type LoanProductRequest_ArrearsSettings_TolerancePercentageOfOutstandingPrincipal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue float64 `protobuf:"fixed64,1,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	MaxValue     float64 `protobuf:"fixed64,2,opt,name=maxValue,proto3" json:"maxValue,omitempty"`
	MinValue     float64 `protobuf:"fixed64,3,opt,name=minValue,proto3" json:"minValue,omitempty"`
}

func (x *LoanProductRequest_ArrearsSettings_TolerancePercentageOfOutstandingPrincipal) Reset() {
	*x = LoanProductRequest_ArrearsSettings_TolerancePercentageOfOutstandingPrincipal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_ArrearsSettings_TolerancePercentageOfOutstandingPrincipal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_ArrearsSettings_TolerancePercentageOfOutstandingPrincipal) ProtoMessage() {}

func (x *LoanProductRequest_ArrearsSettings_TolerancePercentageOfOutstandingPrincipal) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_ArrearsSettings_TolerancePercentageOfOutstandingPrincipal.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_ArrearsSettings_TolerancePercentageOfOutstandingPrincipal) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 2, 0}
}

func (x *LoanProductRequest_ArrearsSettings_TolerancePercentageOfOutstandingPrincipal) GetDefaultValue() float64 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *LoanProductRequest_ArrearsSettings_TolerancePercentageOfOutstandingPrincipal) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *LoanProductRequest_ArrearsSettings_TolerancePercentageOfOutstandingPrincipal) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

type LoanProductRequest_ArrearsSettings_TolerancePeriod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue float64 `protobuf:"fixed64,1,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	MaxValue     float64 `protobuf:"fixed64,2,opt,name=maxValue,proto3" json:"maxValue,omitempty"`
	MinValue     float64 `protobuf:"fixed64,3,opt,name=minValue,proto3" json:"minValue,omitempty"`
}

func (x *LoanProductRequest_ArrearsSettings_TolerancePeriod) Reset() {
	*x = LoanProductRequest_ArrearsSettings_TolerancePeriod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_ArrearsSettings_TolerancePeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_ArrearsSettings_TolerancePeriod) ProtoMessage() {}

func (x *LoanProductRequest_ArrearsSettings_TolerancePeriod) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_ArrearsSettings_TolerancePeriod.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_ArrearsSettings_TolerancePeriod) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 2, 1}
}

func (x *LoanProductRequest_ArrearsSettings_TolerancePeriod) GetDefaultValue() float64 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *LoanProductRequest_ArrearsSettings_TolerancePeriod) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *LoanProductRequest_ArrearsSettings_TolerancePeriod) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

type LoanProductRequest_AvailabilitySettings_BranchSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableProductBranches []string `protobuf:"bytes,1,rep,name=availableProductBranches,proto3" json:"availableProductBranches,omitempty"`
	ForAllBranches           bool     `protobuf:"varint,2,opt,name=forAllBranches,proto3" json:"forAllBranches,omitempty"`
}

func (x *LoanProductRequest_AvailabilitySettings_BranchSettings) Reset() {
	*x = LoanProductRequest_AvailabilitySettings_BranchSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_AvailabilitySettings_BranchSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_AvailabilitySettings_BranchSettings) ProtoMessage() {}

func (x *LoanProductRequest_AvailabilitySettings_BranchSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_AvailabilitySettings_BranchSettings.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_AvailabilitySettings_BranchSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 3, 0}
}

func (x *LoanProductRequest_AvailabilitySettings_BranchSettings) GetAvailableProductBranches() []string {
	if x != nil {
		return x.AvailableProductBranches
	}
	return nil
}

func (x *LoanProductRequest_AvailabilitySettings_BranchSettings) GetForAllBranches() bool {
	if x != nil {
		return x.ForAllBranches
	}
	return false
}

type LoanProductRequest_FeesSettings_Fees struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountingRules               []*LoanProductRequest_FeesSettings_Fees_AccountingRules    `protobuf:"bytes,1,rep,name=accountingRules,proto3" json:"accountingRules,omitempty"`
	AmortizationSettings          *LoanProductRequest_FeesSettings_Fees_AmortizationSettings `protobuf:"bytes,2,opt,name=amortizationSettings,proto3" json:"amortizationSettings,omitempty"`
	Amount                        float64                                                    `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	AmountCalculationFunctionName string                                                     `protobuf:"bytes,4,opt,name=amountCalculationFunctionName,proto3" json:"amountCalculationFunctionName,omitempty"`
	AmountCalculationMethod       string                                                     `protobuf:"bytes,5,opt,name=amountCalculationMethod,proto3" json:"amountCalculationMethod,omitempty"`
	ApplyDateMethod               string                                                     `protobuf:"bytes,6,opt,name=applyDateMethod,proto3" json:"applyDateMethod,omitempty"`
	CreationDate                  string                                                     `protobuf:"bytes,7,opt,name=creationDate,proto3" json:"creationDate,omitempty"`
	FeeApplication                string                                                     `protobuf:"bytes,8,opt,name=feeApplication,proto3" json:"feeApplication,omitempty"`
	Id                            string                                                     `protobuf:"bytes,9,opt,name=id,proto3" json:"id,omitempty"`
	LastModifiedDate              string                                                     `protobuf:"bytes,10,opt,name=lastModifiedDate,proto3" json:"lastModifiedDate,omitempty"`
	Name                          string                                                     `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	PercentageAmount              float64                                                    `protobuf:"fixed64,12,opt,name=percentageAmount,proto3" json:"percentageAmount,omitempty"`
	State                         string                                                     `protobuf:"bytes,13,opt,name=state,proto3" json:"state,omitempty"`
	TaxSettings                   *LoanProductRequest_FeesSettings_Fees_TaxSettings          `protobuf:"bytes,14,opt,name=taxSettings,proto3" json:"taxSettings,omitempty"`
	Trigger                       string                                                     `protobuf:"bytes,15,opt,name=trigger,proto3" json:"trigger,omitempty"`
}

func (x *LoanProductRequest_FeesSettings_Fees) Reset() {
	*x = LoanProductRequest_FeesSettings_Fees{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_FeesSettings_Fees) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_FeesSettings_Fees) ProtoMessage() {}

func (x *LoanProductRequest_FeesSettings_Fees) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_FeesSettings_Fees.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_FeesSettings_Fees) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 6, 0}
}

func (x *LoanProductRequest_FeesSettings_Fees) GetAccountingRules() []*LoanProductRequest_FeesSettings_Fees_AccountingRules {
	if x != nil {
		return x.AccountingRules
	}
	return nil
}

func (x *LoanProductRequest_FeesSettings_Fees) GetAmortizationSettings() *LoanProductRequest_FeesSettings_Fees_AmortizationSettings {
	if x != nil {
		return x.AmortizationSettings
	}
	return nil
}

func (x *LoanProductRequest_FeesSettings_Fees) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *LoanProductRequest_FeesSettings_Fees) GetAmountCalculationFunctionName() string {
	if x != nil {
		return x.AmountCalculationFunctionName
	}
	return ""
}

func (x *LoanProductRequest_FeesSettings_Fees) GetAmountCalculationMethod() string {
	if x != nil {
		return x.AmountCalculationMethod
	}
	return ""
}

func (x *LoanProductRequest_FeesSettings_Fees) GetApplyDateMethod() string {
	if x != nil {
		return x.ApplyDateMethod
	}
	return ""
}

func (x *LoanProductRequest_FeesSettings_Fees) GetCreationDate() string {
	if x != nil {
		return x.CreationDate
	}
	return ""
}

func (x *LoanProductRequest_FeesSettings_Fees) GetFeeApplication() string {
	if x != nil {
		return x.FeeApplication
	}
	return ""
}

func (x *LoanProductRequest_FeesSettings_Fees) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LoanProductRequest_FeesSettings_Fees) GetLastModifiedDate() string {
	if x != nil {
		return x.LastModifiedDate
	}
	return ""
}

func (x *LoanProductRequest_FeesSettings_Fees) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LoanProductRequest_FeesSettings_Fees) GetPercentageAmount() float64 {
	if x != nil {
		return x.PercentageAmount
	}
	return 0
}

func (x *LoanProductRequest_FeesSettings_Fees) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *LoanProductRequest_FeesSettings_Fees) GetTaxSettings() *LoanProductRequest_FeesSettings_Fees_TaxSettings {
	if x != nil {
		return x.TaxSettings
	}
	return nil
}

func (x *LoanProductRequest_FeesSettings_Fees) GetTrigger() string {
	if x != nil {
		return x.Trigger
	}
	return ""
}

type LoanProductRequest_FeesSettings_Fees_AccountingRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinancialResource     string `protobuf:"bytes,1,opt,name=financialResource,proto3" json:"financialResource,omitempty"`
	GlAccountKey          string `protobuf:"bytes,2,opt,name=glAccountKey,proto3" json:"glAccountKey,omitempty"`
	TransactionChannelKey string `protobuf:"bytes,3,opt,name=transactionChannelKey,proto3" json:"transactionChannelKey,omitempty"`
}

func (x *LoanProductRequest_FeesSettings_Fees_AccountingRules) Reset() {
	*x = LoanProductRequest_FeesSettings_Fees_AccountingRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_FeesSettings_Fees_AccountingRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_FeesSettings_Fees_AccountingRules) ProtoMessage() {}

func (x *LoanProductRequest_FeesSettings_Fees_AccountingRules) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_FeesSettings_Fees_AccountingRules.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_FeesSettings_Fees_AccountingRules) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 6, 0, 0}
}

func (x *LoanProductRequest_FeesSettings_Fees_AccountingRules) GetFinancialResource() string {
	if x != nil {
		return x.FinancialResource
	}
	return ""
}

func (x *LoanProductRequest_FeesSettings_Fees_AccountingRules) GetGlAccountKey() string {
	if x != nil {
		return x.GlAccountKey
	}
	return ""
}

func (x *LoanProductRequest_FeesSettings_Fees_AccountingRules) GetTransactionChannelKey() string {
	if x != nil {
		return x.TransactionChannelKey
	}
	return ""
}

type LoanProductRequest_FeesSettings_Fees_AmortizationSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AmortizationProfile                          string `protobuf:"bytes,1,opt,name=amortizationProfile,proto3" json:"amortizationProfile,omitempty"`
	FeeAmortizationUponRescheduleRefinanceOption string `protobuf:"bytes,2,opt,name=feeAmortizationUponRescheduleRefinanceOption,proto3" json:"feeAmortizationUponRescheduleRefinanceOption,omitempty"`
	Frequency                                    string `protobuf:"bytes,3,opt,name=frequency,proto3" json:"frequency,omitempty"`
	IntervalCount                                uint32 `protobuf:"varint,4,opt,name=intervalCount,proto3" json:"intervalCount,omitempty"`
	IntervalType                                 string `protobuf:"bytes,5,opt,name=intervalType,proto3" json:"intervalType,omitempty"`
	PeriodCount                                  uint32 `protobuf:"varint,6,opt,name=periodCount,proto3" json:"periodCount,omitempty"`
	PeriodUnit                                   string `protobuf:"bytes,7,opt,name=periodUnit,proto3" json:"periodUnit,omitempty"`
}

func (x *LoanProductRequest_FeesSettings_Fees_AmortizationSettings) Reset() {
	*x = LoanProductRequest_FeesSettings_Fees_AmortizationSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_FeesSettings_Fees_AmortizationSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_FeesSettings_Fees_AmortizationSettings) ProtoMessage() {}

func (x *LoanProductRequest_FeesSettings_Fees_AmortizationSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_FeesSettings_Fees_AmortizationSettings.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_FeesSettings_Fees_AmortizationSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 6, 0, 1}
}

func (x *LoanProductRequest_FeesSettings_Fees_AmortizationSettings) GetAmortizationProfile() string {
	if x != nil {
		return x.AmortizationProfile
	}
	return ""
}

func (x *LoanProductRequest_FeesSettings_Fees_AmortizationSettings) GetFeeAmortizationUponRescheduleRefinanceOption() string {
	if x != nil {
		return x.FeeAmortizationUponRescheduleRefinanceOption
	}
	return ""
}

func (x *LoanProductRequest_FeesSettings_Fees_AmortizationSettings) GetFrequency() string {
	if x != nil {
		return x.Frequency
	}
	return ""
}

func (x *LoanProductRequest_FeesSettings_Fees_AmortizationSettings) GetIntervalCount() uint32 {
	if x != nil {
		return x.IntervalCount
	}
	return 0
}

func (x *LoanProductRequest_FeesSettings_Fees_AmortizationSettings) GetIntervalType() string {
	if x != nil {
		return x.IntervalType
	}
	return ""
}

func (x *LoanProductRequest_FeesSettings_Fees_AmortizationSettings) GetPeriodCount() uint32 {
	if x != nil {
		return x.PeriodCount
	}
	return 0
}

func (x *LoanProductRequest_FeesSettings_Fees_AmortizationSettings) GetPeriodUnit() string {
	if x != nil {
		return x.PeriodUnit
	}
	return ""
}

type LoanProductRequest_FeesSettings_Fees_TaxSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaxableCalculationMethod string `protobuf:"bytes,1,opt,name=taxableCalculationMethod,proto3" json:"taxableCalculationMethod,omitempty"`
}

func (x *LoanProductRequest_FeesSettings_Fees_TaxSettings) Reset() {
	*x = LoanProductRequest_FeesSettings_Fees_TaxSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_FeesSettings_Fees_TaxSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_FeesSettings_Fees_TaxSettings) ProtoMessage() {}

func (x *LoanProductRequest_FeesSettings_Fees_TaxSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_FeesSettings_Fees_TaxSettings.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_FeesSettings_Fees_TaxSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 6, 0, 2}
}

func (x *LoanProductRequest_FeesSettings_Fees_TaxSettings) GetTaxableCalculationMethod() string {
	if x != nil {
		return x.TaxableCalculationMethod
	}
	return ""
}

type LoanProductRequest_FundingSettings_FunderInterestCommission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue float64 `protobuf:"fixed64,1,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	MaxValue     float64 `protobuf:"fixed64,2,opt,name=maxValue,proto3" json:"maxValue,omitempty"`
	MinValue     float64 `protobuf:"fixed64,3,opt,name=minValue,proto3" json:"minValue,omitempty"`
}

func (x *LoanProductRequest_FundingSettings_FunderInterestCommission) Reset() {
	*x = LoanProductRequest_FundingSettings_FunderInterestCommission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_FundingSettings_FunderInterestCommission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_FundingSettings_FunderInterestCommission) ProtoMessage() {}

func (x *LoanProductRequest_FundingSettings_FunderInterestCommission) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_FundingSettings_FunderInterestCommission.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_FundingSettings_FunderInterestCommission) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 7, 0}
}

func (x *LoanProductRequest_FundingSettings_FunderInterestCommission) GetDefaultValue() float64 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *LoanProductRequest_FundingSettings_FunderInterestCommission) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *LoanProductRequest_FundingSettings_FunderInterestCommission) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

type LoanProductRequest_FundingSettings_OrganizationInterestCommission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue float64 `protobuf:"fixed64,1,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	MaxValue     float64 `protobuf:"fixed64,2,opt,name=maxValue,proto3" json:"maxValue,omitempty"`
	MinValue     float64 `protobuf:"fixed64,3,opt,name=minValue,proto3" json:"minValue,omitempty"`
}

func (x *LoanProductRequest_FundingSettings_OrganizationInterestCommission) Reset() {
	*x = LoanProductRequest_FundingSettings_OrganizationInterestCommission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_FundingSettings_OrganizationInterestCommission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_FundingSettings_OrganizationInterestCommission) ProtoMessage() {}

func (x *LoanProductRequest_FundingSettings_OrganizationInterestCommission) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_FundingSettings_OrganizationInterestCommission.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_FundingSettings_OrganizationInterestCommission) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 7, 1}
}

func (x *LoanProductRequest_FundingSettings_OrganizationInterestCommission) GetDefaultValue() float64 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *LoanProductRequest_FundingSettings_OrganizationInterestCommission) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *LoanProductRequest_FundingSettings_OrganizationInterestCommission) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

type LoanProductRequest_GracePeriodSettings_GracePeriod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue float64 `protobuf:"fixed64,1,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	MaxValue     float64 `protobuf:"fixed64,2,opt,name=maxValue,proto3" json:"maxValue,omitempty"`
	MinValue     float64 `protobuf:"fixed64,3,opt,name=minValue,proto3" json:"minValue,omitempty"`
}

func (x *LoanProductRequest_GracePeriodSettings_GracePeriod) Reset() {
	*x = LoanProductRequest_GracePeriodSettings_GracePeriod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_GracePeriodSettings_GracePeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_GracePeriodSettings_GracePeriod) ProtoMessage() {}

func (x *LoanProductRequest_GracePeriodSettings_GracePeriod) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_GracePeriodSettings_GracePeriod.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_GracePeriodSettings_GracePeriod) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 8, 0}
}

func (x *LoanProductRequest_GracePeriodSettings_GracePeriod) GetDefaultValue() float64 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *LoanProductRequest_GracePeriodSettings_GracePeriod) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *LoanProductRequest_GracePeriodSettings_GracePeriod) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

type LoanProductRequest_InterestSettings_IndexRateSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccrueInterestAfterMaturity  bool                                                                       `protobuf:"varint,1,opt,name=accrueInterestAfterMaturity,proto3" json:"accrueInterestAfterMaturity,omitempty"`
	AllowNegativeInterestRate    bool                                                                       `protobuf:"varint,2,opt,name=allowNegativeInterestRate,proto3" json:"allowNegativeInterestRate,omitempty"`
	IndexSourceKey               string                                                                     `protobuf:"bytes,3,opt,name=indexSourceKey,proto3" json:"indexSourceKey,omitempty"`
	InterestChargeFrequency      string                                                                     `protobuf:"bytes,4,opt,name=interestChargeFrequency,proto3" json:"interestChargeFrequency,omitempty"`
	InterestChargeFrequencyCount float64                                                                    `protobuf:"fixed64,5,opt,name=interestChargeFrequencyCount,proto3" json:"interestChargeFrequencyCount,omitempty"`
	InterestRate                 *LoanProductRequest_InterestSettings_IndexRateSettings_InterestRate        `protobuf:"bytes,6,opt,name=interestRate,proto3" json:"interestRate,omitempty"`
	InterestRateCeilingValue     float64                                                                    `protobuf:"fixed64,7,opt,name=interestRateCeilingValue,proto3" json:"interestRateCeilingValue,omitempty"`
	InterestRateFloorValue       float64                                                                    `protobuf:"fixed64,8,opt,name=interestRateFloorValue,proto3" json:"interestRateFloorValue,omitempty"`
	InterestRateReviewCount      float64                                                                    `protobuf:"fixed64,9,opt,name=interestRateReviewCount,proto3" json:"interestRateReviewCount,omitempty"`
	InterestRateReviewUnit       string                                                                     `protobuf:"bytes,10,opt,name=interestRateReviewUnit,proto3" json:"interestRateReviewUnit,omitempty"`
	InterestRateSource           string                                                                     `protobuf:"bytes,11,opt,name=interestRateSource,proto3" json:"interestRateSource,omitempty"`
	InterestRateTerms            string                                                                     `protobuf:"bytes,12,opt,name=interestRateTerms,proto3" json:"interestRateTerms,omitempty"`
	InterestRateTiers            []*LoanProductRequest_InterestSettings_IndexRateSettings_InterestRateTiers `protobuf:"bytes,13,rep,name=interestRateTiers,proto3" json:"interestRateTiers,omitempty"`
}

func (x *LoanProductRequest_InterestSettings_IndexRateSettings) Reset() {
	*x = LoanProductRequest_InterestSettings_IndexRateSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_InterestSettings_IndexRateSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_InterestSettings_IndexRateSettings) ProtoMessage() {}

func (x *LoanProductRequest_InterestSettings_IndexRateSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_InterestSettings_IndexRateSettings.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_InterestSettings_IndexRateSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 9, 0}
}

func (x *LoanProductRequest_InterestSettings_IndexRateSettings) GetAccrueInterestAfterMaturity() bool {
	if x != nil {
		return x.AccrueInterestAfterMaturity
	}
	return false
}

func (x *LoanProductRequest_InterestSettings_IndexRateSettings) GetAllowNegativeInterestRate() bool {
	if x != nil {
		return x.AllowNegativeInterestRate
	}
	return false
}

func (x *LoanProductRequest_InterestSettings_IndexRateSettings) GetIndexSourceKey() string {
	if x != nil {
		return x.IndexSourceKey
	}
	return ""
}

func (x *LoanProductRequest_InterestSettings_IndexRateSettings) GetInterestChargeFrequency() string {
	if x != nil {
		return x.InterestChargeFrequency
	}
	return ""
}

func (x *LoanProductRequest_InterestSettings_IndexRateSettings) GetInterestChargeFrequencyCount() float64 {
	if x != nil {
		return x.InterestChargeFrequencyCount
	}
	return 0
}

func (x *LoanProductRequest_InterestSettings_IndexRateSettings) GetInterestRate() *LoanProductRequest_InterestSettings_IndexRateSettings_InterestRate {
	if x != nil {
		return x.InterestRate
	}
	return nil
}

func (x *LoanProductRequest_InterestSettings_IndexRateSettings) GetInterestRateCeilingValue() float64 {
	if x != nil {
		return x.InterestRateCeilingValue
	}
	return 0
}

func (x *LoanProductRequest_InterestSettings_IndexRateSettings) GetInterestRateFloorValue() float64 {
	if x != nil {
		return x.InterestRateFloorValue
	}
	return 0
}

func (x *LoanProductRequest_InterestSettings_IndexRateSettings) GetInterestRateReviewCount() float64 {
	if x != nil {
		return x.InterestRateReviewCount
	}
	return 0
}

func (x *LoanProductRequest_InterestSettings_IndexRateSettings) GetInterestRateReviewUnit() string {
	if x != nil {
		return x.InterestRateReviewUnit
	}
	return ""
}

func (x *LoanProductRequest_InterestSettings_IndexRateSettings) GetInterestRateSource() string {
	if x != nil {
		return x.InterestRateSource
	}
	return ""
}

func (x *LoanProductRequest_InterestSettings_IndexRateSettings) GetInterestRateTerms() string {
	if x != nil {
		return x.InterestRateTerms
	}
	return ""
}

func (x *LoanProductRequest_InterestSettings_IndexRateSettings) GetInterestRateTiers() []*LoanProductRequest_InterestSettings_IndexRateSettings_InterestRateTiers {
	if x != nil {
		return x.InterestRateTiers
	}
	return nil
}

type LoanProductRequest_InterestSettings_InterestRateSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndexSourceKey           string                                                                 `protobuf:"bytes,1,opt,name=indexSourceKey,proto3" json:"indexSourceKey,omitempty"`
	InterestRate             *LoanProductRequest_InterestSettings_InterestRateSettings_InterestRate `protobuf:"bytes,2,opt,name=interestRate,proto3" json:"interestRate,omitempty"`
	InterestRateCeilingValue float64                                                                `protobuf:"fixed64,3,opt,name=interestRateCeilingValue,proto3" json:"interestRateCeilingValue,omitempty"`
	InterestRateFloorValue   float64                                                                `protobuf:"fixed64,4,opt,name=interestRateFloorValue,proto3" json:"interestRateFloorValue,omitempty"`
	InterestRateReviewCount  float64                                                                `protobuf:"fixed64,5,opt,name=interestRateReviewCount,proto3" json:"interestRateReviewCount,omitempty"`
	InterestRateReviewUnit   string                                                                 `protobuf:"bytes,6,opt,name=interestRateReviewUnit,proto3" json:"interestRateReviewUnit,omitempty"`
	InterestRateSource       string                                                                 `protobuf:"bytes,7,opt,name=interestRateSource,proto3" json:"interestRateSource,omitempty"`
}

func (x *LoanProductRequest_InterestSettings_InterestRateSettings) Reset() {
	*x = LoanProductRequest_InterestSettings_InterestRateSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_InterestSettings_InterestRateSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_InterestSettings_InterestRateSettings) ProtoMessage() {}

func (x *LoanProductRequest_InterestSettings_InterestRateSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_InterestSettings_InterestRateSettings.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_InterestSettings_InterestRateSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 9, 1}
}

func (x *LoanProductRequest_InterestSettings_InterestRateSettings) GetIndexSourceKey() string {
	if x != nil {
		return x.IndexSourceKey
	}
	return ""
}

func (x *LoanProductRequest_InterestSettings_InterestRateSettings) GetInterestRate() *LoanProductRequest_InterestSettings_InterestRateSettings_InterestRate {
	if x != nil {
		return x.InterestRate
	}
	return nil
}

func (x *LoanProductRequest_InterestSettings_InterestRateSettings) GetInterestRateCeilingValue() float64 {
	if x != nil {
		return x.InterestRateCeilingValue
	}
	return 0
}

func (x *LoanProductRequest_InterestSettings_InterestRateSettings) GetInterestRateFloorValue() float64 {
	if x != nil {
		return x.InterestRateFloorValue
	}
	return 0
}

func (x *LoanProductRequest_InterestSettings_InterestRateSettings) GetInterestRateReviewCount() float64 {
	if x != nil {
		return x.InterestRateReviewCount
	}
	return 0
}

func (x *LoanProductRequest_InterestSettings_InterestRateSettings) GetInterestRateReviewUnit() string {
	if x != nil {
		return x.InterestRateReviewUnit
	}
	return ""
}

func (x *LoanProductRequest_InterestSettings_InterestRateSettings) GetInterestRateSource() string {
	if x != nil {
		return x.InterestRateSource
	}
	return ""
}

type LoanProductRequest_InterestSettings_IndexRateSettings_InterestRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue float64 `protobuf:"fixed64,1,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	MaxValue     float64 `protobuf:"fixed64,2,opt,name=maxValue,proto3" json:"maxValue,omitempty"`
	MinValue     float64 `protobuf:"fixed64,3,opt,name=minValue,proto3" json:"minValue,omitempty"`
}

func (x *LoanProductRequest_InterestSettings_IndexRateSettings_InterestRate) Reset() {
	*x = LoanProductRequest_InterestSettings_IndexRateSettings_InterestRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_InterestSettings_IndexRateSettings_InterestRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_InterestSettings_IndexRateSettings_InterestRate) ProtoMessage() {}

func (x *LoanProductRequest_InterestSettings_IndexRateSettings_InterestRate) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_InterestSettings_IndexRateSettings_InterestRate.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_InterestSettings_IndexRateSettings_InterestRate) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 9, 0, 0}
}

func (x *LoanProductRequest_InterestSettings_IndexRateSettings_InterestRate) GetDefaultValue() float64 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *LoanProductRequest_InterestSettings_IndexRateSettings_InterestRate) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *LoanProductRequest_InterestSettings_IndexRateSettings_InterestRate) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

type LoanProductRequest_InterestSettings_IndexRateSettings_InterestRateTiers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndingBalance float64 `protobuf:"fixed64,1,opt,name=endingBalance,proto3" json:"endingBalance,omitempty"`
	InterestRate  float64 `protobuf:"fixed64,2,opt,name=interestRate,proto3" json:"interestRate,omitempty"`
}

func (x *LoanProductRequest_InterestSettings_IndexRateSettings_InterestRateTiers) Reset() {
	*x = LoanProductRequest_InterestSettings_IndexRateSettings_InterestRateTiers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_InterestSettings_IndexRateSettings_InterestRateTiers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_InterestSettings_IndexRateSettings_InterestRateTiers) ProtoMessage() {}

func (x *LoanProductRequest_InterestSettings_IndexRateSettings_InterestRateTiers) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_InterestSettings_IndexRateSettings_InterestRateTiers.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_InterestSettings_IndexRateSettings_InterestRateTiers) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 9, 0, 1}
}

func (x *LoanProductRequest_InterestSettings_IndexRateSettings_InterestRateTiers) GetEndingBalance() float64 {
	if x != nil {
		return x.EndingBalance
	}
	return 0
}

func (x *LoanProductRequest_InterestSettings_IndexRateSettings_InterestRateTiers) GetInterestRate() float64 {
	if x != nil {
		return x.InterestRate
	}
	return 0
}

type LoanProductRequest_InterestSettings_InterestRateSettings_InterestRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue float64 `protobuf:"fixed64,1,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	MaxValue     float64 `protobuf:"fixed64,2,opt,name=maxValue,proto3" json:"maxValue,omitempty"`
	MinValue     float64 `protobuf:"fixed64,3,opt,name=minValue,proto3" json:"minValue,omitempty"`
}

func (x *LoanProductRequest_InterestSettings_InterestRateSettings_InterestRate) Reset() {
	*x = LoanProductRequest_InterestSettings_InterestRateSettings_InterestRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_InterestSettings_InterestRateSettings_InterestRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_InterestSettings_InterestRateSettings_InterestRate) ProtoMessage() {}

func (x *LoanProductRequest_InterestSettings_InterestRateSettings_InterestRate) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_InterestSettings_InterestRateSettings_InterestRate.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_InterestSettings_InterestRateSettings_InterestRate) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 9, 1, 0}
}

func (x *LoanProductRequest_InterestSettings_InterestRateSettings_InterestRate) GetDefaultValue() float64 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *LoanProductRequest_InterestSettings_InterestRateSettings_InterestRate) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *LoanProductRequest_InterestSettings_InterestRateSettings_InterestRate) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

type LoanProductRequest_InternalControls_FourEyesPrinciple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActiveForLoanApproval bool `protobuf:"varint,1,opt,name=activeForLoanApproval,proto3" json:"activeForLoanApproval,omitempty"`
}

func (x *LoanProductRequest_InternalControls_FourEyesPrinciple) Reset() {
	*x = LoanProductRequest_InternalControls_FourEyesPrinciple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_InternalControls_FourEyesPrinciple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_InternalControls_FourEyesPrinciple) ProtoMessage() {}

func (x *LoanProductRequest_InternalControls_FourEyesPrinciple) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_InternalControls_FourEyesPrinciple.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_InternalControls_FourEyesPrinciple) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 10, 0}
}

func (x *LoanProductRequest_InternalControls_FourEyesPrinciple) GetActiveForLoanApproval() bool {
	if x != nil {
		return x.ActiveForLoanApproval
	}
	return false
}

type LoanProductRequest_InternalControls_LockSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CappingConstraintType string  `protobuf:"bytes,1,opt,name=cappingConstraintType,proto3" json:"cappingConstraintType,omitempty"`
	CappingMethod         string  `protobuf:"bytes,2,opt,name=cappingMethod,proto3" json:"cappingMethod,omitempty"`
	CappingPercentage     float64 `protobuf:"fixed64,3,opt,name=cappingPercentage,proto3" json:"cappingPercentage,omitempty"`
	LockPeriodDays        float64 `protobuf:"fixed64,4,opt,name=lockPeriodDays,proto3" json:"lockPeriodDays,omitempty"`
}

func (x *LoanProductRequest_InternalControls_LockSettings) Reset() {
	*x = LoanProductRequest_InternalControls_LockSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_InternalControls_LockSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_InternalControls_LockSettings) ProtoMessage() {}

func (x *LoanProductRequest_InternalControls_LockSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_InternalControls_LockSettings.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_InternalControls_LockSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 10, 1}
}

func (x *LoanProductRequest_InternalControls_LockSettings) GetCappingConstraintType() string {
	if x != nil {
		return x.CappingConstraintType
	}
	return ""
}

func (x *LoanProductRequest_InternalControls_LockSettings) GetCappingMethod() string {
	if x != nil {
		return x.CappingMethod
	}
	return ""
}

func (x *LoanProductRequest_InternalControls_LockSettings) GetCappingPercentage() float64 {
	if x != nil {
		return x.CappingPercentage
	}
	return 0
}

func (x *LoanProductRequest_InternalControls_LockSettings) GetLockPeriodDays() float64 {
	if x != nil {
		return x.LockPeriodDays
	}
	return 0
}

type LoanProductRequest_LoanAmountSettings_LoanAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue float64 `protobuf:"fixed64,1,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	MaxValue     float64 `protobuf:"fixed64,2,opt,name=maxValue,proto3" json:"maxValue,omitempty"`
	MinValue     float64 `protobuf:"fixed64,3,opt,name=minValue,proto3" json:"minValue,omitempty"`
}

func (x *LoanProductRequest_LoanAmountSettings_LoanAmount) Reset() {
	*x = LoanProductRequest_LoanAmountSettings_LoanAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_LoanAmountSettings_LoanAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_LoanAmountSettings_LoanAmount) ProtoMessage() {}

func (x *LoanProductRequest_LoanAmountSettings_LoanAmount) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_LoanAmountSettings_LoanAmount.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_LoanAmountSettings_LoanAmount) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 11, 0}
}

func (x *LoanProductRequest_LoanAmountSettings_LoanAmount) GetDefaultValue() float64 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *LoanProductRequest_LoanAmountSettings_LoanAmount) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *LoanProductRequest_LoanAmountSettings_LoanAmount) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

type LoanProductRequest_LoanAmountSettings_TrancheSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxNumberOfTranches float64 `protobuf:"fixed64,1,opt,name=maxNumberOfTranches,proto3" json:"maxNumberOfTranches,omitempty"`
}

func (x *LoanProductRequest_LoanAmountSettings_TrancheSettings) Reset() {
	*x = LoanProductRequest_LoanAmountSettings_TrancheSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_LoanAmountSettings_TrancheSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_LoanAmountSettings_TrancheSettings) ProtoMessage() {}

func (x *LoanProductRequest_LoanAmountSettings_TrancheSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_LoanAmountSettings_TrancheSettings.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_LoanAmountSettings_TrancheSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 11, 1}
}

func (x *LoanProductRequest_LoanAmountSettings_TrancheSettings) GetMaxNumberOfTranches() float64 {
	if x != nil {
		return x.MaxNumberOfTranches
	}
	return 0
}

type LoanProductRequest_PaymentSettings_PrepaymentSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplyInterestOnPrepaymentMethod string `protobuf:"bytes,1,opt,name=applyInterestOnPrepaymentMethod,proto3" json:"applyInterestOnPrepaymentMethod,omitempty"`
	ElementsRecalculationMethod     string `protobuf:"bytes,2,opt,name=elementsRecalculationMethod,proto3" json:"elementsRecalculationMethod,omitempty"`
	FuturePaymentsAcceptance        string `protobuf:"bytes,3,opt,name=futurePaymentsAcceptance,proto3" json:"futurePaymentsAcceptance,omitempty"`
	PrepaymentAcceptance            string `protobuf:"bytes,4,opt,name=prepaymentAcceptance,proto3" json:"prepaymentAcceptance,omitempty"`
	PrepaymentRecalculationMethod   string `protobuf:"bytes,5,opt,name=prepaymentRecalculationMethod,proto3" json:"prepaymentRecalculationMethod,omitempty"`
	PrincipalPaidInstallmentStatus  string `protobuf:"bytes,6,opt,name=principalPaidInstallmentStatus,proto3" json:"principalPaidInstallmentStatus,omitempty"`
}

func (x *LoanProductRequest_PaymentSettings_PrepaymentSettings) Reset() {
	*x = LoanProductRequest_PaymentSettings_PrepaymentSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_PaymentSettings_PrepaymentSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_PaymentSettings_PrepaymentSettings) ProtoMessage() {}

func (x *LoanProductRequest_PaymentSettings_PrepaymentSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_PaymentSettings_PrepaymentSettings.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_PaymentSettings_PrepaymentSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 14, 0}
}

func (x *LoanProductRequest_PaymentSettings_PrepaymentSettings) GetApplyInterestOnPrepaymentMethod() string {
	if x != nil {
		return x.ApplyInterestOnPrepaymentMethod
	}
	return ""
}

func (x *LoanProductRequest_PaymentSettings_PrepaymentSettings) GetElementsRecalculationMethod() string {
	if x != nil {
		return x.ElementsRecalculationMethod
	}
	return ""
}

func (x *LoanProductRequest_PaymentSettings_PrepaymentSettings) GetFuturePaymentsAcceptance() string {
	if x != nil {
		return x.FuturePaymentsAcceptance
	}
	return ""
}

func (x *LoanProductRequest_PaymentSettings_PrepaymentSettings) GetPrepaymentAcceptance() string {
	if x != nil {
		return x.PrepaymentAcceptance
	}
	return ""
}

func (x *LoanProductRequest_PaymentSettings_PrepaymentSettings) GetPrepaymentRecalculationMethod() string {
	if x != nil {
		return x.PrepaymentRecalculationMethod
	}
	return ""
}

func (x *LoanProductRequest_PaymentSettings_PrepaymentSettings) GetPrincipalPaidInstallmentStatus() string {
	if x != nil {
		return x.PrincipalPaidInstallmentStatus
	}
	return ""
}

type LoanProductRequest_PaymentSettings_PrincipalPaymentSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount                            *LoanProductRequest_PaymentSettings_PrincipalPaymentSettings_Amount     `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	DefaultPrincipalRepaymentInterval float64                                                                 `protobuf:"fixed64,2,opt,name=defaultPrincipalRepaymentInterval,proto3" json:"defaultPrincipalRepaymentInterval,omitempty"`
	IncludeFeesInFloorAmount          bool                                                                    `protobuf:"varint,3,opt,name=includeFeesInFloorAmount,proto3" json:"includeFeesInFloorAmount,omitempty"`
	IncludeInterestInFloorAmount      bool                                                                    `protobuf:"varint,4,opt,name=includeInterestInFloorAmount,proto3" json:"includeInterestInFloorAmount,omitempty"`
	Percentage                        *LoanProductRequest_PaymentSettings_PrincipalPaymentSettings_Percentage `protobuf:"bytes,5,opt,name=percentage,proto3" json:"percentage,omitempty"`
	PrincipalCeilingValue             float64                                                                 `protobuf:"fixed64,6,opt,name=principalCeilingValue,proto3" json:"principalCeilingValue,omitempty"`
	PrincipalFloorValue               float64                                                                 `protobuf:"fixed64,7,opt,name=principalFloorValue,proto3" json:"principalFloorValue,omitempty"`
	PrincipalPaymentMethod            string                                                                  `protobuf:"bytes,8,opt,name=principalPaymentMethod,proto3" json:"principalPaymentMethod,omitempty"`
	TotalDueAmountFloor               float64                                                                 `protobuf:"fixed64,9,opt,name=totalDueAmountFloor,proto3" json:"totalDueAmountFloor,omitempty"`
	TotalDuePayment                   string                                                                  `protobuf:"bytes,10,opt,name=totalDuePayment,proto3" json:"totalDuePayment,omitempty"`
}

func (x *LoanProductRequest_PaymentSettings_PrincipalPaymentSettings) Reset() {
	*x = LoanProductRequest_PaymentSettings_PrincipalPaymentSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_PaymentSettings_PrincipalPaymentSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_PaymentSettings_PrincipalPaymentSettings) ProtoMessage() {}

func (x *LoanProductRequest_PaymentSettings_PrincipalPaymentSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_PaymentSettings_PrincipalPaymentSettings.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_PaymentSettings_PrincipalPaymentSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 14, 1}
}

func (x *LoanProductRequest_PaymentSettings_PrincipalPaymentSettings) GetAmount() *LoanProductRequest_PaymentSettings_PrincipalPaymentSettings_Amount {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *LoanProductRequest_PaymentSettings_PrincipalPaymentSettings) GetDefaultPrincipalRepaymentInterval() float64 {
	if x != nil {
		return x.DefaultPrincipalRepaymentInterval
	}
	return 0
}

func (x *LoanProductRequest_PaymentSettings_PrincipalPaymentSettings) GetIncludeFeesInFloorAmount() bool {
	if x != nil {
		return x.IncludeFeesInFloorAmount
	}
	return false
}

func (x *LoanProductRequest_PaymentSettings_PrincipalPaymentSettings) GetIncludeInterestInFloorAmount() bool {
	if x != nil {
		return x.IncludeInterestInFloorAmount
	}
	return false
}

func (x *LoanProductRequest_PaymentSettings_PrincipalPaymentSettings) GetPercentage() *LoanProductRequest_PaymentSettings_PrincipalPaymentSettings_Percentage {
	if x != nil {
		return x.Percentage
	}
	return nil
}

func (x *LoanProductRequest_PaymentSettings_PrincipalPaymentSettings) GetPrincipalCeilingValue() float64 {
	if x != nil {
		return x.PrincipalCeilingValue
	}
	return 0
}

func (x *LoanProductRequest_PaymentSettings_PrincipalPaymentSettings) GetPrincipalFloorValue() float64 {
	if x != nil {
		return x.PrincipalFloorValue
	}
	return 0
}

func (x *LoanProductRequest_PaymentSettings_PrincipalPaymentSettings) GetPrincipalPaymentMethod() string {
	if x != nil {
		return x.PrincipalPaymentMethod
	}
	return ""
}

func (x *LoanProductRequest_PaymentSettings_PrincipalPaymentSettings) GetTotalDueAmountFloor() float64 {
	if x != nil {
		return x.TotalDueAmountFloor
	}
	return 0
}

func (x *LoanProductRequest_PaymentSettings_PrincipalPaymentSettings) GetTotalDuePayment() string {
	if x != nil {
		return x.TotalDuePayment
	}
	return ""
}

type LoanProductRequest_PaymentSettings_PrincipalPaymentSettings_Amount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue float64 `protobuf:"fixed64,1,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	MaxValue     float64 `protobuf:"fixed64,2,opt,name=maxValue,proto3" json:"maxValue,omitempty"`
	MinValue     float64 `protobuf:"fixed64,3,opt,name=minValue,proto3" json:"minValue,omitempty"`
}

func (x *LoanProductRequest_PaymentSettings_PrincipalPaymentSettings_Amount) Reset() {
	*x = LoanProductRequest_PaymentSettings_PrincipalPaymentSettings_Amount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_PaymentSettings_PrincipalPaymentSettings_Amount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_PaymentSettings_PrincipalPaymentSettings_Amount) ProtoMessage() {}

func (x *LoanProductRequest_PaymentSettings_PrincipalPaymentSettings_Amount) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_PaymentSettings_PrincipalPaymentSettings_Amount.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_PaymentSettings_PrincipalPaymentSettings_Amount) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 14, 1, 0}
}

func (x *LoanProductRequest_PaymentSettings_PrincipalPaymentSettings_Amount) GetDefaultValue() float64 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *LoanProductRequest_PaymentSettings_PrincipalPaymentSettings_Amount) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *LoanProductRequest_PaymentSettings_PrincipalPaymentSettings_Amount) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

type LoanProductRequest_PaymentSettings_PrincipalPaymentSettings_Percentage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue float64 `protobuf:"fixed64,1,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	MaxValue     float64 `protobuf:"fixed64,2,opt,name=maxValue,proto3" json:"maxValue,omitempty"`
	MinValue     float64 `protobuf:"fixed64,3,opt,name=minValue,proto3" json:"minValue,omitempty"`
}

func (x *LoanProductRequest_PaymentSettings_PrincipalPaymentSettings_Percentage) Reset() {
	*x = LoanProductRequest_PaymentSettings_PrincipalPaymentSettings_Percentage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_PaymentSettings_PrincipalPaymentSettings_Percentage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_PaymentSettings_PrincipalPaymentSettings_Percentage) ProtoMessage() {}

func (x *LoanProductRequest_PaymentSettings_PrincipalPaymentSettings_Percentage) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_PaymentSettings_PrincipalPaymentSettings_Percentage.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_PaymentSettings_PrincipalPaymentSettings_Percentage) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 14, 1, 1}
}

func (x *LoanProductRequest_PaymentSettings_PrincipalPaymentSettings_Percentage) GetDefaultValue() float64 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *LoanProductRequest_PaymentSettings_PrincipalPaymentSettings_Percentage) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *LoanProductRequest_PaymentSettings_PrincipalPaymentSettings_Percentage) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

type LoanProductRequest_PenaltySettings_PenaltyRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue float64 `protobuf:"fixed64,1,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	MaxValue     float64 `protobuf:"fixed64,2,opt,name=maxValue,proto3" json:"maxValue,omitempty"`
	MinValue     float64 `protobuf:"fixed64,3,opt,name=minValue,proto3" json:"minValue,omitempty"`
}

func (x *LoanProductRequest_PenaltySettings_PenaltyRate) Reset() {
	*x = LoanProductRequest_PenaltySettings_PenaltyRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_PenaltySettings_PenaltyRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_PenaltySettings_PenaltyRate) ProtoMessage() {}

func (x *LoanProductRequest_PenaltySettings_PenaltyRate) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_PenaltySettings_PenaltyRate.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_PenaltySettings_PenaltyRate) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 15, 0}
}

func (x *LoanProductRequest_PenaltySettings_PenaltyRate) GetDefaultValue() float64 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *LoanProductRequest_PenaltySettings_PenaltyRate) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *LoanProductRequest_PenaltySettings_PenaltyRate) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

type LoanProductRequest_ScheduleSettings_BillingCycles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled   bool    `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	StartDays []int64 `protobuf:"varint,2,rep,packed,name=startDays,proto3" json:"startDays,omitempty"`
}

func (x *LoanProductRequest_ScheduleSettings_BillingCycles) Reset() {
	*x = LoanProductRequest_ScheduleSettings_BillingCycles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_ScheduleSettings_BillingCycles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_ScheduleSettings_BillingCycles) ProtoMessage() {}

func (x *LoanProductRequest_ScheduleSettings_BillingCycles) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_ScheduleSettings_BillingCycles.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_ScheduleSettings_BillingCycles) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 17, 0}
}

func (x *LoanProductRequest_ScheduleSettings_BillingCycles) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *LoanProductRequest_ScheduleSettings_BillingCycles) GetStartDays() []int64 {
	if x != nil {
		return x.StartDays
	}
	return nil
}

type LoanProductRequest_ScheduleSettings_FirstRepaymentDueDateOffset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue float64 `protobuf:"fixed64,1,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	MaxValue     float64 `protobuf:"fixed64,2,opt,name=maxValue,proto3" json:"maxValue,omitempty"`
	MinValue     float64 `protobuf:"fixed64,3,opt,name=minValue,proto3" json:"minValue,omitempty"`
}

func (x *LoanProductRequest_ScheduleSettings_FirstRepaymentDueDateOffset) Reset() {
	*x = LoanProductRequest_ScheduleSettings_FirstRepaymentDueDateOffset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_ScheduleSettings_FirstRepaymentDueDateOffset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_ScheduleSettings_FirstRepaymentDueDateOffset) ProtoMessage() {}

func (x *LoanProductRequest_ScheduleSettings_FirstRepaymentDueDateOffset) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_ScheduleSettings_FirstRepaymentDueDateOffset.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_ScheduleSettings_FirstRepaymentDueDateOffset) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 17, 1}
}

func (x *LoanProductRequest_ScheduleSettings_FirstRepaymentDueDateOffset) GetDefaultValue() float64 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *LoanProductRequest_ScheduleSettings_FirstRepaymentDueDateOffset) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *LoanProductRequest_ScheduleSettings_FirstRepaymentDueDateOffset) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

type LoanProductRequest_ScheduleSettings_NumInstallments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue float64 `protobuf:"fixed64,1,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	MaxValue     float64 `protobuf:"fixed64,2,opt,name=maxValue,proto3" json:"maxValue,omitempty"`
	MinValue     float64 `protobuf:"fixed64,3,opt,name=minValue,proto3" json:"minValue,omitempty"`
}

func (x *LoanProductRequest_ScheduleSettings_NumInstallments) Reset() {
	*x = LoanProductRequest_ScheduleSettings_NumInstallments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_ScheduleSettings_NumInstallments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_ScheduleSettings_NumInstallments) ProtoMessage() {}

func (x *LoanProductRequest_ScheduleSettings_NumInstallments) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_ScheduleSettings_NumInstallments.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_ScheduleSettings_NumInstallments) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 17, 2}
}

func (x *LoanProductRequest_ScheduleSettings_NumInstallments) GetDefaultValue() float64 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *LoanProductRequest_ScheduleSettings_NumInstallments) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *LoanProductRequest_ScheduleSettings_NumInstallments) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

type LoanProductRequest_ScheduleSettings_PreviewSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumberOfPreviewedInstalments uint32 `protobuf:"varint,1,opt,name=numberOfPreviewedInstalments,proto3" json:"numberOfPreviewedInstalments,omitempty"`
	PreviewScheduleEnabled       bool   `protobuf:"varint,2,opt,name=previewScheduleEnabled,proto3" json:"previewScheduleEnabled,omitempty"`
}

func (x *LoanProductRequest_ScheduleSettings_PreviewSchedule) Reset() {
	*x = LoanProductRequest_ScheduleSettings_PreviewSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_ScheduleSettings_PreviewSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_ScheduleSettings_PreviewSchedule) ProtoMessage() {}

func (x *LoanProductRequest_ScheduleSettings_PreviewSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_ScheduleSettings_PreviewSchedule.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_ScheduleSettings_PreviewSchedule) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 17, 3}
}

func (x *LoanProductRequest_ScheduleSettings_PreviewSchedule) GetNumberOfPreviewedInstalments() uint32 {
	if x != nil {
		return x.NumberOfPreviewedInstalments
	}
	return 0
}

func (x *LoanProductRequest_ScheduleSettings_PreviewSchedule) GetPreviewScheduleEnabled() bool {
	if x != nil {
		return x.PreviewScheduleEnabled
	}
	return false
}

type LoanProductRequest_ScheduleSettings_RoundingSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepaymentCurrencyRounding       string `protobuf:"bytes,1,opt,name=repaymentCurrencyRounding,proto3" json:"repaymentCurrencyRounding,omitempty"`
	RepaymentElementsRoundingMethod string `protobuf:"bytes,2,opt,name=repaymentElementsRoundingMethod,proto3" json:"repaymentElementsRoundingMethod,omitempty"`
	RoundingRepaymentScheduleMethod string `protobuf:"bytes,3,opt,name=roundingRepaymentScheduleMethod,proto3" json:"roundingRepaymentScheduleMethod,omitempty"`
}

func (x *LoanProductRequest_ScheduleSettings_RoundingSettings) Reset() {
	*x = LoanProductRequest_ScheduleSettings_RoundingSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_product_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductRequest_ScheduleSettings_RoundingSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductRequest_ScheduleSettings_RoundingSettings) ProtoMessage() {}

func (x *LoanProductRequest_ScheduleSettings_RoundingSettings) ProtoReflect() protoreflect.Message {
	mi := &file_loan_product_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductRequest_ScheduleSettings_RoundingSettings.ProtoReflect.Descriptor instead.
func (*LoanProductRequest_ScheduleSettings_RoundingSettings) Descriptor() ([]byte, []int) {
	return file_loan_product_proto_rawDescGZIP(), []int{3, 17, 4}
}

func (x *LoanProductRequest_ScheduleSettings_RoundingSettings) GetRepaymentCurrencyRounding() string {
	if x != nil {
		return x.RepaymentCurrencyRounding
	}
	return ""
}

func (x *LoanProductRequest_ScheduleSettings_RoundingSettings) GetRepaymentElementsRoundingMethod() string {
	if x != nil {
		return x.RepaymentElementsRoundingMethod
	}
	return ""
}

func (x *LoanProductRequest_ScheduleSettings_RoundingSettings) GetRoundingRepaymentScheduleMethod() string {
	if x != nil {
		return x.RoundingRepaymentScheduleMethod
	}
	return ""
}

var File_loan_product_proto protoreflect.FileDescriptor

var file_loan_product_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xac, 0x01, 0x0a, 0x13, 0x4c,
	0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x64, 0x0a, 0x18, 0x4c, 0x6f, 0x61,
	0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f,
	0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22,
	0xfa, 0x74, 0x0a, 0x0b, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12,
	0x58, 0x0a, 0x13, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x13, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6e,
	0x6b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x55, 0x0a, 0x12, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f,
	0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x12, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x4c, 0x0a, 0x21, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x46, 0x6f, 0x72, 0x46, 0x69, 0x72, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x21, 0x61, 0x64, 0x6a,
	0x75, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x46, 0x69,
	0x72, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x46,
	0x0a, 0x1e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x0f, 0x61, 0x72, 0x72, 0x65, 0x61, 0x72,
	0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x41, 0x72, 0x72, 0x65, 0x61, 0x72, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x0f, 0x61, 0x72, 0x72, 0x65, 0x61, 0x72, 0x73, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x5b, 0x0a, 0x14, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x14, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x22, 0x0a,
	0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x6a, 0x0a, 0x19, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x41, 0x72, 0x72, 0x61, 0x6e,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61,
	0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x41,
	0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x19, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x37, 0x0a,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65,
	0x64, 0x4b, 0x65, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x43, 0x0a, 0x0c, 0x66, 0x65, 0x65, 0x73, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x46, 0x65, 0x65, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0c, 0x66,
	0x65, 0x65, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x4c, 0x0a, 0x0f, 0x66,
	0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61,
	0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x46, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0f, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x58, 0x0a, 0x13, 0x67, 0x72, 0x61,
	0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c,
	0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x47, 0x72, 0x61, 0x63, 0x65,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x13,
	0x67, 0x72, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x4f, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x4f, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x73, 0x52, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x55, 0x0a, 0x12, 0x6c, 0x6f, 0x61, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x12, 0x6c, 0x6f, 0x61, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x55, 0x0a, 0x12,
	0x6e, 0x65, 0x77, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x4e, 0x65, 0x77,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x12, 0x6e, 0x65, 0x77, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x0e, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x0e, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x4c, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x4c, 0x0a, 0x0f, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x0f, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x49, 0x0a, 0x0e, 0x72, 0x65, 0x64, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x52, 0x65, 0x64,
	0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0e, 0x72, 0x65, 0x64,
	0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x4f, 0x0a, 0x10, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f,
	0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x10, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x4f, 0x0a, 0x10,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c,
	0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x10, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x74, 0x61, 0x78, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x54, 0x61, 0x78,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0b, 0x74, 0x61, 0x78, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x3a, 0x0a, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x1f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x1a, 0xcd, 0x01, 0x0a, 0x13, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x19, 0x6c, 0x69, 0x6e, 0x6b, 0x61,
	0x62, 0x6c, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x6c, 0x69, 0x6e, 0x6b,
	0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x14, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x14, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x1a, 0xe7, 0x03, 0x0a, 0x12, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2a, 0x0a, 0x10,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69,
	0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x5f, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x1a, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x72, 0x75, 0x61, 0x6c, 0x43, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x72, 0x75, 0x61, 0x6c, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x1f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x72, 0x75, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x1f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x72,
	0x75, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x1a, 0xb9, 0x01, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x64, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x66, 0x69, 0x6e, 0x61, 0x6e,
	0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x6c, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x15, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4b,
	0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4b, 0x65, 0x79, 0x1a,
	0xe6, 0x06, 0x0a, 0x0f, 0x41, 0x72, 0x72, 0x65, 0x61, 0x72, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x13, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x6c, 0x79, 0x54, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x54,
	0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x79, 0x12, 0x32, 0x0a, 0x14, 0x6e,
	0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x73, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6e, 0x6f, 0x6e, 0x57, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x73, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x3e, 0x0a, 0x1a, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x1a, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x32, 0x0a, 0x14, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x6c, 0x6f, 0x6f,
	0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x74,
	0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0xaa, 0x01, 0x0a, 0x29, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63,
	0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x4f, 0x66, 0x4f, 0x75, 0x74,
	0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x72, 0x72, 0x65,
	0x61, 0x72, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x54, 0x6f, 0x6c, 0x65,
	0x72, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x4f,
	0x66, 0x4f, 0x75, 0x74, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x69, 0x6e,
	0x63, 0x69, 0x70, 0x61, 0x6c, 0x52, 0x29, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x4f, 0x66, 0x4f, 0x75, 0x74, 0x73,
	0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c,
	0x12, 0x5c, 0x0a, 0x0f, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x72,
	0x72, 0x65, 0x61, 0x72, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x54, 0x6f,
	0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x0f, 0x74,
	0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x1a, 0x87,
	0x01, 0x0a, 0x29, 0x54, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x4f, 0x66, 0x4f, 0x75, 0x74, 0x73, 0x74, 0x61, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x8d, 0x01, 0x0a, 0x0f, 0x54, 0x6f, 0x6c,
	0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x90, 0x02, 0x0a, 0x14, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x46, 0x6f, 0x72, 0x12, 0x5e, 0x0a, 0x0e, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0e, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x74, 0x0a, 0x0e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x3a, 0x0a, 0x18, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x18, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x66, 0x6f, 0x72,
	0x41, 0x6c, 0x6c, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x1a, 0x5f, 0x0a, 0x19, 0x43,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x42, 0x0a, 0x1c, 0x63, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1c,
	0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x42, 0x0a, 0x08,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x1a, 0xfe, 0x0b, 0x0a, 0x0c, 0x46, 0x65, 0x65, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x2e, 0x0a, 0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x72, 0x62, 0x69, 0x74, 0x72,
	0x61, 0x72, 0x79, 0x46, 0x65, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x72, 0x62, 0x69, 0x74, 0x72, 0x61, 0x72, 0x79, 0x46, 0x65, 0x65,
	0x73, 0x12, 0x38, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x46, 0x65, 0x65, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x46, 0x65, 0x65, 0x73, 0x52, 0x04, 0x66, 0x65, 0x65, 0x73, 0x1a, 0x83, 0x0b, 0x0a, 0x04,
	0x46, 0x65, 0x65, 0x73, 0x12, 0x5e, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x46, 0x65, 0x65, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x46,
	0x65, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x75,
	0x6c, 0x65, 0x73, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x75, 0x6c, 0x65, 0x73, 0x12, 0x6d, 0x0a, 0x14, 0x61, 0x6d, 0x6f, 0x72, 0x74, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x39, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x46, 0x65, 0x65, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x46, 0x65, 0x65, 0x73, 0x2e, 0x41, 0x6d, 0x6f, 0x72, 0x74, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x14, 0x61,
	0x6d, 0x6f, 0x72, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x44, 0x0a, 0x1d, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x1d, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x38, 0x0a, 0x17, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x17, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x61,
	0x70, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x65, 0x65,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x66, 0x65, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x61, 0x73,
	0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x52, 0x0a, 0x0b, 0x74, 0x61, 0x78, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x46, 0x65, 0x65,
	0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x46, 0x65, 0x65, 0x73, 0x2e, 0x54,
	0x61, 0x78, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0b, 0x74, 0x61, 0x78, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x1a, 0xb9, 0x01, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64,
	0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x6c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4b, 0x65, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4b, 0x65, 0x79, 0x1a, 0xf6, 0x02,
	0x0a, 0x14, 0x41, 0x6d, 0x6f, 0x72, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x61, 0x6d, 0x6f, 0x72, 0x74, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x6d, 0x6f, 0x72, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x62, 0x0a, 0x2c, 0x66, 0x65, 0x65, 0x41,
	0x6d, 0x6f, 0x72, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x66, 0x69, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x2c,
	0x66, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x72, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x66,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x55, 0x6e, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x55, 0x6e, 0x69, 0x74, 0x1a, 0x49, 0x0a, 0x0b, 0x54, 0x61, 0x78, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x3a, 0x0a, 0x18, 0x74, 0x61, 0x78, 0x61, 0x62, 0x6c, 0x65,
	0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x74, 0x61, 0x78, 0x61, 0x62, 0x6c, 0x65,
	0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x1a, 0x98, 0x06, 0x0a, 0x0f, 0x46, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x77, 0x0a, 0x18, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x46, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x46, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x18,
	0x66, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x56, 0x0a, 0x26, 0x66, 0x75, 0x6e, 0x64,
	0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x26, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x72,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x30, 0x0a, 0x13, 0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x41, 0x74, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x6c,
	0x6f, 0x63, 0x6b, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x41, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x61, 0x6c, 0x12, 0x89, 0x01, 0x0a, 0x1e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x46, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x1e,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24,
	0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x46,
	0x75, 0x6e, 0x64, 0x73, 0x1a, 0x96, 0x01, 0x0a, 0x18, 0x46, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64,
	0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x9c, 0x01,
	0x0a, 0x1e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65,
	0x64, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0xa1, 0x02, 0x0a,
	0x13, 0x47, 0x72, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x54, 0x0a, 0x0b, 0x67, 0x72, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x47, 0x72,
	0x61, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x47, 0x72, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x0b, 0x67,
	0x72, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x67, 0x72,
	0x61, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x72, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x1a, 0x89, 0x01, 0x0a, 0x0b, 0x47, 0x72, 0x61, 0x63, 0x65, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x1a, 0xd7, 0x12, 0x0a, 0x10, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x61, 0x63, 0x63, 0x72, 0x75, 0x65, 0x4c,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x12, 0x61, 0x63, 0x63, 0x72, 0x75, 0x65, 0x4c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x61, 0x79,
	0x73, 0x49, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x61, 0x79, 0x73, 0x49, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x12, 0x63, 0x0a, 0x11, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61,
	0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x11, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x3c,
	0x0a, 0x19, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x19, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x4a, 0x0a, 0x20,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x3c, 0x0a, 0x19, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x6c, 0x0a, 0x14, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61,
	0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x14,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x48, 0x0a, 0x1f, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x44, 0x61, 0x79, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x1f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x44, 0x61, 0x79, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x1a, 0xe7, 0x08, 0x0a, 0x11, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x40, 0x0a, 0x1b, 0x61, 0x63, 0x63, 0x72,
	0x75, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4d,
	0x61, 0x74, 0x75, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x61,
	0x63, 0x63, 0x72, 0x75, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x66, 0x74,
	0x65, 0x72, 0x4d, 0x61, 0x74, 0x75, 0x72, 0x69, 0x74, 0x79, 0x12, 0x3c, 0x0a, 0x19, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x4e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x4e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b, 0x65, 0x79,
	0x12, 0x38, 0x0a, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x42, 0x0a, 0x1c, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x46, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x1c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x66,
	0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61,
	0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x18, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x43, 0x65, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x18, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x43, 0x65, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61,
	0x74, 0x65, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65,
	0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x38, 0x0a, 0x17, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x17, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x2e, 0x0a, 0x12,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x11,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x54, 0x65, 0x72, 0x6d,
	0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x52, 0x61, 0x74, 0x65, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x75, 0x0a, 0x11, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x54, 0x69, 0x65, 0x72, 0x73, 0x18,
	0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f,
	0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x54, 0x69, 0x65, 0x72, 0x73, 0x52, 0x11,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x54, 0x69, 0x65, 0x72,
	0x73, 0x1a, 0x6a, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x7d, 0x0a,
	0x11, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x54, 0x69, 0x65,
	0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b,
	0x65, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x1a, 0xcb, 0x04, 0x0a,
	0x14, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64,
	0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x69, 0x0a,
	0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x52, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x18, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x43, 0x65, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x18, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x43, 0x65, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x52, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61,
	0x74, 0x65, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x38, 0x0a, 0x17,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x17, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55, 0x6e, 0x69, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x2e,
	0x0a, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0x6a,
	0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x8b, 0x04, 0x0a, 0x10, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x12,
	0x2e, 0x0a, 0x12, 0x64, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x44, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x64, 0x6f, 0x72,
	0x6d, 0x61, 0x6e, 0x63, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x44, 0x61, 0x79, 0x73, 0x12,
	0x63, 0x0a, 0x11, 0x66, 0x6f, 0x75, 0x72, 0x45, 0x79, 0x65, 0x73, 0x50, 0x72, 0x69, 0x6e, 0x63,
	0x69, 0x70, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x2e,
	0x46, 0x6f, 0x75, 0x72, 0x45, 0x79, 0x65, 0x73, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x6c,
	0x65, 0x52, 0x11, 0x66, 0x6f, 0x75, 0x72, 0x45, 0x79, 0x65, 0x73, 0x50, 0x72, 0x69, 0x6e, 0x63,
	0x69, 0x70, 0x6c, 0x65, 0x12, 0x54, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x2e,
	0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0c, 0x6c, 0x6f,
	0x63, 0x6b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x49, 0x0a, 0x11, 0x46, 0x6f,
	0x75, 0x72, 0x45, 0x79, 0x65, 0x73, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x6c, 0x65, 0x12,
	0x34, 0x0a, 0x15, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x46, 0x6f, 0x72, 0x4c, 0x6f, 0x61, 0x6e,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x46, 0x6f, 0x72, 0x4c, 0x6f, 0x61, 0x6e, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x61, 0x6c, 0x1a, 0xc0, 0x01, 0x0a, 0x0c, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x63, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x63, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x63,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x44, 0x61,
	0x79, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x44, 0x61, 0x79, 0x73, 0x1a, 0x97, 0x03, 0x0a, 0x12, 0x4c, 0x6f, 0x61,
	0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x50, 0x0a, 0x0a, 0x6c, 0x6f, 0x61, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0a, 0x6c, 0x6f, 0x61, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x5f, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x4c,
	0x6f, 0x61, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x1a, 0x88, 0x01, 0x0a, 0x0a, 0x4c, 0x6f, 0x61, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64,
	0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x43, 0x0a,
	0x0f, 0x54, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x30, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x54,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x6d,
	0x61, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x54, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x65, 0x73, 0x1a, 0x8e, 0x01, 0x0a, 0x12, 0x4e, 0x65, 0x77, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x69,
	0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x64, 0x50, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x64, 0x50, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x6e, 0x1a, 0x32, 0x0a, 0x0e, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x1a, 0xcb, 0x0e, 0x0a, 0x0f, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x61,
	0x6d, 0x6f, 0x72, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x6d, 0x6f, 0x72, 0x74, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x48, 0x0a, 0x1f, 0x6c,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x63, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x1f, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x65, 0x0a, 0x12, 0x70,
	0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x50, 0x72, 0x65, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x12,
	0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x77, 0x0a, 0x18, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61,
	0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70,
	0x61, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x18, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x3a, 0x0a, 0x18, 0x72,
	0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x18, 0x72,
	0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x9e, 0x03, 0x0a, 0x12, 0x50, 0x72, 0x65, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x48,
	0x0a, 0x1f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4f,
	0x6e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4f, 0x6e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x40, 0x0a, 0x1b, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x3a, 0x0a, 0x18, 0x66, 0x75,
	0x74, 0x75, 0x72, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x66, 0x75,
	0x74, 0x75, 0x72, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x1d, 0x70, 0x72,
	0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x1d, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x12, 0x46, 0x0a, 0x1e, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x50, 0x61, 0x69,
	0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1e, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69,
	0x70, 0x61, 0x6c, 0x50, 0x61, 0x69, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0xda, 0x07, 0x0a, 0x18, 0x50, 0x72, 0x69,
	0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x5a, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f,
	0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69,
	0x70, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x4c, 0x0a, 0x21, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x69, 0x6e,
	0x63, 0x69, 0x70, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x21, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x52, 0x65,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12,
	0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12,
	0x3a, 0x0a, 0x18, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x46, 0x65, 0x65, 0x73, 0x49, 0x6e,
	0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x18, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x46, 0x65, 0x65, 0x73, 0x49, 0x6e,
	0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x1c, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x49, 0x6e,
	0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x1c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x49, 0x6e, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x66, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61,
	0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x52, 0x0a, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x70, 0x72, 0x69, 0x6e, 0x63,
	0x69, 0x70, 0x61, 0x6c, 0x43, 0x65, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x15, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61,
	0x6c, 0x43, 0x65, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x30, 0x0a,
	0x13, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x70, 0x72, 0x69, 0x6e,
	0x63, 0x69, 0x70, 0x61, 0x6c, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x36, 0x0a, 0x16, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x16, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x44, 0x75, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x75, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x44, 0x75, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x75, 0x65, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x1a, 0x84, 0x01, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b,
	0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x88, 0x01, 0x0a, 0x0a, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x69, 0x6e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0xeb, 0x02, 0x0a, 0x0f, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74,
	0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x42, 0x0a, 0x1c, 0x6c, 0x6f, 0x61,
	0x6e, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x1c, 0x6c, 0x6f, 0x61, 0x6e, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x43, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x36, 0x0a,
	0x16, 0x6c, 0x6f, 0x61, 0x6e, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x47, 0x72, 0x61, 0x63,
	0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x16, 0x6c,
	0x6f, 0x61, 0x6e, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x47, 0x72, 0x61, 0x63, 0x65, 0x50,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x50, 0x0a, 0x0b, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50,
	0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x50,
	0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x70, 0x65, 0x6e, 0x61,
	0x6c, 0x74, 0x79, 0x52, 0x61, 0x74, 0x65, 0x1a, 0x89, 0x01, 0x0a, 0x0b, 0x50, 0x65, 0x6e, 0x61,
	0x6c, 0x74, 0x79, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d,
	0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x1a, 0x32, 0x0a, 0x0e, 0x52, 0x65, 0x64, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65,
	0x64, 0x72, 0x61, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x52, 0x65, 0x64, 0x72, 0x61, 0x77, 0x1a, 0xad, 0x0e, 0x0a, 0x10, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x57, 0x0a, 0x0d,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x43, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x0d, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43,
	0x79, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x1b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x1b, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x52, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x81, 0x01, 0x0a, 0x1b, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x75, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x46, 0x69, 0x72, 0x73, 0x74, 0x52, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x52, 0x1b,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x52, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x75,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x66,
	0x69, 0x78, 0x65, 0x64, 0x44, 0x61, 0x79, 0x73, 0x4f, 0x66, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x10, 0x66, 0x69, 0x78, 0x65, 0x64, 0x44, 0x61, 0x79, 0x73,
	0x4f, 0x66, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x32, 0x0a, 0x14, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x72, 0x75, 0x61, 0x6c, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x41,
	0x63, 0x63, 0x72, 0x75, 0x61, 0x6c, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x0f, 0x6e,
	0x75, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61,
	0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x4e, 0x75, 0x6d, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x0f, 0x6e, 0x75, 0x6d, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x5d, 0x0a, 0x0f, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x40, 0x0a, 0x1b, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x72, 0x65, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e,
	0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x42, 0x0a, 0x1c, 0x72, 0x65, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x45, 0x64, 0x69, 0x74,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x1c, 0x72,
	0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x45, 0x64, 0x69, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x38, 0x0a, 0x17, 0x72,
	0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x72, 0x65,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x60, 0x0a, 0x10, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x10, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x44, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x44, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x3a, 0x0a, 0x18, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x18, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x1a, 0x47, 0x0a, 0x0d, 0x42,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x79, 0x73, 0x1a, 0x99, 0x01, 0x0a, 0x1b, 0x46, 0x69, 0x72, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x1a, 0x8d, 0x01, 0x0a, 0x0f, 0x4e, 0x75, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x1a, 0x8d, 0x01, 0x0a, 0x0f, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x12, 0x42, 0x0a, 0x1c, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66,
	0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x1c, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x66, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x1a, 0xe4, 0x01, 0x0a, 0x10, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x3c, 0x0a, 0x19, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x12, 0x48, 0x0a, 0x1f, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1f, 0x72, 0x65,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x48, 0x0a,
	0x1f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x1a, 0xa6, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x30, 0x0a, 0x13,
	0x69, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x73, 0x43, 0x6f, 0x6c,
	0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x30,
	0x0a, 0x13, 0x69, 0x73, 0x47, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x6f, 0x72, 0x73, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x73, 0x47,
	0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x47, 0x75, 0x61, 0x72,
	0x61, 0x6e, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x47, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x69, 0x65, 0x73,
	0x1a, 0x83, 0x02, 0x0a, 0x0b, 0x54, 0x61, 0x78, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x32, 0x0a, 0x14, 0x74, 0x61, 0x78, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x74, 0x61, 0x78, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x61, 0x78, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x78, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x12, 0x74, 0x61, 0x78, 0x65,
	0x73, 0x4f, 0x6e, 0x46, 0x65, 0x65, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x74, 0x61, 0x78, 0x65, 0x73, 0x4f, 0x6e, 0x46, 0x65, 0x65,
	0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x16, 0x74, 0x61, 0x78, 0x65,
	0x73, 0x4f, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x74, 0x61, 0x78, 0x65, 0x73, 0x4f,
	0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x34, 0x0a, 0x15, 0x74, 0x61, 0x78, 0x65, 0x73, 0x4f, 0x6e, 0x50, 0x65, 0x6e, 0x61, 0x6c,
	0x74, 0x79, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x15, 0x74, 0x61, 0x78, 0x65, 0x73, 0x4f, 0x6e, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x1a, 0xa3, 0x01, 0x0a, 0x09, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x8b, 0x72, 0x0a,
	0x12, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x5f, 0x0a, 0x13, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69,
	0x6e, 0x6b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x13, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x5c, 0x0a, 0x12, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69,
	0x6e, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x12,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x4c, 0x0a, 0x21, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x46, 0x69, 0x72, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x21, 0x61,
	0x64, 0x6a, 0x75, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x46, 0x6f, 0x72,
	0x46, 0x69, 0x72, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x46, 0x0a, 0x1e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52,
	0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x53, 0x0a, 0x0f, 0x61, 0x72, 0x72, 0x65,
	0x61, 0x72, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x72,
	0x65, 0x61, 0x72, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0f, 0x61, 0x72,
	0x72, 0x65, 0x61, 0x72, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x62, 0x0a,
	0x14, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x14, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x22, 0x0a,
	0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x71, 0x0a, 0x19, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x41, 0x72, 0x72, 0x61, 0x6e,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61,
	0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x19, 0x63, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x3e, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c,
	0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x4a, 0x0a, 0x0c, 0x66, 0x65, 0x65, 0x73, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x65, 0x65, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x0c, 0x66, 0x65, 0x65, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x53, 0x0a, 0x0f, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x0f, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x5f, 0x0a, 0x13, 0x67, 0x72, 0x61, 0x63, 0x65, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x72,
	0x61, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x13, 0x67, 0x72, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x56, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x10, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x56,
	0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x73, 0x52, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x5c, 0x0a, 0x12, 0x6c, 0x6f, 0x61, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x12, 0x6c, 0x6f,
	0x61, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x5c, 0x0a, 0x12, 0x6e, 0x65, 0x77, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4e, 0x65, 0x77, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x12,
	0x6e, 0x65, 0x77, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x0e, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0e, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x53, 0x0a, 0x0f, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0f,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x53, 0x0a, 0x0f, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x0f, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x50, 0x0a, 0x0e, 0x72, 0x65, 0x64, 0x72, 0x61, 0x77, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x64, 0x72, 0x61, 0x77, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0e, 0x72, 0x65, 0x64, 0x72, 0x61, 0x77, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x56, 0x0a, 0x10, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x10, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x56,
	0x0a, 0x10, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x10, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x47, 0x0a, 0x0b,
	0x74, 0x61, 0x78, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x1d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x61, 0x78,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0b, 0x74, 0x61, 0x78, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x41, 0x0a, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x09, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x1a, 0xcd, 0x01, 0x0a,
	0x13, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x3c,
	0x0a, 0x19, 0x6c, 0x69, 0x6e, 0x6b, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x19, 0x6c, 0x69, 0x6e, 0x6b, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x14,
	0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x6c, 0x69, 0x6e, 0x6b,
	0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x2a, 0x0a, 0x10, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x1a, 0xce, 0x03, 0x0a,
	0x12, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e,
	0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x66, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x1a, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x72, 0x75, 0x61, 0x6c, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x72, 0x75, 0x61, 0x6c, 0x43, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x1f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x72, 0x75, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x1f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x72, 0x75, 0x65,
	0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x1a, 0x99, 0x01, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x6c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4b, 0x65, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4b, 0x65, 0x79, 0x1a, 0xb3, 0x06,
	0x0a, 0x0f, 0x41, 0x72, 0x72, 0x65, 0x61, 0x72, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x34, 0x0a, 0x15, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x15, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x6d, 0x6f, 0x6e, 0x74, 0x68,
	0x6c, 0x79, 0x54, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x54, 0x6f, 0x6c,
	0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x79, 0x12, 0x32, 0x0a, 0x14, 0x6e, 0x6f, 0x6e,
	0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x73, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6e, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x73, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x3e, 0x0a,
	0x1a, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x1a, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x32, 0x0a,
	0x14, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x74, 0x6f, 0x6c,
	0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0xb1, 0x01, 0x0a, 0x29, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x4f, 0x66, 0x4f, 0x75, 0x74, 0x73, 0x74,
	0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f,
	0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x41, 0x72, 0x72, 0x65, 0x61, 0x72, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x54, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x4f, 0x66, 0x4f, 0x75, 0x74, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x52, 0x29, 0x74, 0x6f, 0x6c, 0x65,
	0x72, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x4f,
	0x66, 0x4f, 0x75, 0x74, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x69, 0x6e,
	0x63, 0x69, 0x70, 0x61, 0x6c, 0x12, 0x63, 0x0a, 0x0f, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e,
	0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x72, 0x65, 0x61, 0x72,
	0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x54, 0x6f, 0x6c, 0x65, 0x72, 0x61,
	0x6e, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x0f, 0x74, 0x6f, 0x6c, 0x65, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x1a, 0x87, 0x01, 0x0a, 0x29, 0x54,
	0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61,
	0x67, 0x65, 0x4f, 0x66, 0x4f, 0x75, 0x74, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x1a, 0x6d, 0x0a, 0x0f, 0x54, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63,
	0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d,
	0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x1a, 0x97, 0x02, 0x0a, 0x14, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x6f, 0x72,
	0x12, 0x65, 0x0a, 0x0e, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0e, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x74, 0x0a, 0x0e, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x3a, 0x0a, 0x18, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x18, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x66,
	0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x1a, 0x5f, 0x0a,
	0x19, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x42, 0x0a, 0x1c, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x1c, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x42,
	0x0a, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x1a, 0xba, 0x0b, 0x0a, 0x0c, 0x46, 0x65, 0x65, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x72, 0x62, 0x69,
	0x74, 0x72, 0x61, 0x72, 0x79, 0x46, 0x65, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x72, 0x62, 0x69, 0x74, 0x72, 0x61, 0x72, 0x79, 0x46,
	0x65, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x65, 0x65,
	0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x46, 0x65, 0x65, 0x73, 0x52, 0x04,
	0x66, 0x65, 0x65, 0x73, 0x1a, 0xb8, 0x0a, 0x0a, 0x04, 0x46, 0x65, 0x65, 0x73, 0x12, 0x65, 0x0a,
	0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c,
	0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x46, 0x65, 0x65, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x46,
	0x65, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x75,
	0x6c, 0x65, 0x73, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x75, 0x6c, 0x65, 0x73, 0x12, 0x74, 0x0a, 0x14, 0x61, 0x6d, 0x6f, 0x72, 0x74, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x40, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x65,
	0x65, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x46, 0x65, 0x65, 0x73, 0x2e,
	0x41, 0x6d, 0x6f, 0x72, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x14, 0x61, 0x6d, 0x6f, 0x72, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x44, 0x0a, 0x1d, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1d, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x17, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x70, 0x70,
	0x6c, 0x79, 0x44, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x66, 0x65, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x65, 0x65, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x10, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x59, 0x0a, 0x0b, 0x74, 0x61,
	0x78, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x37, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x65, 0x65, 0x73, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x46, 0x65, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x78,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0b, 0x74, 0x61, 0x78, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x1a,
	0x99, 0x01, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x75,
	0x6c, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4b, 0x65, 0x79, 0x1a, 0xd6, 0x02, 0x0a, 0x14,
	0x41, 0x6d, 0x6f, 0x72, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x61, 0x6d, 0x6f, 0x72, 0x74, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x61, 0x6d, 0x6f, 0x72, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x62, 0x0a, 0x2c, 0x66, 0x65, 0x65, 0x41, 0x6d, 0x6f,
	0x72, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x2c, 0x66, 0x65,
	0x65, 0x41, 0x6d, 0x6f, 0x72, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x66, 0x69, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x55, 0x6e,
	0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x55, 0x6e, 0x69, 0x74, 0x1a, 0x49, 0x0a, 0x0b, 0x54, 0x61, 0x78, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x3a, 0x0a, 0x18, 0x74, 0x61, 0x78, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x74, 0x61, 0x78, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x1a,
	0xe4, 0x05, 0x0a, 0x0f, 0x46, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x7e, 0x0a,
	0x18, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x42, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x75, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x46, 0x75, 0x6e, 0x64, 0x65,
	0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x18, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x56, 0x0a,
	0x26, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x26, 0x66,
	0x75, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x75, 0x6e,
	0x64, 0x73, 0x41, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x13, 0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x41, 0x74, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x12, 0x90, 0x01, 0x0a, 0x1e, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x48, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x75, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x1e, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x64, 0x73,
	0x1a, 0x76, 0x0a, 0x18, 0x46, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x7c, 0x0a, 0x1e, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69,
	0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x69,
	0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x87, 0x02, 0x0a, 0x13, 0x47, 0x72, 0x61, 0x63, 0x65,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x5b,
	0x0a, 0x0b, 0x67, 0x72, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x47,
	0x72, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x47, 0x72, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x0b,
	0x67, 0x72, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x67,
	0x72, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x72, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x69, 0x0a, 0x0b, 0x47, 0x72, 0x61, 0x63, 0x65, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x1a, 0x9a, 0x12, 0x0a, 0x10, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x61, 0x63, 0x63, 0x72, 0x75, 0x65, 0x4c,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x12, 0x61, 0x63, 0x63, 0x72, 0x75, 0x65, 0x4c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x61, 0x79,
	0x73, 0x49, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x61, 0x79, 0x73, 0x49, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x12, 0x6a, 0x0a, 0x11, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61,
	0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x11, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x3c, 0x0a, 0x19, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x4a, 0x0a, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x20, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x3c, 0x0a, 0x19, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x19, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x73, 0x0a,
	0x14, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x52, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x14, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x48, 0x0a, 0x1f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x44, 0x61, 0x79, 0x73, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x1f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x44, 0x61, 0x79, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x1a, 0xb5, 0x08, 0x0a, 0x11, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x40, 0x0a, 0x1b, 0x61, 0x63, 0x63, 0x72, 0x75, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x74,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x61, 0x63, 0x63,
	0x72, 0x75, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x4d, 0x61, 0x74, 0x75, 0x72, 0x69, 0x74, 0x79, 0x12, 0x3c, 0x0a, 0x19, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x4e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x4e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x38,
	0x0a, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x17, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x46,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x42, 0x0a, 0x1c, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x1c,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x46, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x6d, 0x0a, 0x0c,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x49, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x18, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x43, 0x65, 0x69, 0x6c, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x18, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x43, 0x65, 0x69, 0x6c, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x52, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x38, 0x0a, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x16, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55,
	0x6e, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55, 0x6e, 0x69,
	0x74, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74,
	0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x12,
	0x7c, 0x0a, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x65, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x52, 0x61, 0x74, 0x65, 0x54, 0x69, 0x65, 0x72, 0x73, 0x52, 0x11, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x54, 0x69, 0x65, 0x72, 0x73, 0x1a, 0x6a, 0x0a,
	0x0c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x5d, 0x0a, 0x11, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x54, 0x69, 0x65, 0x72, 0x73, 0x12, 0x24,
	0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x1a, 0xb2, 0x04, 0x0a, 0x14, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x70, 0x0a, 0x0c, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x4c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x18, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x43, 0x65, 0x69, 0x6c, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x18, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x43, 0x65, 0x69, 0x6c, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x52, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x38, 0x0a, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x16, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55,
	0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55, 0x6e, 0x69,
	0x74, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74,
	0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x1a, 0x6a, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x99, 0x04,
	0x0a, 0x10, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x64, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x79, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x44, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12,
	0x64, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x44, 0x61,
	0x79, 0x73, 0x12, 0x6a, 0x0a, 0x11, 0x66, 0x6f, 0x75, 0x72, 0x45, 0x79, 0x65, 0x73, 0x50, 0x72,
	0x69, 0x6e, 0x63, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x2e, 0x46, 0x6f, 0x75, 0x72, 0x45, 0x79,
	0x65, 0x73, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x6c, 0x65, 0x52, 0x11, 0x66, 0x6f, 0x75,
	0x72, 0x45, 0x79, 0x65, 0x73, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x6c, 0x65, 0x12, 0x5b,
	0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61,
	0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73,
	0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0c, 0x6c,
	0x6f, 0x63, 0x6b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x49, 0x0a, 0x11, 0x46,
	0x6f, 0x75, 0x72, 0x45, 0x79, 0x65, 0x73, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x6c, 0x65,
	0x12, 0x34, 0x0a, 0x15, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x46, 0x6f, 0x72, 0x4c, 0x6f, 0x61,
	0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x15, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x46, 0x6f, 0x72, 0x4c, 0x6f, 0x61, 0x6e, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x1a, 0xc0, 0x01, 0x0a, 0x0c, 0x4c, 0x6f, 0x63, 0x6b, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x63, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x63, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11,
	0x63, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x44,
	0x61, 0x79, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x6c, 0x6f, 0x63, 0x6b, 0x50,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x44, 0x61, 0x79, 0x73, 0x1a, 0x84, 0x03, 0x0a, 0x12, 0x4c, 0x6f,
	0x61, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x57, 0x0a, 0x0a, 0x6c, 0x6f, 0x61, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61,
	0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x4c, 0x6f, 0x61, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0a, 0x6c,
	0x6f, 0x61, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x66, 0x0a, 0x0f, 0x74, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x6f,
	0x61, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x1a, 0x68, 0x0a, 0x0a, 0x4c, 0x6f, 0x61, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x43, 0x0a, 0x0f, 0x54,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x30,
	0x0a, 0x13, 0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x54, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x6d, 0x61, 0x78,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x54, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73,
	0x1a, 0x8e, 0x01, 0x0a, 0x12, 0x4e, 0x65, 0x77, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x64, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x69, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x64, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x64, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x6e, 0x1a, 0x32, 0x0a, 0x0e, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x1a, 0x85, 0x0e, 0x0a, 0x0f, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x61, 0x6d, 0x6f,
	0x72, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x6d, 0x6f, 0x72, 0x74, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x48, 0x0a, 0x1f, 0x6c, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x1f, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x6c, 0x0a, 0x12, 0x70, 0x72, 0x65,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f,
	0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x12, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x7e, 0x0a, 0x18, 0x70, 0x72, 0x69, 0x6e, 0x63,
	0x69, 0x70, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x18, 0x70,
	0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x3a, 0x0a, 0x18, 0x72, 0x65, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x18, 0x72, 0x65, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x1a, 0x9e, 0x03, 0x0a, 0x12, 0x50, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x48, 0x0a, 0x1f, 0x61, 0x70,
	0x70, 0x6c, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4f, 0x6e, 0x50, 0x72, 0x65,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x1f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x4f, 0x6e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x40, 0x0a, 0x1b, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x3a, 0x0a, 0x18, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x14, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x1d, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1d, 0x70,
	0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x46, 0x0a, 0x1e,
	0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x50, 0x61, 0x69, 0x64, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x1e, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x50,
	0x61, 0x69, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x1a, 0x86, 0x07, 0x0a, 0x18, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70,
	0x61, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x61, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x49, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x50, 0x72, 0x69,
	0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x21, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50,
	0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x21, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61,
	0x6c, 0x52, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x12, 0x3a, 0x0a, 0x18, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x46, 0x65, 0x65,
	0x73, 0x49, 0x6e, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x46, 0x65, 0x65,
	0x73, 0x49, 0x6e, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x42,
	0x0a, 0x1c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x49, 0x6e, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x6d, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c,
	0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x61, 0x67, 0x65, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x12, 0x34, 0x0a, 0x15, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x43, 0x65,
	0x69, 0x6c, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x15, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x43, 0x65, 0x69, 0x6c, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x70, 0x72, 0x69, 0x6e, 0x63,
	0x69, 0x70, 0x61, 0x6c, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x46,
	0x6c, 0x6f, 0x6f, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x70, 0x72, 0x69,
	0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x70, 0x72, 0x69, 0x6e, 0x63,
	0x69, 0x70, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x12, 0x30, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x75, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x75, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x6c,
	0x6f, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x75, 0x65, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x44, 0x75, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x64, 0x0a,
	0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d,
	0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x1a, 0x68, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0xd1, 0x02,
	0x0a, 0x0f, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x42, 0x0a, 0x1c, 0x6c, 0x6f, 0x61, 0x6e, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79,
	0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1c, 0x6c, 0x6f, 0x61, 0x6e, 0x50, 0x65, 0x6e,
	0x61, 0x6c, 0x74, 0x79, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x36, 0x0a, 0x16, 0x6c, 0x6f, 0x61, 0x6e, 0x50, 0x65, 0x6e,
	0x61, 0x6c, 0x74, 0x79, 0x47, 0x72, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x16, 0x6c, 0x6f, 0x61, 0x6e, 0x50, 0x65, 0x6e, 0x61, 0x6c,
	0x74, 0x79, 0x47, 0x72, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x57, 0x0a,
	0x0b, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x65,
	0x6e, 0x61, 0x6c, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x50, 0x65,
	0x6e, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x70, 0x65, 0x6e, 0x61, 0x6c,
	0x74, 0x79, 0x52, 0x61, 0x74, 0x65, 0x1a, 0x69, 0x0a, 0x0b, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74,
	0x79, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x1a, 0x32, 0x0a, 0x0e, 0x52, 0x65, 0x64, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x64, 0x72,
	0x61, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x52,
	0x65, 0x64, 0x72, 0x61, 0x77, 0x1a, 0x8e, 0x0e, 0x0a, 0x10, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x5e, 0x0a, 0x0d, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x38, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x42, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x0d, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x1b, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x1b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x88, 0x01, 0x0a,
	0x1b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x52, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44,
	0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x46, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x46,
	0x69, 0x72, 0x73, 0x74, 0x52, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x75, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x52, 0x1b, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x75, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x44, 0x61, 0x79, 0x73, 0x4f, 0x66, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x10, 0x66, 0x69, 0x78, 0x65, 0x64, 0x44, 0x61, 0x79, 0x73, 0x4f, 0x66, 0x4d, 0x6f,
	0x6e, 0x74, 0x68, 0x12, 0x32, 0x0a, 0x14, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x41,
	0x63, 0x63, 0x72, 0x75, 0x61, 0x6c, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x14, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x72, 0x75,
	0x61, 0x6c, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x64, 0x0a, 0x0f, 0x6e, 0x75, 0x6d, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x4e, 0x75, 0x6d,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x0f, 0x6e, 0x75,
	0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x64, 0x0a,
	0x0f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c,
	0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x30, 0x0a,
	0x13, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x55, 0x6e, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x55, 0x6e, 0x69, 0x74, 0x12,
	0x40, 0x0a, 0x1b, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x12, 0x42, 0x0a, 0x1c, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x1c, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x38, 0x0a, 0x17, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x67, 0x0a, 0x10, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x10, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x44, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x44, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x12, 0x3a, 0x0a, 0x18, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x18, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x1a, 0x47, 0x0a, 0x0d,
	0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x61, 0x79, 0x73, 0x1a, 0x79, 0x0a, 0x1b, 0x46, 0x69, 0x72, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x1a, 0x6d, 0x0a, 0x0f, 0x4e, 0x75, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a,
	0x8d, 0x01, 0x0a, 0x0f, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x12, 0x42, 0x0a, 0x1c, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1c, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x4f, 0x66, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x70, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x1a,
	0xe4, 0x01, 0x0a, 0x10, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x3c, 0x0a, 0x19, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x12, 0x48, 0x0a, 0x1f, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1f, 0x72, 0x65, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x6f,
	0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x48, 0x0a, 0x1f,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x1a, 0xa6, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x69,
	0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x73, 0x43, 0x6f, 0x6c, 0x6c,
	0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x30, 0x0a,
	0x13, 0x69, 0x73, 0x47, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x73, 0x47, 0x75,
	0x61, 0x72, 0x61, 0x6e, 0x74, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x2e, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x47, 0x75, 0x61, 0x72, 0x61,
	0x6e, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x47, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x69, 0x65, 0x73, 0x1a,
	0x83, 0x02, 0x0a, 0x0b, 0x54, 0x61, 0x78, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x32, 0x0a, 0x14, 0x74, 0x61, 0x78, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x74,
	0x61, 0x78, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x61, 0x78, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x78, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x12, 0x74, 0x61, 0x78, 0x65, 0x73,
	0x4f, 0x6e, 0x46, 0x65, 0x65, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x12, 0x74, 0x61, 0x78, 0x65, 0x73, 0x4f, 0x6e, 0x46, 0x65, 0x65, 0x73,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x16, 0x74, 0x61, 0x78, 0x65, 0x73,
	0x4f, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x74, 0x61, 0x78, 0x65, 0x73, 0x4f, 0x6e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x34, 0x0a, 0x15, 0x74, 0x61, 0x78, 0x65, 0x73, 0x4f, 0x6e, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74,
	0x79, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15,
	0x74, 0x61, 0x78, 0x65, 0x73, 0x4f, 0x6e, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x1a, 0x33, 0x0a, 0x09, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f,
	0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_loan_product_proto_rawDescOnce sync.Once
	file_loan_product_proto_rawDescData = file_loan_product_proto_rawDesc
)

func file_loan_product_proto_rawDescGZIP() []byte {
	file_loan_product_proto_rawDescOnce.Do(func() {
		file_loan_product_proto_rawDescData = protoimpl.X.CompressGZIP(file_loan_product_proto_rawDescData)
	})
	return file_loan_product_proto_rawDescData
}

var file_loan_product_proto_msgTypes = make([]protoimpl.MessageInfo, 106)
var file_loan_product_proto_goTypes = []interface{}{
	(*LoanProductResponse)(nil),                                                          // 0: proto.LoanProductResponse
	(*LoanProductDetailRequest)(nil),                                                     // 1: proto.LoanProductDetailRequest
	(*LoanProduct)(nil),                                                                  // 2: proto.LoanProduct
	(*LoanProductRequest)(nil),                                                           // 3: proto.LoanProductRequest
	(*LoanProduct_AccountLinkSettings)(nil),                                              // 4: proto.LoanProduct.AccountLinkSettings
	(*LoanProduct_AccountingSettings)(nil),                                               // 5: proto.LoanProduct.AccountingSettings
	(*LoanProduct_ArrearsSettings)(nil),                                                  // 6: proto.LoanProduct.ArrearsSettings
	(*LoanProduct_AvailabilitySettings)(nil),                                             // 7: proto.LoanProduct.AvailabilitySettings
	(*LoanProduct_CreditArrangementSettings)(nil),                                        // 8: proto.LoanProduct.CreditArrangementSettings
	(*LoanProduct_Currency)(nil),                                                         // 9: proto.LoanProduct.Currency
	(*LoanProduct_FeesSettings)(nil),                                                     // 10: proto.LoanProduct.FeesSettings
	(*LoanProduct_FundingSettings)(nil),                                                  // 11: proto.LoanProduct.FundingSettings
	(*LoanProduct_GracePeriodSettings)(nil),                                              // 12: proto.LoanProduct.GracePeriodSettings
	(*LoanProduct_InterestSettings)(nil),                                                 // 13: proto.LoanProduct.InterestSettings
	(*LoanProduct_InternalControls)(nil),                                                 // 14: proto.LoanProduct.InternalControls
	(*LoanProduct_LoanAmountSettings)(nil),                                               // 15: proto.LoanProduct.LoanAmountSettings
	(*LoanProduct_NewAccountSettings)(nil),                                               // 16: proto.LoanProduct.NewAccountSettings
	(*LoanProduct_OffsetSettings)(nil),                                                   // 17: proto.LoanProduct.OffsetSettings
	(*LoanProduct_PaymentSettings)(nil),                                                  // 18: proto.LoanProduct.PaymentSettings
	(*LoanProduct_PenaltySettings)(nil),                                                  // 19: proto.LoanProduct.PenaltySettings
	(*LoanProduct_RedrawSettings)(nil),                                                   // 20: proto.LoanProduct.RedrawSettings
	(*LoanProduct_ScheduleSettings)(nil),                                                 // 21: proto.LoanProduct.ScheduleSettings
	(*LoanProduct_SecuritySettings)(nil),                                                 // 22: proto.LoanProduct.SecuritySettings
	(*LoanProduct_TaxSettings)(nil),                                                      // 23: proto.LoanProduct.TaxSettings
	(*LoanProduct_Templates)(nil),                                                        // 24: proto.LoanProduct.Templates
	(*LoanProduct_AccountingSettings_AccountingRules)(nil),                               // 25: proto.LoanProduct.AccountingSettings.AccountingRules
	(*LoanProduct_ArrearsSettings_TolerancePercentageOfOutstandingPrincipal)(nil),        // 26: proto.LoanProduct.ArrearsSettings.TolerancePercentageOfOutstandingPrincipal
	(*LoanProduct_ArrearsSettings_TolerancePeriod)(nil),                                  // 27: proto.LoanProduct.ArrearsSettings.TolerancePeriod
	(*LoanProduct_AvailabilitySettings_BranchSettings)(nil),                              // 28: proto.LoanProduct.AvailabilitySettings.BranchSettings
	(*LoanProduct_FeesSettings_Fees)(nil),                                                // 29: proto.LoanProduct.FeesSettings.Fees
	(*LoanProduct_FeesSettings_Fees_AccountingRules)(nil),                                // 30: proto.LoanProduct.FeesSettings.Fees.AccountingRules
	(*LoanProduct_FeesSettings_Fees_AmortizationSettings)(nil),                           // 31: proto.LoanProduct.FeesSettings.Fees.AmortizationSettings
	(*LoanProduct_FeesSettings_Fees_TaxSettings)(nil),                                    // 32: proto.LoanProduct.FeesSettings.Fees.TaxSettings
	(*LoanProduct_FundingSettings_FunderInterestCommission)(nil),                         // 33: proto.LoanProduct.FundingSettings.FunderInterestCommission
	(*LoanProduct_FundingSettings_OrganizationInterestCommission)(nil),                   // 34: proto.LoanProduct.FundingSettings.OrganizationInterestCommission
	(*LoanProduct_GracePeriodSettings_GracePeriod)(nil),                                  // 35: proto.LoanProduct.GracePeriodSettings.GracePeriod
	(*LoanProduct_InterestSettings_IndexRateSettings)(nil),                               // 36: proto.LoanProduct.InterestSettings.IndexRateSettings
	(*LoanProduct_InterestSettings_InterestRateSettings)(nil),                            // 37: proto.LoanProduct.InterestSettings.InterestRateSettings
	(*LoanProduct_InterestSettings_IndexRateSettings_InterestRate)(nil),                  // 38: proto.LoanProduct.InterestSettings.IndexRateSettings.InterestRate
	(*LoanProduct_InterestSettings_IndexRateSettings_InterestRateTiers)(nil),             // 39: proto.LoanProduct.InterestSettings.IndexRateSettings.InterestRateTiers
	(*LoanProduct_InterestSettings_InterestRateSettings_InterestRate)(nil),               // 40: proto.LoanProduct.InterestSettings.InterestRateSettings.InterestRate
	(*LoanProduct_InternalControls_FourEyesPrinciple)(nil),                               // 41: proto.LoanProduct.InternalControls.FourEyesPrinciple
	(*LoanProduct_InternalControls_LockSettings)(nil),                                    // 42: proto.LoanProduct.InternalControls.LockSettings
	(*LoanProduct_LoanAmountSettings_LoanAmount)(nil),                                    // 43: proto.LoanProduct.LoanAmountSettings.LoanAmount
	(*LoanProduct_LoanAmountSettings_TrancheSettings)(nil),                               // 44: proto.LoanProduct.LoanAmountSettings.TrancheSettings
	(*LoanProduct_PaymentSettings_PrepaymentSettings)(nil),                               // 45: proto.LoanProduct.PaymentSettings.PrepaymentSettings
	(*LoanProduct_PaymentSettings_PrincipalPaymentSettings)(nil),                         // 46: proto.LoanProduct.PaymentSettings.PrincipalPaymentSettings
	(*LoanProduct_PaymentSettings_PrincipalPaymentSettings_Amount)(nil),                  // 47: proto.LoanProduct.PaymentSettings.PrincipalPaymentSettings.Amount
	(*LoanProduct_PaymentSettings_PrincipalPaymentSettings_Percentage)(nil),              // 48: proto.LoanProduct.PaymentSettings.PrincipalPaymentSettings.Percentage
	(*LoanProduct_PenaltySettings_PenaltyRate)(nil),                                      // 49: proto.LoanProduct.PenaltySettings.PenaltyRate
	(*LoanProduct_ScheduleSettings_BillingCycles)(nil),                                   // 50: proto.LoanProduct.ScheduleSettings.BillingCycles
	(*LoanProduct_ScheduleSettings_FirstRepaymentDueDateOffset)(nil),                     // 51: proto.LoanProduct.ScheduleSettings.FirstRepaymentDueDateOffset
	(*LoanProduct_ScheduleSettings_NumInstallments)(nil),                                 // 52: proto.LoanProduct.ScheduleSettings.NumInstallments
	(*LoanProduct_ScheduleSettings_PreviewSchedule)(nil),                                 // 53: proto.LoanProduct.ScheduleSettings.PreviewSchedule
	(*LoanProduct_ScheduleSettings_RoundingSettings)(nil),                                // 54: proto.LoanProduct.ScheduleSettings.RoundingSettings
	(*LoanProductRequest_AccountLinkSettings)(nil),                                       // 55: proto.LoanProductRequest.AccountLinkSettings
	(*LoanProductRequest_AccountingSettings)(nil),                                        // 56: proto.LoanProductRequest.AccountingSettings
	(*LoanProductRequest_ArrearsSettings)(nil),                                           // 57: proto.LoanProductRequest.ArrearsSettings
	(*LoanProductRequest_AvailabilitySettings)(nil),                                      // 58: proto.LoanProductRequest.AvailabilitySettings
	(*LoanProductRequest_CreditArrangementSettings)(nil),                                 // 59: proto.LoanProductRequest.CreditArrangementSettings
	(*LoanProductRequest_Currency)(nil),                                                  // 60: proto.LoanProductRequest.Currency
	(*LoanProductRequest_FeesSettings)(nil),                                              // 61: proto.LoanProductRequest.FeesSettings
	(*LoanProductRequest_FundingSettings)(nil),                                           // 62: proto.LoanProductRequest.FundingSettings
	(*LoanProductRequest_GracePeriodSettings)(nil),                                       // 63: proto.LoanProductRequest.GracePeriodSettings
	(*LoanProductRequest_InterestSettings)(nil),                                          // 64: proto.LoanProductRequest.InterestSettings
	(*LoanProductRequest_InternalControls)(nil),                                          // 65: proto.LoanProductRequest.InternalControls
	(*LoanProductRequest_LoanAmountSettings)(nil),                                        // 66: proto.LoanProductRequest.LoanAmountSettings
	(*LoanProductRequest_NewAccountSettings)(nil),                                        // 67: proto.LoanProductRequest.NewAccountSettings
	(*LoanProductRequest_OffsetSettings)(nil),                                            // 68: proto.LoanProductRequest.OffsetSettings
	(*LoanProductRequest_PaymentSettings)(nil),                                           // 69: proto.LoanProductRequest.PaymentSettings
	(*LoanProductRequest_PenaltySettings)(nil),                                           // 70: proto.LoanProductRequest.PenaltySettings
	(*LoanProductRequest_RedrawSettings)(nil),                                            // 71: proto.LoanProductRequest.RedrawSettings
	(*LoanProductRequest_ScheduleSettings)(nil),                                          // 72: proto.LoanProductRequest.ScheduleSettings
	(*LoanProductRequest_SecuritySettings)(nil),                                          // 73: proto.LoanProductRequest.SecuritySettings
	(*LoanProductRequest_TaxSettings)(nil),                                               // 74: proto.LoanProductRequest.TaxSettings
	(*LoanProductRequest_Templates)(nil),                                                 // 75: proto.LoanProductRequest.Templates
	(*LoanProductRequest_AccountingSettings_AccountingRules)(nil),                        // 76: proto.LoanProductRequest.AccountingSettings.AccountingRules
	(*LoanProductRequest_ArrearsSettings_TolerancePercentageOfOutstandingPrincipal)(nil), // 77: proto.LoanProductRequest.ArrearsSettings.TolerancePercentageOfOutstandingPrincipal
	(*LoanProductRequest_ArrearsSettings_TolerancePeriod)(nil),                           // 78: proto.LoanProductRequest.ArrearsSettings.TolerancePeriod
	(*LoanProductRequest_AvailabilitySettings_BranchSettings)(nil),                       // 79: proto.LoanProductRequest.AvailabilitySettings.BranchSettings
	(*LoanProductRequest_FeesSettings_Fees)(nil),                                         // 80: proto.LoanProductRequest.FeesSettings.Fees
	(*LoanProductRequest_FeesSettings_Fees_AccountingRules)(nil),                         // 81: proto.LoanProductRequest.FeesSettings.Fees.AccountingRules
	(*LoanProductRequest_FeesSettings_Fees_AmortizationSettings)(nil),                    // 82: proto.LoanProductRequest.FeesSettings.Fees.AmortizationSettings
	(*LoanProductRequest_FeesSettings_Fees_TaxSettings)(nil),                             // 83: proto.LoanProductRequest.FeesSettings.Fees.TaxSettings
	(*LoanProductRequest_FundingSettings_FunderInterestCommission)(nil),                  // 84: proto.LoanProductRequest.FundingSettings.FunderInterestCommission
	(*LoanProductRequest_FundingSettings_OrganizationInterestCommission)(nil),            // 85: proto.LoanProductRequest.FundingSettings.OrganizationInterestCommission
	(*LoanProductRequest_GracePeriodSettings_GracePeriod)(nil),                           // 86: proto.LoanProductRequest.GracePeriodSettings.GracePeriod
	(*LoanProductRequest_InterestSettings_IndexRateSettings)(nil),                        // 87: proto.LoanProductRequest.InterestSettings.IndexRateSettings
	(*LoanProductRequest_InterestSettings_InterestRateSettings)(nil),                     // 88: proto.LoanProductRequest.InterestSettings.InterestRateSettings
	(*LoanProductRequest_InterestSettings_IndexRateSettings_InterestRate)(nil),           // 89: proto.LoanProductRequest.InterestSettings.IndexRateSettings.InterestRate
	(*LoanProductRequest_InterestSettings_IndexRateSettings_InterestRateTiers)(nil),      // 90: proto.LoanProductRequest.InterestSettings.IndexRateSettings.InterestRateTiers
	(*LoanProductRequest_InterestSettings_InterestRateSettings_InterestRate)(nil),        // 91: proto.LoanProductRequest.InterestSettings.InterestRateSettings.InterestRate
	(*LoanProductRequest_InternalControls_FourEyesPrinciple)(nil),                        // 92: proto.LoanProductRequest.InternalControls.FourEyesPrinciple
	(*LoanProductRequest_InternalControls_LockSettings)(nil),                             // 93: proto.LoanProductRequest.InternalControls.LockSettings
	(*LoanProductRequest_LoanAmountSettings_LoanAmount)(nil),                             // 94: proto.LoanProductRequest.LoanAmountSettings.LoanAmount
	(*LoanProductRequest_LoanAmountSettings_TrancheSettings)(nil),                        // 95: proto.LoanProductRequest.LoanAmountSettings.TrancheSettings
	(*LoanProductRequest_PaymentSettings_PrepaymentSettings)(nil),                        // 96: proto.LoanProductRequest.PaymentSettings.PrepaymentSettings
	(*LoanProductRequest_PaymentSettings_PrincipalPaymentSettings)(nil),                  // 97: proto.LoanProductRequest.PaymentSettings.PrincipalPaymentSettings
	(*LoanProductRequest_PaymentSettings_PrincipalPaymentSettings_Amount)(nil),           // 98: proto.LoanProductRequest.PaymentSettings.PrincipalPaymentSettings.Amount
	(*LoanProductRequest_PaymentSettings_PrincipalPaymentSettings_Percentage)(nil),       // 99: proto.LoanProductRequest.PaymentSettings.PrincipalPaymentSettings.Percentage
	(*LoanProductRequest_PenaltySettings_PenaltyRate)(nil),                               // 100: proto.LoanProductRequest.PenaltySettings.PenaltyRate
	(*LoanProductRequest_ScheduleSettings_BillingCycles)(nil),                            // 101: proto.LoanProductRequest.ScheduleSettings.BillingCycles
	(*LoanProductRequest_ScheduleSettings_FirstRepaymentDueDateOffset)(nil),              // 102: proto.LoanProductRequest.ScheduleSettings.FirstRepaymentDueDateOffset
	(*LoanProductRequest_ScheduleSettings_NumInstallments)(nil),                          // 103: proto.LoanProductRequest.ScheduleSettings.NumInstallments
	(*LoanProductRequest_ScheduleSettings_PreviewSchedule)(nil),                          // 104: proto.LoanProductRequest.ScheduleSettings.PreviewSchedule
	(*LoanProductRequest_ScheduleSettings_RoundingSettings)(nil),                         // 105: proto.LoanProductRequest.ScheduleSettings.RoundingSettings
	(*Meta)(nil), // 106: proto.Meta
}
var file_loan_product_proto_depIdxs = []int32{
	2,   // 0: proto.LoanProductResponse.data:type_name -> proto.LoanProduct
	106, // 1: proto.LoanProductResponse.meta:type_name -> proto.Meta
	4,   // 2: proto.LoanProduct.accountLinkSettings:type_name -> proto.LoanProduct.AccountLinkSettings
	5,   // 3: proto.LoanProduct.accountingSettings:type_name -> proto.LoanProduct.AccountingSettings
	6,   // 4: proto.LoanProduct.arrearsSettings:type_name -> proto.LoanProduct.ArrearsSettings
	7,   // 5: proto.LoanProduct.availabilitySettings:type_name -> proto.LoanProduct.AvailabilitySettings
	8,   // 6: proto.LoanProduct.creditArrangementSettings:type_name -> proto.LoanProduct.CreditArrangementSettings
	9,   // 7: proto.LoanProduct.currency:type_name -> proto.LoanProduct.Currency
	10,  // 8: proto.LoanProduct.feesSettings:type_name -> proto.LoanProduct.FeesSettings
	11,  // 9: proto.LoanProduct.fundingSettings:type_name -> proto.LoanProduct.FundingSettings
	12,  // 10: proto.LoanProduct.gracePeriodSettings:type_name -> proto.LoanProduct.GracePeriodSettings
	13,  // 11: proto.LoanProduct.interestSettings:type_name -> proto.LoanProduct.InterestSettings
	14,  // 12: proto.LoanProduct.internalControls:type_name -> proto.LoanProduct.InternalControls
	15,  // 13: proto.LoanProduct.loanAmountSettings:type_name -> proto.LoanProduct.LoanAmountSettings
	16,  // 14: proto.LoanProduct.newAccountSettings:type_name -> proto.LoanProduct.NewAccountSettings
	17,  // 15: proto.LoanProduct.offsetSettings:type_name -> proto.LoanProduct.OffsetSettings
	18,  // 16: proto.LoanProduct.paymentSettings:type_name -> proto.LoanProduct.PaymentSettings
	19,  // 17: proto.LoanProduct.penaltySettings:type_name -> proto.LoanProduct.PenaltySettings
	20,  // 18: proto.LoanProduct.redrawSettings:type_name -> proto.LoanProduct.RedrawSettings
	21,  // 19: proto.LoanProduct.scheduleSettings:type_name -> proto.LoanProduct.ScheduleSettings
	22,  // 20: proto.LoanProduct.securitySettings:type_name -> proto.LoanProduct.SecuritySettings
	23,  // 21: proto.LoanProduct.taxSettings:type_name -> proto.LoanProduct.TaxSettings
	24,  // 22: proto.LoanProduct.templates:type_name -> proto.LoanProduct.Templates
	55,  // 23: proto.LoanProductRequest.accountLinkSettings:type_name -> proto.LoanProductRequest.AccountLinkSettings
	56,  // 24: proto.LoanProductRequest.accountingSettings:type_name -> proto.LoanProductRequest.AccountingSettings
	57,  // 25: proto.LoanProductRequest.arrearsSettings:type_name -> proto.LoanProductRequest.ArrearsSettings
	58,  // 26: proto.LoanProductRequest.availabilitySettings:type_name -> proto.LoanProductRequest.AvailabilitySettings
	59,  // 27: proto.LoanProductRequest.creditArrangementSettings:type_name -> proto.LoanProductRequest.CreditArrangementSettings
	60,  // 28: proto.LoanProductRequest.currency:type_name -> proto.LoanProductRequest.Currency
	61,  // 29: proto.LoanProductRequest.feesSettings:type_name -> proto.LoanProductRequest.FeesSettings
	62,  // 30: proto.LoanProductRequest.fundingSettings:type_name -> proto.LoanProductRequest.FundingSettings
	63,  // 31: proto.LoanProductRequest.gracePeriodSettings:type_name -> proto.LoanProductRequest.GracePeriodSettings
	64,  // 32: proto.LoanProductRequest.interestSettings:type_name -> proto.LoanProductRequest.InterestSettings
	65,  // 33: proto.LoanProductRequest.internalControls:type_name -> proto.LoanProductRequest.InternalControls
	66,  // 34: proto.LoanProductRequest.loanAmountSettings:type_name -> proto.LoanProductRequest.LoanAmountSettings
	67,  // 35: proto.LoanProductRequest.newAccountSettings:type_name -> proto.LoanProductRequest.NewAccountSettings
	68,  // 36: proto.LoanProductRequest.offsetSettings:type_name -> proto.LoanProductRequest.OffsetSettings
	69,  // 37: proto.LoanProductRequest.paymentSettings:type_name -> proto.LoanProductRequest.PaymentSettings
	70,  // 38: proto.LoanProductRequest.penaltySettings:type_name -> proto.LoanProductRequest.PenaltySettings
	71,  // 39: proto.LoanProductRequest.redrawSettings:type_name -> proto.LoanProductRequest.RedrawSettings
	72,  // 40: proto.LoanProductRequest.scheduleSettings:type_name -> proto.LoanProductRequest.ScheduleSettings
	73,  // 41: proto.LoanProductRequest.securitySettings:type_name -> proto.LoanProductRequest.SecuritySettings
	74,  // 42: proto.LoanProductRequest.taxSettings:type_name -> proto.LoanProductRequest.TaxSettings
	75,  // 43: proto.LoanProductRequest.templates:type_name -> proto.LoanProductRequest.Templates
	25,  // 44: proto.LoanProduct.AccountingSettings.accountingRules:type_name -> proto.LoanProduct.AccountingSettings.AccountingRules
	26,  // 45: proto.LoanProduct.ArrearsSettings.tolerancePercentageOfOutstandingPrincipal:type_name -> proto.LoanProduct.ArrearsSettings.TolerancePercentageOfOutstandingPrincipal
	27,  // 46: proto.LoanProduct.ArrearsSettings.tolerancePeriod:type_name -> proto.LoanProduct.ArrearsSettings.TolerancePeriod
	28,  // 47: proto.LoanProduct.AvailabilitySettings.branchSettings:type_name -> proto.LoanProduct.AvailabilitySettings.BranchSettings
	29,  // 48: proto.LoanProduct.FeesSettings.fees:type_name -> proto.LoanProduct.FeesSettings.Fees
	33,  // 49: proto.LoanProduct.FundingSettings.funderInterestCommission:type_name -> proto.LoanProduct.FundingSettings.FunderInterestCommission
	34,  // 50: proto.LoanProduct.FundingSettings.organizationInterestCommission:type_name -> proto.LoanProduct.FundingSettings.OrganizationInterestCommission
	35,  // 51: proto.LoanProduct.GracePeriodSettings.gracePeriod:type_name -> proto.LoanProduct.GracePeriodSettings.GracePeriod
	36,  // 52: proto.LoanProduct.InterestSettings.indexRateSettings:type_name -> proto.LoanProduct.InterestSettings.IndexRateSettings
	37,  // 53: proto.LoanProduct.InterestSettings.interestRateSettings:type_name -> proto.LoanProduct.InterestSettings.InterestRateSettings
	41,  // 54: proto.LoanProduct.InternalControls.fourEyesPrinciple:type_name -> proto.LoanProduct.InternalControls.FourEyesPrinciple
	42,  // 55: proto.LoanProduct.InternalControls.lockSettings:type_name -> proto.LoanProduct.InternalControls.LockSettings
	43,  // 56: proto.LoanProduct.LoanAmountSettings.loanAmount:type_name -> proto.LoanProduct.LoanAmountSettings.LoanAmount
	44,  // 57: proto.LoanProduct.LoanAmountSettings.trancheSettings:type_name -> proto.LoanProduct.LoanAmountSettings.TrancheSettings
	45,  // 58: proto.LoanProduct.PaymentSettings.prepaymentSettings:type_name -> proto.LoanProduct.PaymentSettings.PrepaymentSettings
	46,  // 59: proto.LoanProduct.PaymentSettings.principalPaymentSettings:type_name -> proto.LoanProduct.PaymentSettings.PrincipalPaymentSettings
	49,  // 60: proto.LoanProduct.PenaltySettings.penaltyRate:type_name -> proto.LoanProduct.PenaltySettings.PenaltyRate
	50,  // 61: proto.LoanProduct.ScheduleSettings.billingCycles:type_name -> proto.LoanProduct.ScheduleSettings.BillingCycles
	51,  // 62: proto.LoanProduct.ScheduleSettings.firstRepaymentDueDateOffset:type_name -> proto.LoanProduct.ScheduleSettings.FirstRepaymentDueDateOffset
	52,  // 63: proto.LoanProduct.ScheduleSettings.numInstallments:type_name -> proto.LoanProduct.ScheduleSettings.NumInstallments
	53,  // 64: proto.LoanProduct.ScheduleSettings.previewSchedule:type_name -> proto.LoanProduct.ScheduleSettings.PreviewSchedule
	54,  // 65: proto.LoanProduct.ScheduleSettings.roundingSettings:type_name -> proto.LoanProduct.ScheduleSettings.RoundingSettings
	30,  // 66: proto.LoanProduct.FeesSettings.Fees.accountingRules:type_name -> proto.LoanProduct.FeesSettings.Fees.AccountingRules
	31,  // 67: proto.LoanProduct.FeesSettings.Fees.amortizationSettings:type_name -> proto.LoanProduct.FeesSettings.Fees.AmortizationSettings
	32,  // 68: proto.LoanProduct.FeesSettings.Fees.taxSettings:type_name -> proto.LoanProduct.FeesSettings.Fees.TaxSettings
	38,  // 69: proto.LoanProduct.InterestSettings.IndexRateSettings.interestRate:type_name -> proto.LoanProduct.InterestSettings.IndexRateSettings.InterestRate
	39,  // 70: proto.LoanProduct.InterestSettings.IndexRateSettings.interestRateTiers:type_name -> proto.LoanProduct.InterestSettings.IndexRateSettings.InterestRateTiers
	40,  // 71: proto.LoanProduct.InterestSettings.InterestRateSettings.interestRate:type_name -> proto.LoanProduct.InterestSettings.InterestRateSettings.InterestRate
	47,  // 72: proto.LoanProduct.PaymentSettings.PrincipalPaymentSettings.amount:type_name -> proto.LoanProduct.PaymentSettings.PrincipalPaymentSettings.Amount
	48,  // 73: proto.LoanProduct.PaymentSettings.PrincipalPaymentSettings.percentage:type_name -> proto.LoanProduct.PaymentSettings.PrincipalPaymentSettings.Percentage
	76,  // 74: proto.LoanProductRequest.AccountingSettings.accountingRules:type_name -> proto.LoanProductRequest.AccountingSettings.AccountingRules
	77,  // 75: proto.LoanProductRequest.ArrearsSettings.tolerancePercentageOfOutstandingPrincipal:type_name -> proto.LoanProductRequest.ArrearsSettings.TolerancePercentageOfOutstandingPrincipal
	78,  // 76: proto.LoanProductRequest.ArrearsSettings.tolerancePeriod:type_name -> proto.LoanProductRequest.ArrearsSettings.TolerancePeriod
	79,  // 77: proto.LoanProductRequest.AvailabilitySettings.branchSettings:type_name -> proto.LoanProductRequest.AvailabilitySettings.BranchSettings
	80,  // 78: proto.LoanProductRequest.FeesSettings.fees:type_name -> proto.LoanProductRequest.FeesSettings.Fees
	84,  // 79: proto.LoanProductRequest.FundingSettings.funderInterestCommission:type_name -> proto.LoanProductRequest.FundingSettings.FunderInterestCommission
	85,  // 80: proto.LoanProductRequest.FundingSettings.organizationInterestCommission:type_name -> proto.LoanProductRequest.FundingSettings.OrganizationInterestCommission
	86,  // 81: proto.LoanProductRequest.GracePeriodSettings.gracePeriod:type_name -> proto.LoanProductRequest.GracePeriodSettings.GracePeriod
	87,  // 82: proto.LoanProductRequest.InterestSettings.indexRateSettings:type_name -> proto.LoanProductRequest.InterestSettings.IndexRateSettings
	88,  // 83: proto.LoanProductRequest.InterestSettings.interestRateSettings:type_name -> proto.LoanProductRequest.InterestSettings.InterestRateSettings
	92,  // 84: proto.LoanProductRequest.InternalControls.fourEyesPrinciple:type_name -> proto.LoanProductRequest.InternalControls.FourEyesPrinciple
	93,  // 85: proto.LoanProductRequest.InternalControls.lockSettings:type_name -> proto.LoanProductRequest.InternalControls.LockSettings
	94,  // 86: proto.LoanProductRequest.LoanAmountSettings.loanAmount:type_name -> proto.LoanProductRequest.LoanAmountSettings.LoanAmount
	95,  // 87: proto.LoanProductRequest.LoanAmountSettings.trancheSettings:type_name -> proto.LoanProductRequest.LoanAmountSettings.TrancheSettings
	96,  // 88: proto.LoanProductRequest.PaymentSettings.prepaymentSettings:type_name -> proto.LoanProductRequest.PaymentSettings.PrepaymentSettings
	97,  // 89: proto.LoanProductRequest.PaymentSettings.principalPaymentSettings:type_name -> proto.LoanProductRequest.PaymentSettings.PrincipalPaymentSettings
	100, // 90: proto.LoanProductRequest.PenaltySettings.penaltyRate:type_name -> proto.LoanProductRequest.PenaltySettings.PenaltyRate
	101, // 91: proto.LoanProductRequest.ScheduleSettings.billingCycles:type_name -> proto.LoanProductRequest.ScheduleSettings.BillingCycles
	102, // 92: proto.LoanProductRequest.ScheduleSettings.firstRepaymentDueDateOffset:type_name -> proto.LoanProductRequest.ScheduleSettings.FirstRepaymentDueDateOffset
	103, // 93: proto.LoanProductRequest.ScheduleSettings.numInstallments:type_name -> proto.LoanProductRequest.ScheduleSettings.NumInstallments
	104, // 94: proto.LoanProductRequest.ScheduleSettings.previewSchedule:type_name -> proto.LoanProductRequest.ScheduleSettings.PreviewSchedule
	105, // 95: proto.LoanProductRequest.ScheduleSettings.roundingSettings:type_name -> proto.LoanProductRequest.ScheduleSettings.RoundingSettings
	81,  // 96: proto.LoanProductRequest.FeesSettings.Fees.accountingRules:type_name -> proto.LoanProductRequest.FeesSettings.Fees.AccountingRules
	82,  // 97: proto.LoanProductRequest.FeesSettings.Fees.amortizationSettings:type_name -> proto.LoanProductRequest.FeesSettings.Fees.AmortizationSettings
	83,  // 98: proto.LoanProductRequest.FeesSettings.Fees.taxSettings:type_name -> proto.LoanProductRequest.FeesSettings.Fees.TaxSettings
	89,  // 99: proto.LoanProductRequest.InterestSettings.IndexRateSettings.interestRate:type_name -> proto.LoanProductRequest.InterestSettings.IndexRateSettings.InterestRate
	90,  // 100: proto.LoanProductRequest.InterestSettings.IndexRateSettings.interestRateTiers:type_name -> proto.LoanProductRequest.InterestSettings.IndexRateSettings.InterestRateTiers
	91,  // 101: proto.LoanProductRequest.InterestSettings.InterestRateSettings.interestRate:type_name -> proto.LoanProductRequest.InterestSettings.InterestRateSettings.InterestRate
	98,  // 102: proto.LoanProductRequest.PaymentSettings.PrincipalPaymentSettings.amount:type_name -> proto.LoanProductRequest.PaymentSettings.PrincipalPaymentSettings.Amount
	99,  // 103: proto.LoanProductRequest.PaymentSettings.PrincipalPaymentSettings.percentage:type_name -> proto.LoanProductRequest.PaymentSettings.PrincipalPaymentSettings.Percentage
	104, // [104:104] is the sub-list for method output_type
	104, // [104:104] is the sub-list for method input_type
	104, // [104:104] is the sub-list for extension type_name
	104, // [104:104] is the sub-list for extension extendee
	0,   // [0:104] is the sub-list for field type_name
}

func init() { file_loan_product_proto_init() }
func file_loan_product_proto_init() {
	if File_loan_product_proto != nil {
		return
	}
	file_general_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_loan_product_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_AccountLinkSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_AccountingSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_ArrearsSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_AvailabilitySettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_CreditArrangementSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_Currency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_FeesSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_FundingSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_GracePeriodSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_InterestSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_InternalControls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_LoanAmountSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_NewAccountSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_OffsetSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_PaymentSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_PenaltySettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_RedrawSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_ScheduleSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_SecuritySettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_TaxSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_Templates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_AccountingSettings_AccountingRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_ArrearsSettings_TolerancePercentageOfOutstandingPrincipal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_ArrearsSettings_TolerancePeriod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_AvailabilitySettings_BranchSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_FeesSettings_Fees); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_FeesSettings_Fees_AccountingRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_FeesSettings_Fees_AmortizationSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_FeesSettings_Fees_TaxSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_FundingSettings_FunderInterestCommission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_FundingSettings_OrganizationInterestCommission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_GracePeriodSettings_GracePeriod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_InterestSettings_IndexRateSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_InterestSettings_InterestRateSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_InterestSettings_IndexRateSettings_InterestRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_InterestSettings_IndexRateSettings_InterestRateTiers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_InterestSettings_InterestRateSettings_InterestRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_InternalControls_FourEyesPrinciple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_InternalControls_LockSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_LoanAmountSettings_LoanAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_LoanAmountSettings_TrancheSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_PaymentSettings_PrepaymentSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_PaymentSettings_PrincipalPaymentSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_PaymentSettings_PrincipalPaymentSettings_Amount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_PaymentSettings_PrincipalPaymentSettings_Percentage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_PenaltySettings_PenaltyRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_ScheduleSettings_BillingCycles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_ScheduleSettings_FirstRepaymentDueDateOffset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_ScheduleSettings_NumInstallments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_ScheduleSettings_PreviewSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct_ScheduleSettings_RoundingSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_AccountLinkSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_AccountingSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_ArrearsSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_AvailabilitySettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_CreditArrangementSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_Currency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_FeesSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_FundingSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_GracePeriodSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_InterestSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_InternalControls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_LoanAmountSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_NewAccountSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_OffsetSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_PaymentSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_PenaltySettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_RedrawSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_ScheduleSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_SecuritySettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_TaxSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_Templates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_AccountingSettings_AccountingRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_ArrearsSettings_TolerancePercentageOfOutstandingPrincipal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_ArrearsSettings_TolerancePeriod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_AvailabilitySettings_BranchSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_FeesSettings_Fees); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_FeesSettings_Fees_AccountingRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_FeesSettings_Fees_AmortizationSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_FeesSettings_Fees_TaxSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_FundingSettings_FunderInterestCommission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_FundingSettings_OrganizationInterestCommission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_GracePeriodSettings_GracePeriod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_InterestSettings_IndexRateSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_InterestSettings_InterestRateSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_InterestSettings_IndexRateSettings_InterestRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_InterestSettings_IndexRateSettings_InterestRateTiers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_InterestSettings_InterestRateSettings_InterestRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_InternalControls_FourEyesPrinciple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_InternalControls_LockSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_LoanAmountSettings_LoanAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_LoanAmountSettings_TrancheSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_PaymentSettings_PrepaymentSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_PaymentSettings_PrincipalPaymentSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_PaymentSettings_PrincipalPaymentSettings_Amount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_PaymentSettings_PrincipalPaymentSettings_Percentage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_PenaltySettings_PenaltyRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_ScheduleSettings_BillingCycles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_ScheduleSettings_FirstRepaymentDueDateOffset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_ScheduleSettings_NumInstallments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_ScheduleSettings_PreviewSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_product_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductRequest_ScheduleSettings_RoundingSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_loan_product_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   106,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_loan_product_proto_goTypes,
		DependencyIndexes: file_loan_product_proto_depIdxs,
		MessageInfos:      file_loan_product_proto_msgTypes,
	}.Build()
	File_loan_product_proto = out.File
	file_loan_product_proto_rawDesc = nil
	file_loan_product_proto_goTypes = nil
	file_loan_product_proto_depIdxs = nil
}
